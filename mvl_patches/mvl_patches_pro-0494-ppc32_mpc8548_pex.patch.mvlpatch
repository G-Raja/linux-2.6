#! /usr/bin/env bash
# Patch: -ppc32_mpc8548_pex.patch
# Date: Thu Apr 20 12:21:32 2006
# Source: MontaVista Software, Inc.
# MR: 16903
# Type: Enhancement
# Disposition: MontaVista
# Signed-off-by: Gennadiy Kurtsman <gkurtsman@ru.mvista.com>
# Description:
#     PCI express driver
# 

PATCHNUM=494
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 16903
Type: Enhancement
Disposition: MontaVista
Signed-off-by: Gennadiy Kurtsman <gkurtsman@ru.mvista.com>
Description:
    PCI express driver

 arch/ppc/platforms/85xx/Kconfig              |   14 +
 arch/ppc/platforms/85xx/mpc85xx_cds_common.c |   51 ++++++
 arch/ppc/platforms/85xx/mpc85xx_cds_common.h |   35 ++--
 arch/ppc/syslib/Makefile                     |    1 
 arch/ppc/syslib/mpc85xx_pex_errata.c         |  157 ++++++++++++++++++++
 arch/ppc/syslib/ppc85xx_setup.c              |  205 ++++++++++++++++++++++++++-
 arch/ppc/syslib/ppc85xx_setup.h              |    4 
 include/asm-ppc/immap_85xx.h                 |   75 +++++++++
 include/asm-ppc/irq.h                        |   20 ++
 include/asm-ppc/mpc85xx.h                    |    2 
 mvl_patches/pro-0494.c                       |   16 ++
 11 files changed, 550 insertions(+), 30 deletions(-)

Index: linux-2.6.10/arch/ppc/platforms/85xx/Kconfig
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/85xx/Kconfig
+++ linux-2.6.10/arch/ppc/platforms/85xx/Kconfig
@@ -74,10 +74,22 @@ config MPC8560
 	default y
 
 config 85xx_PCI2
-	bool "Supprt for 2nd PCI host controller"
+	bool "Support for 2nd PCI host controller"
 	depends on MPC8555_CDS
 	default y
 
+config PEX
+	bool "PCI Express support"
+	depends on PCI && MPC8548
+	help
+	  !!!!!!!!!! WARNING !!!!!!!!!!
+	  Enables Support for PCI Express
+	  This requires hardware modification to work correctly
+	  and will BREAK the PCI bus
+	  Please contact Freescale for details
+	  Thank You
+	  !!!!!!!!!! WARNING !!!!!!!!!!
+
 config PPC_GEN550
 	bool
 	depends on MPC8540 || SBC8560 || MPC8555
Index: linux-2.6.10/arch/ppc/platforms/85xx/mpc85xx_cds_common.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/85xx/mpc85xx_cds_common.c
+++ linux-2.6.10/arch/ppc/platforms/85xx/mpc85xx_cds_common.c
@@ -114,10 +114,17 @@ static volatile u8 * cadmus;
 static u_char mpc85xx_cds_openpic_initsenses[] __initdata = {
 	MPC85XX_INTERNAL_IRQ_SENSES,
 #if defined(CONFIG_PCI)
+#if defined(CONFIG_PEX)
+	(IRQ_SENSE_LEVEL | IRQ_POLARITY_POSITIVE),	/* External 0: PEX INTA  */
+	(IRQ_SENSE_LEVEL | IRQ_POLARITY_POSITIVE),	/* External 1: PEX INTB  */
+	(IRQ_SENSE_LEVEL | IRQ_POLARITY_POSITIVE),	/* External 2: PEX INTC  */
+	(IRQ_SENSE_LEVEL | IRQ_POLARITY_POSITIVE),	/* External 3: PEX INTD  */
+#else
         (IRQ_SENSE_LEVEL | IRQ_POLARITY_NEGATIVE),      /* External 0: PCI1 slot */
         (IRQ_SENSE_LEVEL | IRQ_POLARITY_NEGATIVE),      /* External 1: PCI1 slot */
         (IRQ_SENSE_LEVEL | IRQ_POLARITY_NEGATIVE),      /* External 2: PCI1 slot */
         (IRQ_SENSE_LEVEL | IRQ_POLARITY_NEGATIVE),      /* External 3: PCI1 slot */
+#endif
 #else
         0x0,                            /* External  0: */
         0x0,                            /* External  1: */
@@ -189,7 +196,6 @@ void __init
 mpc85xx_cds_init_IRQ(void)
 {
 	bd_t *binfo = (bd_t *) __res;
-	int i;
 
         /* Determine the Physical Address of the OpenPIC regs */
         phys_addr_t OpenPIC_PAddr = binfo->bi_immr_base + MPC85xx_OPENPIC_OFFSET;
@@ -211,7 +217,9 @@ mpc85xx_cds_init_IRQ(void)
          */
         openpic_init(MPC85xx_OPENPIC_IRQ_OFFSET);
 
+#ifdef via686found	/* BSP cond */
 #ifdef CONFIG_PCI
+#ifndef CONFIG_PEX
  	openpic_hookup_cascade(PIRQ0A, "82c59 cascade", i8259_irq);
  
  	for (i = 0; i < NUM_8259_INTERRUPTS; i++)
@@ -219,6 +227,8 @@ mpc85xx_cds_init_IRQ(void)
  
  	i8259_init(0);
 #endif
+#endif
+#endif
  
 #ifdef CONFIG_CPM2
 	/* Setup CPM2 PIC */
@@ -230,6 +240,14 @@ mpc85xx_cds_init_IRQ(void)
         return;
 }
 
+#ifdef CONFIG_RAPIDIO
+void
+platform_rio_init(void)
+{
+	mpc85xx_rio_setup(MPC85XX_RIO_MEM, MPC85XX_RIO_MEM_SIZE);
+}
+#endif /* CONFIG_RAPIDIO */
+
 #ifdef CONFIG_PCI
 /*
  * interrupt routing
@@ -237,6 +255,15 @@ mpc85xx_cds_init_IRQ(void)
 int
 mpc85xx_map_irq(struct pci_dev *dev, unsigned char idsel, unsigned char pin)
 {
+#ifdef CONFIG_PEX
+	char pci_irq_table[][4] =
+	{
+		{ MPC85xx_IRQ_EXT0, MPC85xx_IRQ_EXT1, MPC85xx_IRQ_EXT2, MPC85xx_IRQ_EXT3 },
+	};
+	const long min_idsel = 0, max_idsel = 0, irqs_per_slot = 4;
+
+	return PCI_IRQ_TABLE_LOOKUP;
+#else
 	struct pci_controller *hose = pci_bus_to_hose(dev->bus->number);
 
 	if (!hose->index)
@@ -251,6 +278,17 @@ mpc85xx_map_irq(struct pci_dev *dev, uns
 			/* Note IRQ assignment for slots is based on which slot the elysium is
 			 * in -- in this setup elysium is in slot #2 (this PIRQA as first
 			 * interrupt on slot */
+#ifdef CONFIG_MPC8548_CDS
+		{
+			{ 0, 1, 2, 3 }, /* 18 - Tsi310 */
+			{ 0, 1, 2, 3 }, /* 19 - Slot 2 */
+			{ 0, 1, 2, 3 }, /* 20 - Slot 3 */
+			{ 0, 1, 2, 3 }, /* 21 - Slot 4 */
+			{ 0, 1, 2, 3 }, /* 22 - Slot 5 */
+		};
+
+		const long min_idsel = 17, max_idsel = 22, irqs_per_slot = 4;
+#else
 		{
 			{ 0, 1, 2, 3 }, /* 16 - PMC */
 			{ 0, 1, 2, 3 }, /* 17 P2P (Tsi320) */
@@ -261,6 +299,7 @@ mpc85xx_map_irq(struct pci_dev *dev, uns
 		};
 
 		const long min_idsel = 16, max_idsel = 21, irqs_per_slot = 4;
+#endif
 		int i, j;
 
 		for (i = 0; i < 6; i++)
@@ -284,6 +323,7 @@ mpc85xx_map_irq(struct pci_dev *dev, uns
 
 		return PCI_IRQ_TABLE_LOOKUP;
 	}
+#endif
 }
 
 #define ARCADIA_HOST_BRIDGE_IDSEL     17
@@ -294,8 +334,13 @@ extern int mpc85xx_pci1_last_busno;
 int
 mpc85xx_exclude_device(u_char bus, u_char devfn)
 {
-	if (bus == 0 && PCI_SLOT(devfn) == 0)
-		return PCIBIOS_DEVICE_NOT_FOUND;
+#ifdef CONFIG_PEX
+	return PCIBIOS_SUCCESSFUL;
+#endif
+
+if (bus == 0 && PCI_SLOT(devfn) == 0)
+	return PCIBIOS_DEVICE_NOT_FOUND;
+
 #ifdef CONFIG_85xx_PCI2
 	if (mpc85xx_pci1_last_busno) 
 		if (bus == (mpc85xx_pci1_last_busno + 1) && PCI_SLOT(devfn) == 0)
Index: linux-2.6.10/arch/ppc/platforms/85xx/mpc85xx_cds_common.h
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/85xx/mpc85xx_cds_common.h
+++ linux-2.6.10/arch/ppc/platforms/85xx/mpc85xx_cds_common.h
@@ -37,13 +37,6 @@
 #define CDS_RTC_ADDR	(0xf8000000)
 #define CDS_RTC_SIZE	(8 * 1024)
 
-/* PCI config */
-#define PCI1_CFG_ADDR_OFFSET	(0x8000)
-#define PCI1_CFG_DATA_OFFSET	(0x8004)
-
-#define PCI2_CFG_ADDR_OFFSET	(0x9000)
-#define PCI2_CFG_DATA_OFFSET	(0x9004)
-
 /* PCI interrupt controller */
 #define PIRQ0A                   MPC85xx_IRQ_EXT0
 #define PIRQ0B                   MPC85xx_IRQ_EXT1
@@ -53,29 +46,41 @@
 
 /* PCI 1 memory map */
 #define MPC85XX_PCI1_LOWER_IO        0x00000000
-#define MPC85XX_PCI1_UPPER_IO        0x00ffffff
+#define MPC85XX_PCI1_UPPER_IO        0x007fffff
 
 #define MPC85XX_PCI1_LOWER_MEM       0x80000000
-#define MPC85XX_PCI1_UPPER_MEM       0x9fffffff
+#define MPC85XX_PCI1_UPPER_MEM       0x8fffffff
 
 #define MPC85XX_PCI1_IO_BASE         0xe2000000
 #define MPC85XX_PCI1_MEM_OFFSET      0x00000000
 
-#define MPC85XX_PCI1_IO_SIZE         0x01000000
+#define MPC85XX_PCI1_IO_SIZE         0x00800000
 
 /* PCI 2 memory map */
 /* Note: the standard PPC fixups will cause IO space to get bumped by
  * hose->io_base_virt - isa_io_base => MPC85XX_PCI1_IO_SIZE */
 #define MPC85XX_PCI2_LOWER_IO        0x00000000
-#define MPC85XX_PCI2_UPPER_IO        0x00ffffff
+#define MPC85XX_PCI2_UPPER_IO        0x007fffff
 
-#define MPC85XX_PCI2_LOWER_MEM       0xa0000000
-#define MPC85XX_PCI2_UPPER_MEM       0xbfffffff
+#define MPC85XX_PCI2_LOWER_MEM       0x90000000
+#define MPC85XX_PCI2_UPPER_MEM       0x9fffffff
 
-#define MPC85XX_PCI2_IO_BASE         0xe3000000
+#define MPC85XX_PCI2_IO_BASE         0xe2800000
 #define MPC85XX_PCI2_MEM_OFFSET      0x00000000
 
-#define MPC85XX_PCI2_IO_SIZE         0x01000000
+#define MPC85XX_PCI2_IO_SIZE         0x00800000
+
+/* PEX memory map */
+#define MPC85XX_PEX_LOWER_IO        0x00000000
+#define MPC85XX_PEX_UPPER_IO        0x00ffffff
+
+#define MPC85XX_PEX_LOWER_MEM       0xa0000000
+#define MPC85XX_PEX_UPPER_MEM       0xbfffffff
+
+#define MPC85XX_PEX_IO_BASE         0xe3000000
+#define MPC85XX_PEX_MEM_OFFSET      0x00000000
+
+#define MPC85XX_PEX_IO_SIZE         0x01000000
 
 #define NR_8259_INTS		     16
 #define CPM_IRQ_OFFSET		     NR_8259_INTS
Index: linux-2.6.10/arch/ppc/syslib/mpc85xx_pex_errata.c
===================================================================
--- /dev/null
+++ linux-2.6.10/arch/ppc/syslib/mpc85xx_pex_errata.c
@@ -0,0 +1,157 @@
+/*
+ * Support for indirect PCI bridges.
+ *
+ * Copyright (C) 1998 Gabriel Paubert.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License
+ * as published by the Free Software Foundation; either version
+ * 2 of the License, or (at your option) any later version.
+ *
+ * "Temporary" MPC8548 Errata file -
+ * The standard indirect_pci code should work with future silicon versions.
+ */
+
+#include <linux/kernel.h>
+#include <linux/pci.h>
+#include <linux/delay.h>
+#include <linux/string.h>
+#include <linux/init.h>
+#include <linux/bootmem.h>
+
+#include <asm/io.h>
+#include <asm/prom.h>
+#include <asm/pci-bridge.h>
+#include <asm/machdep.h>
+
+#define PCI_CFG_OUT out_be32
+
+/* ERRATA PCI-Ex 14 PEX Controller timeout */
+#define PEX_FIX		out_be32(hose->cfg_addr+0x4, 0x0400ffff)
+
+static int
+indirect_read_config_pex(struct pci_bus *bus, unsigned int devfn, int offset,
+		     int len, u32 *val)
+{
+	struct pci_controller *hose = bus->sysdata;
+	void __iomem *cfg_data;
+	u32 temp;
+
+	if (ppc_md.pci_exclude_device)
+		if (ppc_md.pci_exclude_device(bus->number, devfn))
+			return PCIBIOS_DEVICE_NOT_FOUND;
+
+	/* Possible artefact of CDCpp50937 needs further investigation */
+	if (devfn != 0x0)
+		return PCIBIOS_DEVICE_NOT_FOUND;
+
+	PEX_FIX;
+	PCI_CFG_OUT(hose->cfg_addr,
+		 (0x80000000 | ((offset & 0xf00) << 16) |
+		  ((bus->number - hose->bus_offset) << 16)
+		  | (devfn << 8) | ((offset & 0xfc) )));
+
+	/*
+	 * Note: the caller has already checked that offset is
+	 * suitably aligned and that len is 1, 2 or 4.
+	 */
+	/* ERRATA PCI-Ex 12 - Configuration Address/Data Alignment */
+	cfg_data = (void __iomem *)hose->cfg_data;
+	PEX_FIX;
+	temp = in_le32(cfg_data);
+	switch (len) {
+	case 1:
+		*val = (temp >> (((offset & 3))*8)) & 0xff;
+		break;
+	case 2:
+		*val = (temp >> (((offset & 3))*8)) & 0xffff;
+		break;
+	default:
+		*val = temp;
+		break;
+	}
+	return PCIBIOS_SUCCESSFUL;
+}
+
+static int
+indirect_write_config_pex(struct pci_bus *bus, unsigned int devfn, int offset,
+		      int len, u32 val)
+{
+	struct pci_controller *hose = bus->sysdata;
+	void __iomem *cfg_data;
+	u32 temp;
+
+	if (ppc_md.pci_exclude_device)
+		if (ppc_md.pci_exclude_device(bus->number, devfn))
+			return PCIBIOS_DEVICE_NOT_FOUND;
+
+
+	/* Possible artefact of CDCpp50937 needs further investigation */
+	if (devfn != 0x0)
+		return PCIBIOS_DEVICE_NOT_FOUND;
+
+	PEX_FIX;
+	PCI_CFG_OUT(hose->cfg_addr,
+		 (0x80000000 | ((offset & 0xf00) << 16) |
+		  ((bus->number - hose->bus_offset) << 16)
+		  | (devfn << 8) | ((offset & 0xfc) )));
+
+	/*
+	 * Note: the caller has already checked that offset is
+	 * suitably aligned and that len is 1, 2 or 4.
+	 */
+	/* ERRATA PCI-Ex 12 - Configuration Address/Data Alignment */
+	cfg_data = (void __iomem *)hose->cfg_data;
+	switch (len) {
+	case 1:
+		PEX_FIX;
+		temp = in_le32(cfg_data);
+		temp = (temp & ~(0xff << ((offset & 3) * 8))) |
+			(val << ((offset & 3) * 8));
+		PEX_FIX;
+		out_le32(cfg_data, temp);
+		break;
+	case 2:
+		PEX_FIX;
+		temp = in_le32(cfg_data);
+		temp = (temp & ~(0xffff << ((offset & 3) * 8)));
+		temp |= (val << ((offset & 3) * 8)) ;
+		PEX_FIX;
+		out_le32(cfg_data, temp);
+		break;
+	default:
+		PEX_FIX;
+		out_le32(cfg_data, val);
+		break;
+	}
+	PEX_FIX;
+	return PCIBIOS_SUCCESSFUL;
+}
+
+static struct pci_ops indirect_pex_ops = {
+	indirect_read_config_pex,
+	indirect_write_config_pex
+};
+
+void __init
+setup_indirect_pex_nomap(struct pci_controller* hose, void __iomem * cfg_addr,
+	void __iomem * cfg_data)
+{
+	hose->cfg_addr = cfg_addr;
+	hose->cfg_data = cfg_data;
+	hose->ops = &indirect_pex_ops;
+}
+
+void __init
+setup_indirect_pex(struct pci_controller* hose, u32 cfg_addr, u32 cfg_data)
+{
+	unsigned long base = cfg_addr & PAGE_MASK;
+	void __iomem *mbase, *addr, *data;
+	mbase = ioremap(base, PAGE_SIZE);
+	addr = mbase + (cfg_addr & ~PAGE_MASK);
+	if ((cfg_data & PAGE_MASK) != base)
+		mbase = ioremap(cfg_data & PAGE_MASK, PAGE_SIZE);
+	data = mbase + (cfg_data & ~PAGE_MASK);
+	setup_indirect_pex_nomap(hose, addr, data);
+}
+
Index: linux-2.6.10/arch/ppc/syslib/ppc85xx_setup.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/ppc85xx_setup.c
+++ linux-2.6.10/arch/ppc/syslib/ppc85xx_setup.c
@@ -161,11 +161,15 @@ extern void mpc85xx_cds_enable_via(struc
 extern void mpc85xx_cds_fixup_via(struct pci_controller *hose);
 #endif
 
+extern int mpc85xx_map_irq(struct pci_dev *dev, unsigned char idsel, unsigned char pin);
+extern int mpc85xx_exclude_device(u_char bus, u_char devfn);
+
+#ifndef CONFIG_PEX
 static void __init
 mpc85xx_setup_pci1(struct pci_controller *hose)
 {
-	volatile struct ccsr_pci *pci;
-	volatile struct ccsr_guts *guts;
+	struct ccsr_pci *pci;
+	struct ccsr_guts *guts;
 	unsigned short temps;
 	bd_t *binfo = (bd_t *) __res;
 
@@ -220,15 +224,11 @@ mpc85xx_setup_pci1(struct pci_controller
 					   Mem, Snoop R/W, 2G */
 }
 
-
-extern int mpc85xx_map_irq(struct pci_dev *dev, unsigned char idsel, unsigned char pin);
-extern int mpc85xx_exclude_device(u_char bus, u_char devfn);
-
 #ifdef CONFIG_85xx_PCI2
 static void __init
 mpc85xx_setup_pci2(struct pci_controller *hose)
 {
-	volatile struct ccsr_pci *pci;
+	struct ccsr_pci *pci;
 	unsigned short temps;
 	bd_t *binfo = (bd_t *) __res;
 
@@ -271,6 +271,146 @@ mpc85xx_setup_pci2(struct pci_controller
 					   Mem, Snoop R/W, 2G */
 }
 #endif /* CONFIG_85xx_PCI2 */
+#endif
+
+#ifdef CONFIG_PEX
+struct local_window {
+	int number;
+	int target;
+	u32 base;
+	u32 size;
+};
+
+static void __init
+mpc85xx_pci_law_fixup(void)
+{
+	int i, number, empty = 0;
+	u32 *lawbase, lawar, target;
+	int map[3] = {0, 0, 0};
+	struct local_window lw[3][2] = {
+		{{
+			.number = -1,
+			.target = 0,
+			.base = MPC85XX_PCI1_LOWER_MEM,
+			.size = (__ilog2(MPC85XX_PCI1_UPPER_MEM - MPC85XX_PCI1_LOWER_MEM + 1) - 1),
+		},
+		{
+			.number = -1,
+			.target = 0,
+			.base = MPC85XX_PCI1_IO_BASE,
+			.size = (__ilog2(MPC85XX_PCI1_IO_SIZE) - 1),
+		},},
+		{ {
+			.number = -1,
+			.target = 1,
+			.base = MPC85XX_PCI2_LOWER_MEM,
+			.size = (__ilog2(MPC85XX_PCI2_UPPER_MEM - MPC85XX_PCI2_LOWER_MEM + 1) - 1),
+		},
+		{
+			.number = -1,
+			.target = 1,
+			.base = MPC85XX_PCI2_IO_BASE,
+			.size = (__ilog2(MPC85XX_PCI2_IO_SIZE) - 1),
+		},},
+		{ {
+			.number = -1,
+			.target = 2,
+			.base = MPC85XX_PEX_LOWER_MEM,
+			.size = (__ilog2(MPC85XX_PEX_UPPER_MEM - MPC85XX_PEX_LOWER_MEM + 1) - 1),
+		},
+		{
+			.number = -1,
+			.target = 2,
+			.base = MPC85XX_PEX_IO_BASE,
+			.size = (__ilog2(MPC85XX_PEX_IO_SIZE) - 1),
+		} }
+	};
+	struct local_window *lwp;
+
+	/* Search each LAW, detemine whether the bootloader
+	 * open memory window for PCI1, PCI2, PEX. If not, define
+	 * it. If yes, fix window size.
+	 */
+	lawbase = (uint32_t *)ioremap((get_ccsrbar() + 0xc00), 0x1000);
+
+	for(i=1; i<=7; i++) {
+		lawar = in_be32(lawbase + 0x4 + (i * 0x8));
+		target = (lawar & 0x00f00000) >> 20;
+
+		if ((lawar & 0x80000000) == 0) {
+			empty = i;
+			break;
+		}
+		if (target > 2)
+			continue;
+		lw[target][map[target]].number = i;
+		map[target]++;
+	}
+
+	lwp = &lw[0][0];
+	for (i=0; i<6; i++, lwp++) {
+		number = lwp->number;
+		if (number == -1)
+			number = empty++;
+
+		out_be32(lawbase + 0x2 + (number * 0x8), (lwp->base)>>12);
+		out_be32(lawbase + 0x4 + (number * 0x8), 
+			 0x80000000 | (lwp->target)<<20 | (lwp->size));
+	}
+
+	iounmap(lawbase);
+	return;
+}
+
+static void __init
+mpc85xx_setup_pex(struct pci_controller *hose)
+{
+	struct ccsr_pex *pex;
+	unsigned short temps;
+	bd_t *binfo = (bd_t *) __res;
+
+	pex = ioremap(binfo->bi_immr_base + MPC85xx_PEX_OFFSET,
+		      MPC85xx_PEX_SIZE);
+
+	early_read_config_word(hose, 0, 0, PCI_COMMAND, &temps);
+	temps |= PCI_COMMAND_SERR | PCI_COMMAND_MASTER | PCI_COMMAND_MEMORY;
+	early_write_config_word(hose, 0, 0, PCI_COMMAND, temps);
+	early_write_config_byte(hose, 0, 0, PCI_LATENCY_TIMER, 0x80);
+
+	/* Disable all windows (except powar0 since its ignored) */
+	pex->pexowar1 = 0;
+	pex->pexowar2 = 0;
+	pex->pexowar3 = 0;
+	pex->pexowar4 = 0;
+	pex->pexiwar1 = 0;
+	pex->pexiwar1 = 0;
+	pex->pexiwar2 = 0;
+	pex->pexiwar3 = 0;
+
+	/* Setup Phys:PEX 1:1 outbound mem window @ MPC85XX_PEX_LOWER_MEM */
+	pex->pexotar1 = (MPC85XX_PEX_LOWER_MEM >> 12) & 0x000fffff;
+	pex->pexotear1 = 0x00000000;
+	pex->pexowbar1 = (MPC85XX_PEX_LOWER_MEM >> 12) & 0x000fffff;
+	/* Enable, Mem R/W */
+	pex->pexowar1 = 0x80044000 |
+			(__ilog2(MPC85XX_PEX_UPPER_MEM - MPC85XX_PEX_LOWER_MEM + 1) - 1);
+
+	/* Setup outboud IO windows @ MPC85XX_PEX_IO_BASE */
+	pex->pexotar2 = 0x00000000;
+	pex->pexotear2 = 0x00000000;
+	pex->pexowbar2 = (MPC85XX_PEX_IO_BASE >> 12) & 0x000fffff;
+	/* Enable, IO R/W */
+	pex->pexowar2 = 0x80088000 | (__ilog2(MPC85XX_PEX_IO_SIZE) - 1);
+
+	/* Setup 2G inbound Memory Window @ 0 */
+	pex->pexitar1 = 0x00000000;
+	pex->pexiwbar1 = 0x00000000;
+	pex->pexiwar1 = 0xa0f5501e;	/* Enable, Prefetch, Local
+	Mem, Snoop R/W, 2G */
+
+	mpc85xx_pci_law_fixup();
+}
+#endif
 
 int mpc85xx_pci1_last_busno = 0;
 
@@ -278,6 +418,56 @@ void __init
 mpc85xx_setup_hose(void)
 {
 	struct pci_controller *hose_a;
+#ifdef CONFIG_PEX
+	extern void setup_indirect_pex(struct pci_controller* hose, u32 cfg_addr, u32 cfg_data);
+
+	bd_t *binfo = (bd_t *) __res;
+
+	hose_a = pcibios_alloc_controller();
+
+	if (!hose_a)
+		return;
+
+	ppc_md.pci_swizzle = common_swizzle;
+	ppc_md.pci_map_irq = mpc85xx_map_irq;
+
+	hose_a->first_busno = 0;
+	hose_a->bus_offset = 0;
+	hose_a->last_busno = 0xff;
+
+	setup_indirect_pex(hose_a, binfo->bi_immr_base + PEX_CFG_ADDR_OFFSET,
+			   binfo->bi_immr_base + PEX_CFG_DATA_OFFSET);
+
+	mpc85xx_setup_pex(hose_a);
+
+	hose_a->pci_mem_offset = MPC85XX_PEX_MEM_OFFSET;
+	hose_a->mem_space.start = MPC85XX_PEX_LOWER_MEM;
+	hose_a->mem_space.end = MPC85XX_PEX_UPPER_MEM;
+
+	hose_a->io_space.start = MPC85XX_PEX_LOWER_IO;
+	hose_a->io_space.end = MPC85XX_PEX_UPPER_IO;
+	hose_a->io_base_phys = MPC85XX_PEX_IO_BASE;
+	isa_io_base =
+			(unsigned long) ioremap(MPC85XX_PEX_IO_BASE,
+	MPC85XX_PEX_IO_SIZE);
+	hose_a->io_base_virt = (void *) isa_io_base;
+
+	/* setup resources */
+	pci_init_resource(&hose_a->mem_resources[0],
+			   MPC85XX_PEX_LOWER_MEM,
+			   MPC85XX_PEX_UPPER_MEM,
+			   IORESOURCE_MEM, "PCI Express host bridge");
+
+	pci_init_resource(&hose_a->io_resource,
+			   MPC85XX_PEX_LOWER_IO,
+			   MPC85XX_PEX_UPPER_IO,
+			   IORESOURCE_IO, "PCI Express host bridge");
+
+	ppc_md.pci_exclude_device = mpc85xx_exclude_device;
+
+	hose_a->last_busno = pciauto_bus_scan(hose_a, hose_a->first_busno);
+
+#else
 #ifdef CONFIG_85xx_PCI2
 	struct pci_controller *hose_b;
 #endif
@@ -386,6 +576,7 @@ mpc85xx_setup_hose(void)
 	/* let board code know what the last bus number was on PCI1 */
 	mpc85xx_pci1_last_busno = hose_a->last_busno;
 #endif
+#endif
 	return;
 }
 #endif /* CONFIG_PCI */
Index: linux-2.6.10/arch/ppc/syslib/ppc85xx_setup.h
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/ppc85xx_setup.h
+++ linux-2.6.10/arch/ppc/syslib/ppc85xx_setup.h
@@ -36,6 +36,10 @@ extern void mpc85xx_setup_hose(void) __i
 #define PCI2_CFG_ADDR_OFFSET	(0x9000)
 #define PCI2_CFG_DATA_OFFSET	(0x9004)
 
+/* PEX config */
+#define PEX_CFG_ADDR_OFFSET	(0xa000)
+#define PEX_CFG_DATA_OFFSET	(0xa004)
+
 /* Additional register for PCI-X configuration */
 #define PCIX_NEXT_CAP	0x60
 #define PCIX_CAP_ID	0x61
Index: linux-2.6.10/include/asm-ppc/immap_85xx.h
===================================================================
--- linux-2.6.10.orig/include/asm-ppc/immap_85xx.h
+++ linux-2.6.10/include/asm-ppc/immap_85xx.h
@@ -87,6 +87,81 @@ typedef struct ccsr_pci {
 	char	res19[472];
 } ccsr_pci_t;
 
+/* PCI Express Registers */
+typedef struct ccsr_pex {
+	uint	pex_config_addr;	/* 0x.000 - PCI Express Configuration Address Register */
+	uint	pex_config_data;	/* 0x.004 - PCI Express Configuration Data Register */
+	char	res1[4];
+	uint	pex_otb_cpl_tor;	/* 0x.00c - PCI Express Outbound completion timeout register */
+	uint	pex_conf_tor;		/* 0x.010 - PCI Express configuration timeout register */
+	char	res2[12];
+	uint	pex_pme_mes_dr;		/* 0x.020 - PCI Express PME and message detect register */
+	uint	pex_pme_mes_disr;	/* 0x.024 - PCI Express PME and message disable register */
+	uint	pex_pme_mes_ier;	/* 0x.028 - PCI Express PME and message interrupt enable register */
+	uint	pex_pmcr;		/* 0x.02c - PCI Express power management command register */
+	char	res3[3024];
+	uint	pexotar0;		/* 0x.c00 - PCI Express outbound translation address register 0 */
+	uint	pexotear0;		/* 0x.c04 - PCI Express outbound translation extended address register 0*/
+	char	res4[8];
+	uint	pexowar0;		/* 0x.c10 - PCI Express outbound window attributes register 0*/
+	char	res5[12];
+	uint	pexotar1;		/* 0x.c20 - PCI Express outbound translation address register 1 */
+	uint	pexotear1;		/* 0x.c24 - PCI Express outbound translation extended address register 1*/
+	uint	pexowbar1;		/* 0x.c28 - PCI Express outbound window base address register 1*/
+	char	res6[4];
+	uint	pexowar1;		/* 0x.c30 - PCI Express outbound window attributes register 1*/
+	char	res7[12];
+	uint	pexotar2;		/* 0x.c40 - PCI Express outbound translation address register 2 */
+	uint	pexotear2;		/* 0x.c44 - PCI Express outbound translation extended address register 2*/
+	uint	pexowbar2;		/* 0x.c48 - PCI Express outbound window base address register 2*/
+	char	res8[4];
+	uint	pexowar2;		/* 0x.c50 - PCI Express outbound window attributes register 2*/
+	char	res9[12];
+	uint	pexotar3;		/* 0x.c60 - PCI Express outbound translation address register 3 */
+	uint	pexotear3;		/* 0x.c64 - PCI Express outbound translation extended address register 3*/
+	uint	pexowbar3;		/* 0x.c68 - PCI Express outbound window base address register 3*/
+	char	res10[4];
+	uint	pexowar3;		/* 0x.c70 - PCI Express outbound window attributes register 3*/
+	char	res11[12];
+	uint	pexotar4;		/* 0x.c80 - PCI Express outbound translation address register 4 */
+	uint	pexotear4;		/* 0x.c84 - PCI Express outbound translation extended address register 4*/
+	uint	pexowbar4;		/* 0x.c88 - PCI Express outbound window base address register 4*/
+	char	res12[4];
+	uint	pexowar4;		/* 0x.c90 - PCI Express outbound window attributes register 4*/
+	char	res13[12];
+	char	res14[256];
+	uint	pexitar3;		/* 0x.da0 - PCI Express inbound translation address register 3 */
+	char	res15[4];
+	uint	pexiwbar3;		/* 0x.da8 - PCI Express inbound window base address register 3 */
+	uint	pexiwbear3;		/* 0x.dac - PCI Express inbound window base extended address register 3 */
+	uint	pexiwar3;		/* 0x.db0 - PCI Express inbound window attributes register 3 */
+	char	res16[12];
+	uint	pexitar2;		/* 0x.dc0 - PCI Express inbound translation address register 2 */
+	char	res17[4];
+	uint	pexiwbar2;		/* 0x.dc8 - PCI Express inbound window base address register 2 */
+	uint	pexiwbear2;		/* 0x.dcc - PCI Express inbound window base extended address register 2 */
+	uint	pexiwar2;		/* 0x.dd0 - PCI Express inbound window attributes register 2 */
+	char	res18[12];
+	uint	pexitar1;		/* 0x.de0 - PCI Express inbound translation address register 2 */
+	char	res19[4];
+	uint	pexiwbar1;		/* 0x.de8 - PCI Express inbound window base address register 2 */
+	uint	pexiwbear1;		/* 0x.dec - PCI Express inbound window base extended address register 2 */
+	uint	pexiwar1;		/* 0x.df0 - PCI Express inbound window attributes register 2 */
+	char	res20[12];
+	uint	pex_err_dr;		/* 0x.e00 - PCI Express error detect register */
+	char	res21[4];
+	uint	pex_err_en;		/* 0x.e08 - PCI Express error interrupt enable register */
+	char	res22[4];
+	uint	pex_err_disr;		/* 0x.e10 - PCI Express error disable register */
+	char	res23[12];
+	uint	pex_err_cap_stat;	/* 0x.e20 - PCI Express error capture status register */
+	char	res24[4];
+	uint	pex_err_cap_r0;		/* 0x.e28 - PCI Express error capture register 0 */
+	uint	pex_err_cap_r1;		/* 0x.e2c - PCI Express error capture register 0 */
+	uint	pex_err_cap_r2;		/* 0x.e30 - PCI Express error capture register 0 */
+	uint	pex_err_cap_r3;		/* 0x.e34 - PCI Express error capture register 0 */
+} ccsr_pex_t;
+
 /* Global Utility Registers */
 typedef struct ccsr_guts {
 	uint	porpllsr;	/* 0x.0000 - POR PLL Ratio Status Register */
Index: linux-2.6.10/include/asm-ppc/irq.h
===================================================================
--- linux-2.6.10.orig/include/asm-ppc/irq.h
+++ linux-2.6.10/include/asm-ppc/irq.h
@@ -227,10 +227,7 @@ static __inline__ int irq_canonicalize(i
 #define MPC85xx_IRQ_DMA3	( 7 + MPC85xx_OPENPIC_IRQ_OFFSET)
 #define MPC85xx_IRQ_PCI1	( 8 + MPC85xx_OPENPIC_IRQ_OFFSET)
 #define MPC85xx_IRQ_PCI2	( 9 + MPC85xx_OPENPIC_IRQ_OFFSET)
-#define MPC85xx_IRQ_RIO_ERROR	( 9 + MPC85xx_OPENPIC_IRQ_OFFSET)
-#define MPC85xx_IRQ_RIO_BELL	(10 + MPC85xx_OPENPIC_IRQ_OFFSET)
-#define MPC85xx_IRQ_RIO_TX	(11 + MPC85xx_OPENPIC_IRQ_OFFSET)
-#define MPC85xx_IRQ_RIO_RX	(12 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_PEX		(10 + MPC85xx_OPENPIC_IRQ_OFFSET)
 #define MPC85xx_IRQ_TSEC1_TX	(13 + MPC85xx_OPENPIC_IRQ_OFFSET)
 #define MPC85xx_IRQ_TSEC1_RX	(14 + MPC85xx_OPENPIC_IRQ_OFFSET)
 #define MPC85xx_IRQ_TSEC3_TX	(15 + MPC85xx_OPENPIC_IRQ_OFFSET)
@@ -250,6 +247,21 @@ static __inline__ int irq_canonicalize(i
 #define MPC85xx_IRQ_SEC2	(29 + MPC85xx_OPENPIC_IRQ_OFFSET)
 #define MPC85xx_IRQ_CPM		(30 + MPC85xx_OPENPIC_IRQ_OFFSET)
 
+#ifdef CONFIG_MPC8548
+#define MPC85xx_IRQ_RIO_ERROR	(32 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_BELL_TX	(33 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_BELL_RX	(33 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_TX	(37 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_RX	(38 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_TX2	(39 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_RX2	(40 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#else
+#define MPC85xx_IRQ_RIO_ERROR	( 9 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_BELL	(10 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_TX	(11 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#define MPC85xx_IRQ_RIO_RX	(12 + MPC85xx_OPENPIC_IRQ_OFFSET)
+#endif
+
 /* The 12 external interrupt lines */
 #define MPC85xx_IRQ_EXT0        (48 + MPC85xx_OPENPIC_IRQ_OFFSET)
 #define MPC85xx_IRQ_EXT1        (49 + MPC85xx_OPENPIC_IRQ_OFFSET)
Index: linux-2.6.10/include/asm-ppc/mpc85xx.h
===================================================================
--- linux-2.6.10.orig/include/asm-ppc/mpc85xx.h
+++ linux-2.6.10/include/asm-ppc/mpc85xx.h
@@ -83,6 +83,8 @@ extern unsigned char __res[];
 #define MPC85xx_PCI1_SIZE	(0x01000)
 #define MPC85xx_PCI2_OFFSET	(0x09000)
 #define MPC85xx_PCI2_SIZE	(0x01000)
+#define MPC85xx_PEX_OFFSET	(0x0a000)
+#define MPC85xx_PEX_SIZE	(0x01000)
 #define MPC85xx_PERFMON_OFFSET	(0xe1000)
 #define MPC85xx_PERFMON_SIZE	(0x01000)
 #define MPC85xx_SEC2_OFFSET	(0x30000)
Index: linux-2.6.10/arch/ppc/syslib/Makefile
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/Makefile
+++ linux-2.6.10/arch/ppc/syslib/Makefile
@@ -105,6 +105,7 @@ obj-$(CONFIG_85xx)		+= open_pic.o ppc85x
 					mpc85xx_devices.o
 ifeq ($(CONFIG_85xx),y)
 obj-$(CONFIG_PCI)		+= indirect_pci.o pci_auto.o
+obj-$(CONFIG_PEX)		+= mpc85xx_pex_errata.o
 endif
 obj-$(CONFIG_83xx)		+= ipic.o ppc83xx_setup.o ppc_sys.o
 ifeq ($(CONFIG_83xx),y)
Index: linux-2.6.10/mvl_patches/pro-0494.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0494.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2006 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(494);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

