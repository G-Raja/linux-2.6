#! /usr/bin/env bash
# Patch: -pro_ppc32_440sp_uart2
# Date: Mon Aug 21 08:33:43 2006
# Source: MontaVista Software, Inc.
# MR: 17368
# Type: Defect Fix
# Disposition: submitted to linuxppc_embedded
# Signed-off-by: Wade Farnsworth <wfarnsworth@mvista.com>
# Description:
# 	This adds enables UART2 on the AMCC 440SP Eval.  It fixes the interrupt
# 	number for the UART, enables it via the SDR PFC1 register, and uses 
# 	ibm440gx_get_clocks to get the correct clocking information from SDR
# 	UART2.
# 

PATCHNUM=885
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 17368
Type: Defect Fix
Disposition: submitted to linuxppc_embedded
Signed-off-by: Wade Farnsworth <wfarnsworth@mvista.com>
Description:
	This adds enables UART2 on the AMCC 440SP Eval.  It fixes the interrupt
	number for the UART, enables it via the SDR PFC1 register, and uses 
	ibm440gx_get_clocks to get the correct clocking information from SDR
	UART2.

Index: linux-2.6.10/arch/ppc/platforms/4xx/ibm440sp.h
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/4xx/ibm440sp.h
+++ linux-2.6.10/arch/ppc/platforms/4xx/ibm440sp.h
@@ -27,7 +27,7 @@
 #define PPC440SP_UART2_ADDR	0x00000001f0000600ULL
 #define UART0_INT		0
 #define UART1_INT		1
-#define UART2_INT		2
+#define UART2_INT		37
 
 /* Clock and Power Management */
 #define IBM_CPM_IIC0		0x80000000	/* IIC interface */
Index: linux-2.6.10/arch/ppc/platforms/4xx/luan.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/4xx/luan.c
+++ linux-2.6.10/arch/ppc/platforms/4xx/luan.c
@@ -305,9 +305,12 @@ luan_early_serial_map(void)
 		printk("Early serial init of port 1 failed\n");
 	}
 
+	/* Enable UART2 */
+	SDR_WRITE(DCRN_SDR_PFC1, SDR_READ(DCRN_SDR_PFC1) | 0x01000000);
+
 	port.membase = ioremap64(PPC440SP_UART2_ADDR, 8);
 	port.irq = UART2_INT;
-	port.uartclk = BASE_BAUD;
+	port.uartclk = clocks.uart2;
 	port.line = 2;
 
 	if (early_serial_setup(&port) != 0) {
Index: linux-2.6.10/arch/ppc/syslib/ibm440gx_common.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/ibm440gx_common.c
+++ linux-2.6.10/arch/ppc/syslib/ibm440gx_common.c
@@ -34,8 +34,10 @@ void __init ibm440gx_get_clocks(struct i
 	u32 plld  = CPR_READ(DCRN_CPR_PLLD);
 	u32 uart0 = SDR_READ(DCRN_SDR_UART0);
 	u32 uart1 = SDR_READ(DCRN_SDR_UART1);
-#if defined(CONFIG_440EP) || defined(CONFIG_440GR)
+#if defined(CONFIG_440EP) || defined(CONFIG_440GR) || defined(CONFIG_440SP)
 	u32 uart2 = SDR_READ(DCRN_SDR_UART2);
+#endif
+#if defined(CONFIG_440EP) || defined(CONFIG_440GR)
 	u32 uart3 = SDR_READ(DCRN_SDR_UART3);
 #endif
 
@@ -100,12 +102,14 @@ bypass:
 		p->uart1 = ser_clk;
 	else
 		p->uart1 = p->plb / __fix_zero(uart1 & 0xff, 256);
-#if defined(CONFIG_440EP) || defined(CONFIG_440GR)
+#if defined(CONFIG_440EP) || defined(CONFIG_440GR) || defined(CONFIG_440SP)
 	if (uart2 & 0x00800000)
 		p->uart2 = ser_clk;
 	else
 		p->uart2 = p->plb / __fix_zero(uart2 & 0xff, 256);
+#endif
 
+#if defined(CONFIG_440EP) || defined(CONFIG_440GR)
 	if (uart3 & 0x00800000)
 		p->uart3 = ser_clk;
 	else
Index: linux-2.6.10/arch/ppc/syslib/ibm44x_common.h
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/ibm44x_common.h
+++ linux-2.6.10/arch/ppc/syslib/ibm44x_common.h
@@ -29,8 +29,10 @@ struct ibm44x_clocks {
 	unsigned int ebc;	/* PerClk */
 	unsigned int uart0;
 	unsigned int uart1;
-#if defined(CONFIG_440EP) || defined(CONFIG_440GR)
+#if defined(CONFIG_440EP) || defined(CONFIG_440GR) || defined(CONFIG_440SP)
 	unsigned int uart2;
+#endif
+#if defined(CONFIG_440EP) || defined(CONFIG_440GR)
 	unsigned int uart3;
 #endif
 };
Index: linux-2.6.10/include/asm-ppc/ibm44x.h
===================================================================
--- linux-2.6.10.orig/include/asm-ppc/ibm44x.h
+++ linux-2.6.10/include/asm-ppc/ibm44x.h
@@ -166,8 +166,10 @@
 #define DCRN_SDR_UART0		0x0120
 #define DCRN_SDR_UART1		0x0121
 
-#if defined(CONFIG_440EP) || defined(CONFIG_440GR)
+#if defined(CONFIG_440EP) || defined(CONFIG_440GR) || defined(CONFIG_440SP)
 #define DCRN_SDR_UART2		0x0122
+#endif
+#if defined(CONFIG_440EP) || defined(CONFIG_440GR)
 #define DCRN_SDR_UART3		0x0123
 #define DCRN_SDR_USB0		0x0320
 #define DCRN_SDR_CUST0		0x4000
Index: linux-2.6.10/mvl_patches/pro-0885.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0885.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2006 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(885);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

