#! /usr/bin/env bash
# Patch: -pro_arm_davinci_video_display_flickering_fix
# Date: Mon Jan 21 23:08:16 2008
# Source: MontaVista Software, Inc. and Texas Instruments Inc.
# MR: 26587
# Type: Enhancement
# Disposition: local
# Signed-off-by: Steve Chen <schen@mvista.com>
# Description:
#  TI MR -  71398, 72587,72738
# 	Fixes to the display drivers and encoder manager modules:
# 	V4L2 display driver for the default settings, THS8200
# 	encoder and fbdev display driver for the flickering display 
# 	with 1080i mode and encoder manager for the sysfs attribute
# 	to configure the system module registers for the DDR bandwidth
# 	issue.
# 

PATCHNUM=1704
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc. and Texas Instruments Inc.
MR: 26587
Type: Enhancement
Disposition: local
Signed-off-by: Steve Chen <schen@mvista.com>
Description:
 TI MR -  71398, 72587,72738
	Fixes to the display drivers and encoder manager modules:
	V4L2 display driver for the default settings, THS8200
	encoder and fbdev display driver for the flickering display 
	with 1080i mode and encoder manager for the sysfs attribute
	to configure the system module registers for the DDR bandwidth
	issue.

Index: linux-2.6.10/drivers/media/video/Kconfig
===================================================================
--- linux-2.6.10.orig/drivers/media/video/Kconfig
+++ linux-2.6.10/drivers/media/video/Kconfig
@@ -156,7 +156,7 @@ config DAVINCI_OSD 
 	tristate "Davinci Display Manager"
 	depends on VIDEO_DAVINCI_DISPLAY || FB_DAVINCI
 	help
-	  Support for Davinci Display Manager.
+	  Support for Davinci On-Screen Display Manager.
 	  
 	  To compile this driver as a module, choose M here: the
 	  module will be called vpif.
Index: linux-2.6.10/drivers/media/video/davinci/davinci_display.c
===================================================================
--- linux-2.6.10.orig/drivers/media/video/davinci/davinci_display.c
+++ linux-2.6.10/drivers/media/video/davinci/davinci_display.c
@@ -996,10 +996,25 @@ static int davinci_doioctl(struct inode 
 				layer->layer_info.config.ypos = 0;
 				layer->layer_info.config.xpos = 0;
 
-				if (pixfmt->field == V4L2_FIELD_INTERLACED)
+				if (layer->pix_fmt.field == V4L2_FIELD_ANY) {
+					if (davinci_dm.mode_info.interlaced)
+						layer->layer_info.config.
+						    interlaced = 1;
+					else
+						layer->layer_info.config.
+						    interlaced = 0;
+				} else if (layer->pix_fmt.field ==
+					   V4L2_FIELD_INTERLACED) {
 					layer->layer_info.config.interlaced = 1;
-				else if (pixfmt->field == V4L2_FIELD_NONE)
+				} else if (layer->pix_fmt.field ==
+					   V4L2_FIELD_NONE) {
 					layer->layer_info.config.interlaced = 0;
+				} else {
+					dev_err(davinci_display_dev, "Error in "
+						"S_FMT params:- field\n");
+					up(&davinci_dm.lock);
+					return -EINVAL;
+				}
 
 				if (davinci_disp_set_layer_config
 				    (layer->layer_info.id,
@@ -1065,7 +1080,6 @@ static int davinci_doioctl(struct inode 
 	case VIDIOC_REQBUFS:
 		{
 			struct v4l2_requestbuffers *reqbuf;
-			enum v4l2_field field;
 			reqbuf = (struct v4l2_requestbuffers *)arg;
 			dev_dbg(davinci_display_dev,
 				"VIDIOC_REQBUFS, count= %d, type = %d, memory = %d\n",
@@ -1079,20 +1093,13 @@ static int davinci_doioctl(struct inode 
 				break;
 			}
 			down_interruptible(&davinci_dm.lock);
-			if (layer->pix_fmt.field == V4L2_FIELD_ANY)
-				if (davinci_dm.mode_info.interlaced)
-					field = V4L2_FIELD_INTERLACED;
-				else
-					field = V4L2_FIELD_NONE;
-			else
-				field = layer->pix_fmt.field;
 			/* Initialize videobuf queue as per the
 			   buffer type */
 			videobuf_queue_init(&layer->buffer_queue,
 					    &video_qops, NULL,
 					    &layer->irqlock,
 					    V4L2_BUF_TYPE_VIDEO_OUTPUT,
-					    field,
+					    layer->pix_fmt.field,
 					    sizeof(struct videobuf_buffer), fh);
 			/* Set buffer to Linear buffer */
 			videobuf_set_buftype(&layer->buffer_queue,
@@ -1421,6 +1428,14 @@ static int davinci_config_layer(enum dav
 	layer_config->xpos = 0;
 	layer_config->ypos = 0;
 	layer_config->interlaced = mode_info->interlaced;
+
+	/* turn off ping-pong buffer and field inversion to fix
+	   the image shaking problem in 1080I mode */
+	if (id == DAVINCI_DISPLAY_DEVICE_0 &&
+	    strcmp(mode_info->name, VID_ENC_STD_1080I_30) == 0 &&
+	    cpu_is_davinci_dm644x())
+		davinci_disp_set_field_inversion(0);
+
 	if (layer->layer_info.config.interlaced)
 		layer->pix_fmt.field = V4L2_FIELD_INTERLACED;
 	else
Index: linux-2.6.10/drivers/media/video/davinci/davinci_enc_mngr.c
===================================================================
--- linux-2.6.10.orig/drivers/media/video/davinci/davinci_enc_mngr.c
+++ linux-2.6.10/drivers/media/video/davinci/davinci_enc_mngr.c
@@ -27,6 +27,7 @@
 #include <asm/arch/mux.h>
 #include <asm/arch/cpu.h>
 #include <asm/arch/io.h>
+#include <asm/io.h>
 #include <media/davinci/davinci_enc.h>
 #include <media/davinci/vid_encoder_types.h>
 #include <media/davinci/vid_encoder_if.h>
@@ -61,6 +62,8 @@ static struct display_device *davinci_di
 #define to_display_dev(cdev)	container_of(cdev, \
  struct display_device, class_dev)
 
+static void __iomem *display_cntl_base;
+
 static void display_class_release(struct class_device *cdev)
 {
 	struct display_device *dev = to_display_dev(cdev);
@@ -74,25 +77,6 @@ struct class display_class = {
 	.release = display_class_release,
 };
 
-static int my_atoi(const char *name, int *count)
-{
-	int val = 0;
-	*count = 0;
-	for (; *name != 0; name++, (*count)++) {
-		switch (*name) {
-		case '0'...'9':
-			val = 10 * val + (*name - '0');
-			break;
-		case '!'...'/':
-		case ':'...'~':
-			return -EINVAL;
-		default:
-			break;
-		}
-	}
-	return val;
-}
-
 static ssize_t output_show(struct class_device *cdev, char *buf)
 {
 	char name[VID_ENC_NAME_MAX_CHARS];
@@ -211,9 +195,7 @@ control_store(struct class_device *cdev,
 	if (!buffer || (count == 0))
 		return 0;
 
-	val = my_atoi(buffer, &count);
-	if (val < 0)
-		return -EINVAL;
+	val = simple_strtoul(buffer, NULL, 0);
 
 	ret = davinci_enc_set_control(dev->channel, ctrl, (char)val);
 	if (ret < 0)
@@ -265,6 +247,60 @@ static ssize_t gain_show(struct class_de
 	return control_show(cdev, buf, VID_ENC_CTRL_GAIN);
 }
 
+static ssize_t
+reg_store(struct class_device *cdev, const char *buffer, size_t count)
+{
+	char *str = 0;
+	char *bufv = 0;
+	int addr = 0;
+	int val = 0;
+	int len = 0;
+
+	if (!buffer || (count == 0) || (count >= 128))
+		return 0;
+
+	str = kmalloc(128, GFP_KERNEL);
+	if (0 == str)
+		return -ENOMEM;
+
+	strcpy(str, buffer);
+	/* overwrite the '\n' */
+	strcpy(str + count - 1, "\0");
+
+	/* format: <address> [<value>]
+	   if only <address> present, it is a read
+	   if <address> <value>, then it is a write */
+	len = strcspn(str, " ");
+	addr = simple_strtoul(str, NULL, 16);
+
+	if (len != count - 1) {
+		bufv = str;
+		strsep(&bufv, " ");
+		val = simple_strtoul(bufv, NULL, 16);
+	}
+
+	kfree(str);
+
+	/* for now, restrict this to access DDR2 controller
+	   Peripheral Bust Burst Priority Register PBBPR
+	   (addr: 0x20000020) only */
+	if (addr != (DM644X_DDR2_CNTL_BASE + 0x20))
+		return -EINVAL;
+
+	if (bufv != 0) {
+		writel(val, display_cntl_base + addr - DM644X_DDR2_CNTL_BASE);
+	}
+	printk(KERN_NOTICE "%05x  %08x\n", addr,
+	       readl(display_cntl_base + addr - DM644X_DDR2_CNTL_BASE));
+
+	return count;
+}
+
+static ssize_t reg_show(struct class_device *cdev, char *buf)
+{
+	return 0;
+}
+
 #define DECLARE_ATTR(_name, _mode, _show, _store)                  \
 {                                                               \
 	.attr   = { .name = __stringify(_name), .mode = _mode,	\
@@ -278,7 +314,8 @@ static struct class_device_attribute bl_
 	DECLARE_ATTR(enable, S_IRWXUGO, enable_show, enable_store),
 	DECLARE_ATTR(brightness, S_IRWXUGO, brightness_show, brightness_store),
 	DECLARE_ATTR(hue, S_IRWXUGO, hue_show, hue_store),
-	DECLARE_ATTR(gain, S_IRWXUGO, gain_show, gain_store)
+	DECLARE_ATTR(gain, S_IRWXUGO, gain_show, gain_store),
+	DECLARE_ATTR(reg, S_IRWXUGO, reg_show, reg_store)
 };
 
 static void *create_sysfs_files(int channel)
@@ -390,6 +427,11 @@ static int davinci_enc_mngr_init(void)
 	struct vid_enc_device_mgr *ptr = 0;
 
 #ifdef CONFIG_SYSFS
+	display_cntl_base = ioremap(DM644X_DDR2_CNTL_BASE, 0x24);
+	if (!display_cntl_base) {
+		printk(KERN_ERR "Could not remap control registers\n");
+		return -EINVAL;
+	}
 	class_register(&display_class);
 #endif
 
@@ -404,10 +446,10 @@ static int davinci_enc_mngr_init(void)
 			printk(KERN_ERR
 			       "Could not create display control sysfs "
 			       "files for channel %d\n", i);
+			iounmap(display_cntl_base);
 			return -EINVAL;
 		}
 #endif
-
 	}
 
 	davinci_enc_check_options();
@@ -427,6 +469,7 @@ static void davinci_enc_mngr_cleanup(voi
 		remove_sysfs_files(davinci_display_device[i]);
 
 	class_unregister(&display_class);
+	iounmap(display_cntl_base);
 #endif
 
 	return;
Index: linux-2.6.10/drivers/media/video/davinci/davinci_platform.c
===================================================================
--- linux-2.6.10.orig/drivers/media/video/davinci/davinci_platform.c
+++ linux-2.6.10/drivers/media/video/davinci/davinci_platform.c
@@ -29,6 +29,7 @@
 #include <media/davinci/davinci_enc.h>
 #include <media/davinci/vid_encoder_types.h>
 #include <video/davinci_vpbe.h>
+#include <video/davinci_osd.h>
 #include <media/davinci/davinci_enc_mngr.h>
 #include <media/davinci/davinci_platform.h>
 
@@ -484,6 +485,7 @@ static void davinci_enc_set_720p(struct 
 	dispc_reg_out(VENC_DRGBX2, 0x00000159);
 	dispc_reg_out(VENC_DRGBX3, 0x000002cb);
 	dispc_reg_out(VENC_DRGBX4, 0x000006ee);
+
 	/* Enable DCLOCK */
 	dispc_reg_out(VENC_DCLKCTL, VENC_DCLKCTL_DCKEC);
 	/* Set DCLOCK pattern */
@@ -518,6 +520,11 @@ static void davinci_enc_set_720p(struct 
 	dispc_reg_out(VENC_OSDCLK1, 1);
 	dispc_reg_out(VENC_OSDHADV, 0);
 
+	dispc_reg_out(VENC_HSDLY, 0);
+	dispc_reg_out(VENC_VSDLY, 0);
+	dispc_reg_out(VENC_YCCCTL, 0);
+	dispc_reg_out(VENC_VSTARTA, 13);
+
 	davinci_writel(0xa, SYS_VPSS_CLKCTL);
 	if (cpu_is_davinci_dm355()) {
 		dispc_reg_out(VENC_CLKCTL, 0x11);
@@ -641,6 +648,7 @@ static void davinci_enc_set_1080i(struct
 			      (VENC_VMOD_VENC | VENC_VMOD_VMD | VENC_VMOD_HDMD |
 			       VENC_VMOD_NSIT));
 	}
+	dispc_reg_out(VENC_LCDOUT, 1);
 }
 
 void davinci_enc_priv_setmode(struct vid_enc_device_mgr *mgr)
@@ -695,12 +703,21 @@ void davinci_enc_priv_setmode(struct vid
 		   strcmp(mgr->current_mode.name, VID_ENC_STD_640x400) == 0 ||
 		   strcmp(mgr->current_mode.name, VID_ENC_STD_640x350) == 0) {
 		davinci_enc_set_prgb(&mgr->current_mode);
-	} else if (strcmp(mgr->current_mode.name, VID_ENC_STD_720P_30) == 0) {
+	} else if (strcmp(mgr->current_mode.name, VID_ENC_STD_720P_60) == 0) {
 		davinci_enc_set_720p(&mgr->current_mode);
 	} else if (strcmp(mgr->current_mode.name, VID_ENC_STD_1080I_30) == 0) {
 		davinci_enc_set_1080i(&mgr->current_mode);
+
 	}
 
+	/* turn off ping-pong buffer and field inversion to fix
+	   the image shaking problem in 1080I mode. The problem i.d. by the
+	   DM6446 Advisory 1.3.8 is not seen in 1080I mode, but the ping-pong
+	   buffer workaround created a shaking problem. */
+	if (cpu_is_davinci_dm644x() &&
+	    strcmp(mgr->current_mode.name, VID_ENC_STD_1080I_30) == 0)
+		davinci_disp_set_field_inversion(0);
+
 	return;
 }
 
Index: linux-2.6.10/drivers/media/video/davinci/ths8200_encoder.c
===================================================================
--- linux-2.6.10.orig/drivers/media/video/davinci/ths8200_encoder.c
+++ linux-2.6.10/drivers/media/video/davinci/ths8200_encoder.c
@@ -58,7 +58,7 @@ static int ths8200_encoder_enable(int fl
 static struct vid_enc_mode_info
     ths8200_component_standards[THS8200_COMPONENT_NUM_STD] = {
 	{
-	 .name = VID_ENC_STD_720P_30,
+	 .name = VID_ENC_STD_720P_60,
 	 .std = 1,
 	 .if_type = VID_ENC_IF_YCC16,	/* TBD */
 	 .interlaced = 0,
@@ -167,7 +167,7 @@ static struct ths8200_config ths8200_con
 	.output[0] = {
 		      .output_name = VID_ENC_OUTPUT_COMPONENT1,
 		      .no_of_standard = THS8200_COMPONENT_NUM_STD,
-		      .standards = {VID_ENC_STD_720P_30, VID_ENC_STD_1080I_30},
+		      .standards = {VID_ENC_STD_720P_60, VID_ENC_STD_1080I_30},
 		      .std_info = (struct ths8200_std_info *)
 		      &ths8200_component_std_info,
 		      },
@@ -175,7 +175,7 @@ static struct ths8200_config ths8200_con
 
 static struct ths8200_channel ths8200_channel_info = {
 	.params.outindex = 0,
-	.params.mode = VID_ENC_STD_720P_30,
+	.params.mode = VID_ENC_STD_720P_60,
 	.i2c_dev.clients[0] = {
 			       .i2c_addr = THS8200_I2C_ADDR},
 	.i2c_dev.clients[1] = {
Index: linux-2.6.10/drivers/video/davinci/davincifb.c
===================================================================
--- linux-2.6.10.orig/drivers/video/davinci/davincifb.c
+++ linux-2.6.10/drivers/video/davinci/davincifb.c
@@ -1440,7 +1440,6 @@ davincifb_check_var(struct fb_var_screen
 	lconfig.line_length = fix.line_length;
 	lconfig.xpos = win->xpos;
 	lconfig.ypos = win->ypos;
-
 	/* xoffset must be a multiple of xpanstep */
 	if (var->xoffset & ~(fix.xpanstep - 1))
 		return -EINVAL;
@@ -1504,6 +1503,16 @@ static int davincifb_set_par(struct fb_i
 	}
 	/* update our copy of the encoder video mode */
 	get_video_mode(&win->dm->mode);
+
+	/* turn off ping-pong buffer and field inversion to fix
+	   the image shaking problem in 1080I mode. The problem i.d. by the
+	   DM6446 Advisory 1.3.8 is not seen in 1080I mode, but the ping-pong
+	   buffer workaround created a shaking problem. */
+	if (win->layer == WIN_VID0 &&
+	    strcmp(mode.name, VID_ENC_STD_1080I_30) == 0 &&
+	    cpu_is_davinci_dm644x())
+		davinci_disp_set_field_inversion(0);
+
 	/*
 	 * Update the var with the encoder timing info.  The window geometry
 	 * will be preserved.
@@ -2094,6 +2103,7 @@ static int davincifb_get_default_win_con
 	}
 	lconfig->xpos = 0;
 	lconfig->ypos = 0;
+
 	lconfig->interlaced = is_display_interlaced(&win->dm->mode);
 	*fb_size = davincifb_max_screen_size(win->layer, &win->dm->mode);
 
Index: linux-2.6.10/include/asm-arm/arch-davinci/hardware.h
===================================================================
--- linux-2.6.10.orig/include/asm-arm/arch-davinci/hardware.h
+++ linux-2.6.10/include/asm-arm/arch-davinci/hardware.h
@@ -85,6 +85,7 @@
 
 #define DM644X_ASYNC_EMIF_CNTRL_BASE		(0x01E00000)
 #define DM644X_UART2_BASE			(0x01C20800)
+#define DM644X_DDR2_CNTL_BASE			(0x20000000)
 
 #define DM355_MMC1_BASE				(0x01E00000)
 #define DM355_UART2_BASE			(0x01E06000)
Index: linux-2.6.10/mvl_patches/pro-1704.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1704.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1704);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

