#! /usr/bin/env bash
# Patch: -pro_mips_tx4938_ide
# Date: Wed Dec 28 15:03:47 2005
# Source: MontaVista Software, Inc.
# MR: 14645
# Type: Enhancement
# Disposition: needs submitting to linux-mips.org
# Signed-off-by: Yuri Shpilevsky <yshpilevsky@ru.mvista.com>
# Description:
#     IDE support for RBTX4938
# 

PATCHNUM=272
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 14645
Type: Enhancement
Disposition: needs submitting to linux-mips.org
Signed-off-by: Yuri Shpilevsky <yshpilevsky@ru.mvista.com>
Description:
    IDE support for RBTX4938

Index: linux-2.6.10/drivers/ide/Kconfig
===================================================================
--- linux-2.6.10.orig/drivers/ide/Kconfig
+++ linux-2.6.10/drivers/ide/Kconfig
@@ -1015,6 +1015,10 @@ config BLK_DEV_UMC8672
 	  See the files <file:Documentation/ide.txt> and
 	  <file:drivers/ide/legacy/umc8672.c> for more info.
 
+config BLK_DEV_IDE_TX4938
+	bool "TX4938 internal IDE support"
+	depends on TOSHIBA_RBTX4938_MPLEX_ATA
+
 config BLK_DEV_IDE_TX4939
 	tristate "TX4939 internal IDE support"
 	depends TOSHIBA_RBTX4939
Index: linux-2.6.10/drivers/ide/ide.c
===================================================================
--- linux-2.6.10.orig/drivers/ide/ide.c
+++ linux-2.6.10/drivers/ide/ide.c
@@ -2172,6 +2172,12 @@ static void __init probe_for_hwifs (void
 #ifdef CONFIG_H8300
 	h8300_ide_init();
 #endif
+#ifdef CONFIG_BLK_DEV_IDE_TX4938
+	{
+		extern void tx4938_ide_init(void);
+		tx4938_ide_init();
+	}
+#endif /* CONFIG_BLK_DEV_IDE_TX4938 */
 }
 
 /*
Index: linux-2.6.10/drivers/ide/mips/Makefile
===================================================================
--- linux-2.6.10.orig/drivers/ide/mips/Makefile
+++ linux-2.6.10/drivers/ide/mips/Makefile
@@ -1,4 +1,5 @@
 obj-$(CONFIG_BLK_DEV_IDE_SWARM)		+= swarm.o
 obj-$(CONFIG_BLK_DEV_IDE_TX4939)	+= ide-tx4939.o
+obj-$(CONFIG_BLK_DEV_IDE_TX4938)	+= ide-tx4938.o
 
 EXTRA_CFLAGS	:= -I../
Index: linux-2.6.10/drivers/ide/mips/ide-tx4938.c
===================================================================
--- /dev/null
+++ linux-2.6.10/drivers/ide/mips/ide-tx4938.c
@@ -0,0 +1,171 @@
+/*
+ * linux/drivers/ide/ide-tx4938.c 
+ *
+ * TX4938 internal IDE driver
+ *
+ * Copyright (C) 2000-2001 Toshiba Corporation 
+ *
+ * Author: source@mvista.com
+ *
+ * 2001-2005 (c) MontaVista Software, Inc. This file is licensed under the
+ * terms of the GNU General Public License version 2. This program is
+ * licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+
+#include <linux/types.h>
+#include <linux/mm.h>
+#include <linux/interrupt.h>
+#include <linux/blkdev.h>
+#include <linux/hdreg.h>
+#include <linux/ide.h>
+#include <linux/init.h>
+#include <asm/bootinfo.h>
+#include <asm/tx4938/rbtx4938.h>
+
+static int tx4938_ide_irq;
+
+#ifdef __BIG_ENDIAN
+/* TX4938 ATA(BigEndian) has a byte-swapped IDE interface */
+static inline void insw_swap(unsigned int port, void *addr, unsigned long count)
+{
+	unsigned short *ptr = (unsigned short *)addr;
+	while (count--) {
+		*ptr++ = inw(port);
+	}
+}
+static inline void insl_swap(unsigned int port, void *addr, unsigned long count)
+{
+	unsigned int *ptr = (unsigned int *)addr;
+	while (count--) {
+		*ptr++ = inl(port);
+	}
+}
+static inline void outsw_swap(unsigned int port, const void *addr, unsigned long count)
+{
+	unsigned short *ptr = (unsigned short *)addr;
+	while (count--) {
+		outw((*ptr), port);
+		ptr++;
+	}
+}
+static inline void outsl_swap(unsigned int port, const void *addr, unsigned long count)
+{
+	unsigned int *ptr = (unsigned int *)addr;
+	while (count--) {
+		outl((*ptr), port);
+		ptr++;
+	}
+}
+
+static void tx4938_ata_input_data(ide_drive_t *drive, void *buffer, unsigned int count)
+{
+	unsigned long port;
+	unsigned int wcount = count;
+	byte io_32bit = drive->io_32bit;
+
+	port = IDE_DATA_REG & ~1;
+	if (io_32bit)
+		insl_swap(port, buffer, wcount);
+	else
+		insw_swap(port, buffer, wcount<<1);
+
+}
+
+static void tx4938_ata_output_data(ide_drive_t *drive, void *buffer, unsigned int count)
+{
+	unsigned long port;
+	unsigned int wcount = count;
+	byte io_32bit = drive->io_32bit;
+
+	port = IDE_DATA_REG & ~1;
+	if (io_32bit)
+		outsl_swap(port, buffer, wcount);
+	else
+		outsw_swap(port, buffer, wcount<<1);
+
+}
+
+static void tx4938_atapi_input_bytes(ide_drive_t *drive, void *buffer, unsigned int count)
+{
+	unsigned long port;
+	unsigned int wcount = count;
+	byte io_32bit = drive->io_32bit;
+
+	port = IDE_DATA_REG & ~1;
+	count++;
+	wcount = count / 4;
+	if (io_32bit)
+		insl_swap(port, buffer, wcount);
+	else
+		insw_swap(port, buffer, wcount<<1);
+	if ((count & 0x03) >= 2)
+		insw_swap(port, (u32 *)buffer + wcount, 1);
+
+}
+
+static void tx4938_atapi_output_bytes(ide_drive_t *drive, void *buffer, unsigned int count)
+{
+	unsigned long port;
+	unsigned int wcount = count;
+	byte io_32bit = drive->io_32bit;
+
+	port = IDE_DATA_REG & ~1;
+	count++;
+	wcount = count / 4;
+	if (io_32bit)
+		outsl_swap(port, buffer, wcount);
+	else
+		outsw_swap(port, buffer, wcount<<1);
+	if ((count & 0x03) >= 2)
+		outsw_swap(port, (u32 *)buffer + wcount, 1);
+}
+#endif
+
+void __init tx4938_ide_init(void)
+{
+	hw_regs_t hw;
+	int index;
+	int offsets[IDE_NR_PORTS];
+	int i;
+	unsigned long port;
+
+	for (i = 0; i < 8; i++)
+		offsets[i] = i;
+	offsets[IDE_CONTROL_OFFSET] = 6;
+	offsets[IDE_CONTROL_OFFSET] += 0x10000;
+
+	tx4938_ide_irq = RBTX4938_IRQ_IOC_ATA;
+
+	if ((tx4938_ccfgptr->pcfg & (TX4938_PCFG_ATA_SEL | TX4938_PCFG_NDF_SEL)) !=
+	    TX4938_PCFG_ATA_SEL)
+		return;
+	for (i = 0; i < 8; i++) {
+		/* check EBCCRn.ISA, EBCCRn.BSZ, EBCCRn.ME */
+		if ((tx4938_ebuscptr->cr[i] & 0x00f00008) == 0x00e00008)
+			break;
+	}
+	if (i == 8) {
+		printk(KERN_DEBUG "TX4938 ATA channel not found.\n");
+		return;
+	}
+
+	port = KSEG1ADDR((tx4938_ebuscptr->cr[i] >> 48) << 20) + 0x10000 -
+		mips_io_port_base;
+
+	memset(&hw, 0, sizeof(hw));
+	ide_setup_ports(&hw, port, offsets, 0, 0, 0, tx4938_ide_irq);
+
+	index = ide_register_hw(&hw, NULL);
+
+	if (index != -1) {
+		ide_hwif_t *hwif = &ide_hwifs[index];
+#ifdef __BIG_ENDIAN
+		hwif->ata_input_data = tx4938_ata_input_data;
+		hwif->ata_output_data = tx4938_ata_output_data;
+		hwif->atapi_input_bytes = tx4938_atapi_input_bytes;
+		hwif->atapi_output_bytes = tx4938_atapi_output_bytes;		
+#endif
+		printk("%s: TX4938 IDE interface\n", hwif->name);
+	}
+}
Index: linux-2.6.10/mvl_patches/pro-0272.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0272.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2005 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(272);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

