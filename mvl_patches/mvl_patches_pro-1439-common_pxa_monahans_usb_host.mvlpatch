#! /usr/bin/env bash
# Patch: -common_pxa_monahans_usb_host
# Date: Fri Dec  7 11:52:18 2007
# Source: Marvell International Ltd
# MR: 23337
# Type: Integration
# Disposition: merged from Marvell
# Signed-off-by: yadviga grigorieva <yadviga@ru.mvista.com>
# Description:
#    ohci usb host on PXA3xx
#    

PATCHNUM=1439
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: Marvell International Ltd
MR: 23337
Type: Integration
Disposition: merged from Marvell
Signed-off-by: yadviga grigorieva <yadviga@ru.mvista.com>
Description:
   ohci usb host on PXA3xx
   
Index: linux-2.6.10/arch/arm/mach-pxa/generic.c
===================================================================
--- linux-2.6.10.orig/arch/arm/mach-pxa/generic.c
+++ linux-2.6.10/arch/arm/mach-pxa/generic.c
@@ -241,7 +241,7 @@ static void ohci_hcd_pxa_device_release(
 }
 
 static struct platform_device ohci_hcd_pxa_device = {
-	.name = "pxa-ohci",
+	.name = "pxa27x-ohci",
 	.id = -1,
 	.dev		= {
 		.dma_mask = &ohci_hcd_pxa_dmamask,
Index: linux-2.6.10/drivers/usb/host/Kconfig
===================================================================
--- linux-2.6.10.orig/drivers/usb/host/Kconfig
+++ linux-2.6.10/drivers/usb/host/Kconfig
@@ -16,6 +16,7 @@ config USB_ARCH_HAS_OHCI
 	default y if ARCH_OMAP
 	default y if ARCH_LH7A404
 	default y if PXA27x
+	default y if PXA3xx
 	# PPC:
 	default y if STB03xxx
 	default y if PPC_MPC52xx
Index: linux-2.6.10/drivers/usb/host/ohci-hcd.c
===================================================================
--- linux-2.6.10.orig/drivers/usb/host/ohci-hcd.c
+++ linux-2.6.10/drivers/usb/host/ohci-hcd.c
@@ -909,7 +909,7 @@ MODULE_LICENSE ("GPL");
 #include "ohci-lh7a404.c"
 #endif
 
-#ifdef CONFIG_PXA27x
+#if defined (CONFIG_PXA27x) || defined (CONFIG_PXA3xx)
 #include "ohci-pxa27x.c"
 #endif
 
@@ -938,6 +938,7 @@ MODULE_LICENSE ("GPL");
       || defined(CONFIG_ARCH_OMAP) \
       || defined (CONFIG_ARCH_LH7A404) \
       || defined (CONFIG_PXA27x) \
+      || defined (CONFIG_PXA3xx) \
       || defined (CONFIG_SOC_AU1X00) \
       || defined (CONFIG_PNX8550) \
       || defined (CONFIG_USB_OHCI_HCD_PPC_SOC) \
Index: linux-2.6.10/drivers/usb/host/ohci-pxa27x.c
===================================================================
--- linux-2.6.10.orig/drivers/usb/host/ohci-pxa27x.c
+++ linux-2.6.10/drivers/usb/host/ohci-pxa27x.c
@@ -108,7 +108,11 @@ extern int usb_disabled(void);
 
 static void pxa27x_start_hc(struct platform_device *dev)
 {
+#ifdef CONFIG_PXA3xx
+	pxa_set_cken(CKEN_USBH, 1);
+#else
 	pxa_set_cken(CKEN10_USBHOST, 1);
+#endif
 
 	UHCHR |= UHCHR_FHR;
 	udelay(11);
@@ -121,6 +125,19 @@ static void pxa27x_start_hc(struct platf
 	/* This could be properly abstracted away through the
 	   device data the day more machines are supported and
 	   their differences can be figured out correctly. */
+#ifdef CONFIG_PXA3xx
+	if (machine_is_zylonite()) {
+		/* enable PWR & PEN pins */
+		zylonite_enable_usbh_pins();
+
+		/* Set the Power Control Polarity Low and Power Sense
+		 * Polarity Low to active low. Supply power to USB ports 1/2.
+		 */
+		UHCHR = (UHCHR | UHCHR_PCPL | UHCHR_PSPL | UHCHR_SSEP3) &
+			~(UHCHR_SSEP1 | UHCHR_SSEP2 | UHCHR_SSE);
+		pxa27x_ohci_pmm_state = PMM_PERPORT_MODE;
+	}
+#else
 	if (machine_is_mainstone()) {
 		/* setup Port1 GPIO pin. */
 		pxa_gpio_mode( 88 | GPIO_ALT_FN_1_IN);	/* USBHPWR1 */
@@ -132,6 +149,7 @@ static void pxa27x_start_hc(struct platf
 			~(UHCHR_SSEP1 | UHCHR_SSEP2 | UHCHR_SSEP3 | UHCHR_SSE);
 	}
 
+#endif
 	UHCHR &= ~UHCHR_SSE;
 
 	UHCHIE = (UHCHIE_UPRIE | UHCHIE_RWIE);
@@ -143,10 +161,20 @@ static void pxa27x_stop_hc(struct platfo
 	udelay(11);
 	UHCHR &= ~UHCHR_FHR;
 
+#ifdef CONFIG_PXA3xx
+	/* set global power switch mode and clear global power */
+	UHCRHDA &= ~(RH_A_NPS | RH_A_PSM);
+	UHCRHS   = 0x1;
+#endif
+
 	UHCCOMS |= 1;
 	udelay(10);
 
+#ifdef CONFIG_PXA3xx
+	pxa_set_cken(CKEN_USBH, 0);
+#else
 	pxa_set_cken(CKEN10_USBHOST, 0);
+#endif
 }
 
 
@@ -224,6 +252,9 @@ int usb_hcd_pxa27x_probe (const struct h
 	hcd->irq = dev->resource[1].start;
 	hcd->regs = addr;
 	hcd->self.controller = &dev->dev;
+#ifdef	CONFIG_USB_OTG
+	hcd->self.otg_port = 2;
+#endif
 
 	retval = hcd_buffer_create (hcd);
 	if (retval != 0) {
@@ -335,9 +366,35 @@ ohci_pxa27x_start (struct usb_hcd *hcd)
 		return ret;
 	}
 
+#ifdef CONFIG_USB_OTG
+	ohci->transceiver = otg_get_transceiver();
+	if (ohci->transceiver) {
+		otg_set_host(ohci->transceiver, &hcd->self);
+	} else {
+		dev_err(hcd->self.controller, "can't find otg transceiver\n");
+		return -ENODEV;
+	}
+#endif
+
 	return 0;
 }
 
+#ifdef CONFIG_USB_OTG
+static void start_hnp(struct ohci_hcd *ohci)
+{
+	const unsigned  port = ohci->hcd.self.otg_port - 1;
+	unsigned long   flags;
+
+	otg_start_hnp(ohci->transceiver);
+
+	local_irq_save(flags);
+	ohci->transceiver->state = OTG_STATE_A_SUSPEND;
+	writel (RH_PS_PSS, &ohci->regs->roothub.portstatus [port]);
+	local_irq_restore(flags);
+}
+
+#endif
+
 /*-------------------------------------------------------------------------*/
 
 static const struct hc_driver ohci_pxa27x_hc_driver = {
Index: linux-2.6.10/include/asm-arm/arch-pxa/zylonite.h
===================================================================
--- linux-2.6.10.orig/include/asm-arm/arch-pxa/zylonite.h
+++ linux-2.6.10/include/asm-arm/arch-pxa/zylonite.h
@@ -1467,4 +1467,4 @@ void enable_1w_pins(void);
 void enable_otg_pins(void);
 void enable_ssp3_pins(void);
 void enable_true_ide_pins(void);
-void enable_usbh_pins(void);
+void zylonite_enable_usbh_pins(void);
Index: linux-2.6.10/mvl_patches/pro-1439.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1439.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1439);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

