#! /usr/bin/env bash
# Patch: -pro_arm_davinci_drivers_ide
# Date: Mon Jan 21 23:05:50 2008
# Source: Texas Instruments Inc.
# MR:23536
# Type: Defect Fix
# Disposition: local
# Signed-off-by: Steve Chen <schen@mvista.com>
# Description:
#   Resync with ide driver from TI.  Updates include
#   1.  Timing adjustments.
#   2.  DM6467 i2c expender setup.
#   3.  White space/format update.
#   4.  Remove reference to pio_speed.  Please refer to bugz 18243 patch
#       linus/2.6.22-rc1/pro_sl82c105-rework-pio-support.patch
# 
#  Patches affected
#   pro_arm_davinci_drivers-sync-100407.patch - combine ide change to this patch.

PATCHNUM=1674
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: Texas Instruments Inc.
MR:23536
Type: Defect Fix
Disposition: local
Signed-off-by: Steve Chen <schen@mvista.com>
Description:
  Resync with ide driver from TI.  Updates include
  1.  Timing adjustments.
  2.  DM6467 i2c expender setup.
  3.  White space/format update.
  4.  Remove reference to pio_speed.  Please refer to bugz 18243 patch
      linus/2.6.22-rc1/pro_sl82c105-rework-pio-support.patch

 Patches affected
  pro_arm_davinci_drivers-sync-100407.patch - combine ide change to this patch.
Index: linux-2.6.10/drivers/ide/davinci/palm_bk3710.c
===================================================================
--- linux-2.6.10.orig/drivers/ide/davinci/palm_bk3710.c
+++ linux-2.6.10/drivers/ide/davinci/palm_bk3710.c
@@ -100,7 +100,7 @@ const palm_bk3710_udmatiming palm_bk3710
         {20, 125, 160},         /* UDMA Mode 1 */
         {20, 100, 120},         /* UDMA Mode 2 */
         {20, 100, 90},          /* UDMA Mode 3 */
-        {20, 85,  60},          /* UDMA Mode 4 */
+	{20, 85,  50},		/* UDMA Mode 4 */
         {20, 85,  40}           /* UDMA Mode 5 */
 };
 
@@ -136,9 +136,9 @@ int palm_bk3710_setudmamode(palm_bk3710_
 
 	if (!is_slave) {
 		/* setup master device parameters */
-		/* udmatim Register */
+		/* udmatim Register
 		palm_bk3710_base->config.udmatim &= 0xFFF0;
-		palm_bk3710_base->config.udmatim |= level;
+		palm_bk3710_base->config.udmatim |= level;*/
 		/* udmastb Ultra DMA Access Strobe Width */
 		palm_bk3710_base->config.udmastb &= 0xFF00;
 		palm_bk3710_base->config.udmastb |= ide_t0;
@@ -152,9 +152,9 @@ int palm_bk3710_setudmamode(palm_bk3710_
 		palm_bk3710_base->config.udmactl |= 1;
 	} else {
 		/* setup slave device parameters */
-		/* udmatim Register */
+		/* udmatim Register
 		palm_bk3710_base->config.udmatim &= 0xFF0F;
-		palm_bk3710_base->config.udmatim |= (level << 4);
+		palm_bk3710_base->config.udmatim |= (level << 4);*/
 		/* udmastb Ultra DMA Access Strobe Width */
 		palm_bk3710_base->config.udmastb &= 0xFF;
 		palm_bk3710_base->config.udmastb |= (ide_t0 << 8);
@@ -298,8 +298,7 @@ static int palm_bk3710_hostdma(ide_drive
 	int is_slave = (&hwif->drives[1] == drive);
 	char ide_cycle;
 	struct hd_driveid *id = drive->id;
-        int nspeed = -1,retval = 0;
-
+	int nspeed = -1, retval = 0;
 
 	if (cpu_is_davinci_dm6467())
 		max_speed = XFER_UDMA_5;
@@ -459,8 +458,7 @@ static void palm_bk3710_tune_drive(ide_d
 	xfermode = XFER_PIO_0 + pio;
 
 	if (ide_config_drive_speed (drive, xfermode) == 0){
-	    drive->pio_speed = xfermode;
-	    drive->current_speed = drive->pio_speed;
+	    drive->current_speed = xfermode;
 	}
 	/* Check for IORDY here */
 	if (piodata.cycle_time < ide_pio_timings[piodata.pio_mode]
@@ -495,19 +493,25 @@ int palm_bk3710_init(void)
 		clk_enable (ideclkp);
 		ide_palm_clk = clk_get_rate(ideclkp)/100000;
 		ide_palm_clk = (10000/ide_palm_clk) + 1;
+
 		/* ATA_SEL is 1 -> Disable 0 -> Enable
 		 * CF_SEL  is 1 -> Disable 0 -> Enable
 		 *
 		 * Ensure both are not Enabled.
 		 */
+		if (cpu_is_davinci_dm6467()) {
+			davinci_i2c_expander_op (0x3A, ATA_PWD_DM646X, 0);
+			davinci_i2c_expander_op (0x3A, ATA_SEL_DM646X, 0);
+		} else {
 #ifdef CONFIG_DAVINCI_BLK_DEV_CF
-		davinci_i2c_expander_op (0x3A, ATA_SEL, 1);
-		davinci_i2c_expander_op (0x3A, CF_RESET, 1);
-		davinci_i2c_expander_op (0x3A, CF_SEL, 0);
+			davinci_i2c_expander_op (0x3A, ATA_SEL, 1);
+			davinci_i2c_expander_op (0x3A, CF_RESET, 1);
+			davinci_i2c_expander_op (0x3A, CF_SEL, 0);
 #else
-		davinci_i2c_expander_op (0x3A, CF_SEL, 1);
-		davinci_i2c_expander_op (0x3A, ATA_SEL, 0);
+			davinci_i2c_expander_op (0x3A, CF_SEL, 1);
+			davinci_i2c_expander_op (0x3A, ATA_SEL, 0);
 #endif
+		}
 		/* Register the IDE interface with Linux ATA Interface */
 		memset(&ide_ctlr_info, 0, sizeof(ide_ctlr_info));
 
Index: linux-2.6.10/mvl_patches/pro-1674.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1674.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1674);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

