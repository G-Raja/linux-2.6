#! /usr/bin/env bash
# Patch: -pro_ppc_mpc8641hpcn_rev12_pci
# Date: Mon Apr  9 00:18:43 2007
# Source: MontaVista Software, Inc.
# MR: 22654
# Type: Enhancement
# Disposition: local
# Signed-off-by: Wade Farnsworth <wfarnsworth@mvista.com>
# Description:
#     Support for PCI devices on the Rev 1.2 MPC8641 HPCN.
# 

PATCHNUM=1305
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 22654
Type: Enhancement
Disposition: local
Signed-off-by: Wade Farnsworth <wfarnsworth@mvista.com>
Description:
    Support for PCI devices on the Rev 1.2 MPC8641 HPCN.

Index: linux-2.6.10/arch/ppc/platforms/86xx/mpc8641_hpcn.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/86xx/mpc8641_hpcn.c
+++ linux-2.6.10/arch/ppc/platforms/86xx/mpc8641_hpcn.c
@@ -222,31 +222,59 @@ mpc86xx_hpcn_init_irq(void)
 int
 mpc86xx_map_irq(struct pci_dev *dev, unsigned char idsel, unsigned char pin)
 {
-	static char pci_irq_table[][4] =
-	/*
-	 *      PCI IDSEL/INTPIN->INTLINE
-	 *       A      B      C      D
-	 */
-	{
-		{PIRQA, PIRQB, PIRQC, PIRQD},	/* IDSEL 17 -- PCI Slot 1 */
-		{PIRQB, PIRQC, PIRQD, PIRQA},	/* IDSEL 18 -- PCI Slot 2 */
-		{PIRQC, PIRQD, PIRQA, PIRQB},	/* IDSEL 19 */
-		{PIRQD, PIRQA, PIRQB, PIRQC},	/* IDSEL 20 */
-		{0, 0, 0, 0},			/* IDSEL 21 */
-		{0, 0, 0, 0},			/* IDSEL 22 */
-		{0, 0, 0, 0},			/* IDSEL 23 */
-		{0, 0, 0, 0},			/* IDSEL 24 */
-		{0, 0, 0, 0},			/* IDSEL 25 */
-		{PIRQD, PIRQA, PIRQB, PIRQC},	/* IDSEL 26 -- PCI Bridge*/
-		{PIRQC, 0, 0, 0},		/* IDSEL 27 -- LAN */
-		{PIRQE, PIRQF, PIRQG, PIRQ7},	/* IDSEL 28 -- USB 1.1 */
-		{PIRQE, PIRQF, PIRQG, 0},	/* IDSEL 29 -- Audio & Modem */
-		{PIRQG, 0, 0, 0},		/* IDSEL 30 -- LPC & PMU*/
-		{PIRQD, PIRQD, PIRQD, PIRQD},	/* IDSEL 31 -- ATA */
-	};
-	const long min_idsel = 17, max_idsel = 31, irqs_per_slot = 4;
+	struct pci_controller *hose = pci_bus_to_hose(dev->bus->number);
 
-	return PCI_IRQ_TABLE_LOOKUP + I8259_OFFSET;
+	if (hose->index == 0) {
+		static char pci_irq_table[][4] =
+ 		/*
+		 *      PCI IDSEL/INTPIN->INTLINE
+		 *       A      B      C      D
+		 */
+		{
+			{PIRQA, PIRQB, PIRQC, PIRQD},	/* 17 - PCI Slot 1 */
+			{PIRQB, PIRQC, PIRQD, PIRQA},	/* 18 - PCI Slot 2 */
+			{PIRQC, PIRQD, PIRQA, PIRQB},	/* 19 */
+			{PIRQD, PIRQA, PIRQB, PIRQC},	/* 20 */
+			{0, 0, 0, 0},			/* 21 */
+			{0, 0, 0, 0},			/* 22 */
+			{0, 0, 0, 0},			/* 23 */
+			{0, 0, 0, 0},			/* 24 */
+			{0, 0, 0, 0},			/* 25 */
+			{PIRQD, PIRQA, PIRQB, PIRQC},	/* 26 - PCI Bridge*/
+			{PIRQC, 0, 0, 0},		/* 27 - LAN */
+			{PIRQE, PIRQF, PIRQG, PIRQ7},	/* 28 - USB 1.1 */
+			{PIRQE, PIRQF, PIRQG, 0},	/* 29 - Audio & Modem */
+			{PIRQG, 0, 0, 0},		/* 30 - LPC & PMU*/
+			{PIRQD, PIRQD, PIRQD, PIRQD},	/* 31 - ATA */
+		};
+		const long min_idsel = 17, max_idsel = 31, irqs_per_slot = 4;
+
+		/*
+		 * On rev 1.02 h/w, PCI Bridge is on bus 1 devfn 0.  Other PCI
+		 * devices on the m1575 are behind the bridge.  Fix up the
+		 * idsel's for these devices.
+		 */
+		if (!idsel) {
+			if (PCI_SLOT(dev->devfn) >= 27)
+				idsel = PCI_SLOT(dev->devfn);
+			else
+				idsel = 26;
+		}
+
+		return PCI_IRQ_TABLE_LOOKUP + I8259_OFFSET;
+	} else if (hose->index == 1) {
+		/*
+		 *      PCI IDSEL/INTPIN->INTLINE
+		 *       A   B   C   D
+		 */
+		static char pci_irq_table[][4] =
+		{
+			{44, 45, 46, 47},		/* 0 */
+		};
+		const long min_idsel = 0, max_idsel = 0, irqs_per_slot = 4;
+		return PCI_IRQ_TABLE_LOOKUP;
+	} else
+		return -1;
 }
 
 static void __devinit quirk_uli1575(struct pci_dev *dev)
@@ -413,6 +441,30 @@ mpc86xx_exclude_device(u_char bus, u_cha
  	return PCIBIOS_SUCCESSFUL;
 }
 
+void mpc86xx_postscan_fixups(struct pci_controller *hose)
+{
+	/*
+	 * The I/O base addresses for the Audio & Modem devices need to be valid
+	 * or the RTC on the m1575 may hang.  This needs to happen before
+	 * time_init() is called.
+	 */
+	unsigned short device_id;
+	int bus;
+
+	/* Rev 1.0 has devices on bus 0.  Rev 1.02 has devices on bus 2 */
+	early_read_config_word(hose, 0, PCI_DEVFN(29, 0), PCI_DEVICE_ID,
+			       &device_id);
+	if (device_id == 0x5455)
+		bus = 0;
+	else
+		bus = 2;
+
+	early_write_config_dword(hose, bus, PCI_DEVFN(29, 0), PCI_BASE_ADDRESS_0,
+				 MPC8641HPCN_ULI5455_IO_BASE);
+	early_write_config_dword(hose, bus, PCI_DEVFN(29, 1), PCI_BASE_ADDRESS_1,
+				 MPC8641HPCN_ULI5457_IO_BASE);
+  }
+
 #endif /* CONFIG_PCI */
 
 void mpc8641hpcn_restart(char *cmd)
@@ -555,7 +607,7 @@ long mpc8641hpcn_time_init(void)
 	 * The RTC is locked until we do a memory read through the chip.
 	 * Reading the first location in PCI memory space seems to unlock it.
 	 */
-	p = ioremap(MPC86XX_PCIE_LOWER_MEM, sizeof(*p));
+ 	p = ioremap(MPC86XX_PCIE1_LOWER_MEM, sizeof(*p));
 	(void) *(volatile u32 *)p;
 	iounmap(p);
 
Index: linux-2.6.10/arch/ppc/platforms/86xx/mpc8641_hpcn.h
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/86xx/mpc8641_hpcn.h
+++ linux-2.6.10/arch/ppc/platforms/86xx/mpc8641_hpcn.h
@@ -47,11 +47,15 @@ extern void mpc86xx_hpcn_map_io(void) __
 #define MPC86XX_PCIE_LOWER_IO		0x00000000
 #define MPC86XX_PCIE_UPPER_IO		0x00ffffff
 
-#define MPC86XX_PCIE_LOWER_MEM		0x80000000
-#define MPC86XX_PCIE_UPPER_MEM		0x9fffffff
+#define MPC86XX_PCIE1_LOWER_MEM		0x80000000
+#define MPC86XX_PCIE1_UPPER_MEM		0x9fffffff
 
-#define MPC86XX_PCIE_IO_BASE		0xe2000000
-#define MPC86XX_PCIE_MEM_OFFSET	0x00000000
+#define MPC86XX_PCIE2_LOWER_MEM		0xa0000000
+#define MPC86XX_PCIE2_UPPER_MEM		0xafffffff
+
+#define MPC86XX_PCIE1_IO_BASE		0xe2000000
+#define MPC86XX_PCIE2_IO_BASE		0xe3000000
+#define MPC86XX_PCIE_MEM_OFFSET		0x00000000
 
 #define MPC86XX_PCIE_IO_SIZE		0x01000000
 
@@ -59,4 +63,13 @@ extern void mpc86xx_hpcn_map_io(void) __
 
 #define NR_8259_INTS			16
 
+/*
+ * The top 16 bits of the I/O BAR's for the ULI 5455 Audio Device and the
+ * ULI 5457 Modem Device are hardwired to zero, causing pciauto_bus_scan() to
+ * fail.  We will set up the BAR's manually using these values.
+ */
+#define MPC8641HPCN_ULI5455_IO_BASE	0x0000ee00
+#define MPC8641HPCN_ULI5457_IO_BASE	0x0000ed00
+
+
 #endif /* __MACH_MPC8641HPCN_H__ */
Index: linux-2.6.10/arch/ppc/syslib/ppc86xx_setup.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/ppc86xx_setup.c
+++ linux-2.6.10/arch/ppc/syslib/ppc86xx_setup.c
@@ -171,13 +171,14 @@ extern int mpc86xx_exclude_device(u_char
 #ifdef CONFIG_PCIE
 
 static void __init
-mpc86xx_setup_pcie(struct pci_controller *hose)
+mpc86xx_setup_pcie(struct pci_controller *hose, u32 pcie_offset, u32 lower_mem,
+		   u32 upper_mem, u32 io_base)
 {
 	volatile struct ccsr_pcie *pcie;
 	u16 cmd;
 	bd_t *binfo = (bd_t *) __res;
 
-	pcie = ioremap(binfo->bi_immr_base + MPC86xx_PCIE_OFFSET,
+	pcie = ioremap(binfo->bi_immr_base + pcie_offset,
 		MPC86xx_PCIE_SIZE);
 
 	early_read_config_word(hose, 0, 0, PCI_COMMAND, &cmd);
@@ -186,17 +187,6 @@ mpc86xx_setup_pcie(struct pci_controller
 	early_write_config_word(hose, 0, 0, PCI_COMMAND, cmd);
 	early_write_config_byte(hose, 0, 0, PCI_LATENCY_TIMER, 0x80);
 
-	/*
- 	 * PCIE Bus, Fix the MPC8641D host bridge's location to bus 0xFF.
-	 * Silicon Rev 1.0 only.
-	 */
-	if ((mfspr(SPRN_SVR) & 0xf0) == 0x10) {
-		early_write_config_byte(hose, 0, 0x0, PCI_PRIMARY_BUS, 0xff);
-		early_write_config_byte(hose, 0xff, 0x0, PCI_SECONDARY_BUS, 0x0);
-		early_write_config_byte(hose, 0xff, 0x0, PCI_SUBORDINATE_BUS,
-					0xfe);
-	}
-
 	/* Disable all windows (except pcieowar0 since its ignored) */
 	pcie->pcieowar1 = 0;
 	pcie->pcieowar2 = 0;
@@ -207,18 +197,18 @@ mpc86xx_setup_pcie(struct pci_controller
 	pcie->pcieiwar2 = 0;
 	pcie->pcieiwar3 = 0;
 
-	/* Setup Phys:PCIE 1:1 outbound mem window @ MPC86XX_PCIE_LOWER_MEM */
-	pcie->pcieotar1 = (MPC86XX_PCIE_LOWER_MEM >> 12) & 0x000fffff;
+	/* Setup Phys:PCIE 1:1 outbound mem window @ MPC86XX_PCIEn_LOWER_MEM */
+	pcie->pcieotar1 = (lower_mem >> 12) & 0x000fffff;
 	pcie->pcieotear1 = 0x00000000;
-	pcie->pcieowbar1 = (MPC86XX_PCIE_LOWER_MEM >> 12) & 0x000fffff;
+	pcie->pcieowbar1 = (lower_mem >> 12) & 0x000fffff;
 	/* Enable, Mem R/W */
 	pcie->pcieowar1 = 0x80044000 |
-		(__ilog2(MPC86XX_PCIE_UPPER_MEM - MPC86XX_PCIE_LOWER_MEM + 1) - 1);
+		(__ilog2(upper_mem - lower_mem + 1) - 1);
 
-	/* Setup outbound IO windows @ MPC86XX_PCIE_IO_BASE */
+	/* Setup outbound IO windows @ MPC86XX_PCIEn_IO_BASE */
 	pcie->pcieotar2 = (MPC86XX_PCIE_LOWER_IO >> 12) & 0x000fffff;
 	pcie->pcieotear2 = 0x00000000;
-	pcie->pcieowbar2 = (MPC86XX_PCIE_IO_BASE >> 12) & 0x000fffff;
+	pcie->pcieowbar2 = (io_base >> 12) & 0x000fffff;
 	/* Enable, IO R/W */
 	pcie->pcieowar2 = 0x80088000 | (__ilog2(MPC86XX_PCIE_IO_SIZE) - 1);
 
@@ -228,64 +218,115 @@ mpc86xx_setup_pcie(struct pci_controller
 	/* Enable, Prefetch, Local Mem, Snoop R/W, 2G */
 	pcie->pcieiwar1 = 0xa0f5501e;
 }
-#endif /* CONFIG_PCIE */
 
 void __init
-mpc86xx_setup_hose(void)
+mpc86xx_setup_one_hose(struct pci_controller * hose, u32 cfg_addr_offset, u32 cfg_data_offset,
+		       u32 lower_mem, u32 upper_mem, u32 io_base)
 {
-#ifdef CONFIG_PCIE
 	extern void setup_indirect_pcie(struct pci_controller* hose, u32 cfg_addr, u32 cfg_data);
 
 	bd_t *binfo = (bd_t *) __res;
-	struct pci_controller* hose_a;
+	setup_indirect_pcie(hose, binfo->bi_immr_base + cfg_addr_offset,
+			    binfo->bi_immr_base + cfg_data_offset);
+	hose->set_cfg_type = 1;
+
+	mpc86xx_setup_pcie(hose, cfg_addr_offset, lower_mem, upper_mem, io_base);
+
+	hose->pci_mem_offset = MPC86XX_PCIE_MEM_OFFSET;
+	hose->mem_space.start = lower_mem;
+	hose->mem_space.end = upper_mem;
+
+	hose->io_space.start = MPC86XX_PCIE_LOWER_IO;
+	hose->io_space.end = MPC86XX_PCIE_UPPER_IO;
+	hose->io_base_phys = io_base;
+	hose->io_base_virt =  ioremap(io_base,
+					MPC86XX_PCIE_IO_SIZE);
+
+	/* setup resources */
+	pci_init_resource(&hose->mem_resources[0], lower_mem, upper_mem,
+			  IORESOURCE_MEM, "PCI Express host bridge");
+
+	pci_init_resource(&hose->io_resource, MPC86XX_PCIE_LOWER_IO,
+			  MPC86XX_PCIE_UPPER_IO, IORESOURCE_IO,
+			  "PCI Express host bridge");
+}
+
+static void __devinit early_host_bridge(struct pci_dev *dev)
+{
+	/* Fix the device class to match header type 1. */
+	dev->class = 0x060401;
+}
+DECLARE_PCI_FIXUP_EARLY(0x1957, 0x7011, early_host_bridge);
+#endif /* CONFIG_PCIE */
+
+void __init
+mpc86xx_setup_hose(void)
+{
+#ifdef CONFIG_PCIE
+	struct pci_controller *hose_a, *hose_b;
+	extern void mpc86xx_postscan_fixups(struct pci_controller *hose);
 
 	DBG("Adding PCIE host bridge\n");
 
 	hose_a = pcibios_alloc_controller();
-
 	if (!hose_a)
 		return;
 
-	ppc_md.pci_swizzle = common_swizzle;
-	ppc_md.pci_map_irq = mpc86xx_map_irq;
-
-	/* last_busno = 0xfe caused by MPC8641 PCIE bug */
-	hose_a->first_busno = 0x0;
 	hose_a->bus_offset = 0;
-	hose_a->last_busno = 0xfe;
+	hose_a->first_busno = 0x0;
+	hose_a->index = 0;
 
-	setup_indirect_pcie(hose_a, binfo->bi_immr_base + PCIE1_CFG_ADDR_OFFSET,
-		binfo->bi_immr_base + PCIE1_CFG_DATA_OFFSET);
-	hose_a->set_cfg_type = 1;
-
-	mpc86xx_setup_pcie(hose_a);
-
-	hose_a->pci_mem_offset = MPC86XX_PCIE_MEM_OFFSET;
-	hose_a->mem_space.start = MPC86XX_PCIE_LOWER_MEM;
-	hose_a->mem_space.end = MPC86XX_PCIE_UPPER_MEM;
-
-	hose_a->io_space.start = MPC86XX_PCIE_LOWER_IO;
-	hose_a->io_space.end = MPC86XX_PCIE_UPPER_IO;
-	hose_a->io_base_phys = MPC86XX_PCIE_IO_BASE;
-	hose_a->io_base_virt =  ioremap(MPC86XX_PCIE_IO_BASE,
-					MPC86XX_PCIE_IO_SIZE);
-	isa_io_base = (unsigned long) hose_a->io_base_virt;
+	mpc86xx_setup_one_hose(hose_a, PCIE1_CFG_ADDR_OFFSET,
+			       PCIE1_CFG_DATA_OFFSET, MPC86XX_PCIE1_LOWER_MEM,
+			       MPC86XX_PCIE1_UPPER_MEM, MPC86XX_PCIE1_IO_BASE);
 
-	/* setup resources */
-	pci_init_resource(&hose_a->mem_resources[0],
-		MPC86XX_PCIE_LOWER_MEM,
-		MPC86XX_PCIE_UPPER_MEM,
-		IORESOURCE_MEM, "PCI Express host bridge");
-
-	pci_init_resource(&hose_a->io_resource,
-		MPC86XX_PCIE_LOWER_IO,
-		MPC86XX_PCIE_UPPER_IO,
-		IORESOURCE_IO, "PCI Express host bridge");
+	isa_io_base = (unsigned long) hose_a->io_base_virt;
+	if ((mfspr(SPRN_SVR) & 0xf0) == 0x10) {
+		/*
+ 		 * PCIE Bus, Fix the MPC8641D host bridge's location to bus 0xFF.
+		 * Silicon Rev 1.0 only.
+		 */
+		early_write_config_byte(hose_a, 0, 0x0, PCI_PRIMARY_BUS, 0xff);
+		early_write_config_byte(hose_a, 0xff, 0x0, PCI_SECONDARY_BUS,
+					0x0);
+		early_write_config_byte(hose_a, 0xff, 0x0, PCI_SUBORDINATE_BUS,
+					0xfe);
 
-	ppc_md.pci_exclude_device = mpc86xx_exclude_device;
+		hose_a->last_busno = 0xfe;
+		hose_a->scan_dev_0 = 0;
+	}
+	else {
+		hose_a->last_busno = 0xff;
+		hose_a->scan_dev_0 = 1;
+	}
 
 	hose_a->last_busno = pciauto_bus_scan(hose_a, hose_a->first_busno);
 
+	mpc86xx_postscan_fixups(hose_a);
+
+	/* Second host bridge broken on Rev 1.0 8641D */
+	if ((mfspr(SPRN_SVR) & 0xf0) != 0x10) {
+		hose_b = pcibios_alloc_controller();
+		if (!hose_b)
+			return;
+		hose_b->first_busno = hose_a->last_busno + 1;
+		hose_b->last_busno = 0xff;
+		hose_b->index = 1;
+		hose_b->scan_dev_0 = 1;
+
+		mpc86xx_setup_one_hose(hose_b, PCIE2_CFG_ADDR_OFFSET,
+				       PCIE2_CFG_DATA_OFFSET,
+				       MPC86XX_PCIE2_LOWER_MEM,
+				       MPC86XX_PCIE2_UPPER_MEM,
+				       MPC86XX_PCIE2_IO_BASE);
+
+		hose_b->last_busno = pciauto_bus_scan(hose_b,
+						      hose_b->first_busno);
+	}
+
+	ppc_md.pci_swizzle = common_swizzle;
+	ppc_md.pci_map_irq = mpc86xx_map_irq;
+	ppc_md.pci_exclude_device = mpc86xx_exclude_device;
+
 #endif /* CONFIG_PCIE */
 }
-
Index: linux-2.6.10/mvl_patches/pro-1305.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1305.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1305);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

