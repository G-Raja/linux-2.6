#! /usr/bin/env bash
# Patch: -pro_mips_tx4938_pci
# Date: Wed Dec 28 15:03:37 2005
# Source: MontaVista Software, Inc.
# MR: 14643
# Type: Enhancement
# Disposition: needs submitting to linux-mips.org
# Signed-off-by: Yuri Shpilevsky <yshpilevsky@ru.mvista.com>
# Description:
#     Changes for PCI controller1 of the tx4938
# 

PATCHNUM=267
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 14643
Type: Enhancement
Disposition: needs submitting to linux-mips.org
Signed-off-by: Yuri Shpilevsky <yshpilevsky@ru.mvista.com>
Description:
    Changes for PCI controller1 of the tx4938

Index: linux-2.6.10/arch/mips/pci/ops-tx4938.c
===================================================================
--- linux-2.6.10.orig/arch/mips/pci/ops-tx4938.c
+++ linux-2.6.10/arch/mips/pci/ops-tx4938.c
@@ -47,46 +47,54 @@ struct resource tx4938_pcic1_pci_mem_res
        	.flags	= IORESOURCE_MEM
 };
 
-static int mkaddr(int bus, int dev_fn, int where, int *flagsp) 
+extern struct tx4938_pcic_reg *pcicptrs[4];
+struct pci_controller tx4938_pci_controller[];
+static inline struct tx4938_pcic_reg *pci_bus_to_pcicptr(struct pci_bus *bus)
+{
+	struct pci_controller *channel = (struct pci_controller *)bus->sysdata;
+		return pcicptrs[channel - &tx4938_pci_controller[0]];
+}
+
+static int mkaddr(int bus, int dev_fn, int where, int *flagsp, struct tx4938_pcic_reg *pcicptr)
 {
 	unsigned long l;
 
 	if (bus > 0) {
 		/* Type 1 configuration */
-		TX4938_WR(&tx4938_pcicptr->g2pcfgadrs, ((bus & 0xff) << 0x10) |
+		TX4938_WR(&pcicptr->g2pcfgadrs, ((bus & 0xff) << 0x10) |
 			  ((dev_fn & 0xff) << 0x08) | (where & 0xfc) | 1);
 	} else {
 		if (dev_fn >= PCI_DEVFN(TX4938_PCIC_MAX_DEVNU, 0))
 			return -1;
 
 		/* Type 0 configuration */
-		TX4938_WR(&tx4938_pcicptr->g2pcfgadrs, ((bus & 0xff) << 0x10) |
+		TX4938_WR(&pcicptr->g2pcfgadrs, ((bus & 0xff) << 0x10) |
 			  ((dev_fn & 0xff) << 0x08) | (where & 0xfc));
 	}
 	/* clear M_ABORT and Disable M_ABORT Int. */
-	TX4938_WR(&tx4938_pcicptr->pcistatus,
-		  (TX4938_RD(&tx4938_pcicptr->pcistatus) & 0x0000ffff) |
+	TX4938_WR(&pcicptr->pcistatus,
+		  (TX4938_RD(&pcicptr->pcistatus) & 0x0000ffff) |
 		  (PCI_STATUS_REC_MASTER_ABORT << 16));
 	
-	l = TX4938_RD(&tx4938_pcicptr->pcimask);
-	TX4938_WR(&tx4938_pcicptr->pcimask, l & ~PCI_STATUS_REC_MASTER_ABORT);
+	l = TX4938_RD(&pcicptr->pcimask);
+	TX4938_WR(&pcicptr->pcimask, l & ~PCI_STATUS_REC_MASTER_ABORT);
 
 	return 0;
 }
 
-static int check_abort(int flags)
+static int check_abort(int flags, struct tx4938_pcic_reg *pcicptr)
 {
 	int code = PCIBIOS_SUCCESSFUL;
 	unsigned long l;
 	/* wait write cycle completion before checking error status */
-	while (TX4938_RD(&tx4938_pcicptr->pcicstatus) & TX4938_PCIC_PCICSTATUS_IWB)
+	while (TX4938_RD(&pcicptr->pcicstatus) & TX4938_PCIC_PCICSTATUS_IWB)
 		;         
-	if (TX4938_RD(&tx4938_pcicptr->pcistatus) & (PCI_STATUS_REC_MASTER_ABORT << 16)) {
-		TX4938_WR(&tx4938_pcicptr->pcistatus,
-			  (TX4938_RD(&tx4938_pcicptr->pcistatus) & 0x0000ffff) | 
+	if (TX4938_RD(&pcicptr->pcistatus) & (PCI_STATUS_REC_MASTER_ABORT << 16)) {
+		TX4938_WR(&pcicptr->pcistatus,
+			  (TX4938_RD(&pcicptr->pcistatus) & 0x0000ffff) |
 			  (PCI_STATUS_REC_MASTER_ABORT << 16));
-		l = TX4938_RD(&tx4938_pcicptr->pcimask);
-		TX4938_WR(&tx4938_pcicptr->pcimask, l|PCI_STATUS_REC_MASTER_ABORT);
+		l = TX4938_RD(&pcicptr->pcimask);
+		TX4938_WR(&pcicptr->pcimask, l|PCI_STATUS_REC_MASTER_ABORT);
 		code = PCIBIOS_DEVICE_NOT_FOUND;
 	}
 	return code;
@@ -96,6 +104,7 @@ static int tx4938_pcibios_read_config(st
 					int where, int size, u32 * val)
 {
 	int flags, retval, dev, busno, func;
+	struct tx4938_pcic_reg *pcicptr = pci_bus_to_pcicptr(bus);
 	
 	dev = PCI_SLOT(devfn);
 	func = PCI_FUNC(devfn);
@@ -107,12 +116,12 @@ static int tx4938_pcibios_read_config(st
 		busno = 0;
 	}
 
-	if (mkaddr(busno, devfn, where, &flags))
+	if (mkaddr(busno, devfn, where, &flags, pcicptr))
 		return -1;
 
 	switch (size) {
 	case 1:
-		*val = *(volatile u8 *) ((ulong) & tx4938_pcicptr->g2pcfgdata |
+		*val = *(volatile u8 *) ((ulong)& pcicptr->g2pcfgdata |
 #ifdef __BIG_ENDIAN
 			      ((where & 3) ^ 3));
 #else
@@ -120,7 +129,7 @@ static int tx4938_pcibios_read_config(st
 #endif
 		break;
 	case 2:
-		*val = *(volatile u16 *) ((ulong) & tx4938_pcicptr->g2pcfgdata |
+		*val = *(volatile u16 *) ((ulong)& pcicptr->g2pcfgdata |
 #ifdef __BIG_ENDIAN
 				((where & 3) ^ 2));
 #else
@@ -128,11 +137,11 @@ static int tx4938_pcibios_read_config(st
 #endif
 		break;
 	case 4:
-		*val = TX4938_RD(&tx4938_pcicptr->g2pcfgdata);
+		*val = TX4938_RD(&pcicptr->g2pcfgdata);
 		break;
 	}
 	
-	retval = check_abort(flags);
+	retval = check_abort(flags, pcicptr);
 	if (retval == PCIBIOS_DEVICE_NOT_FOUND)
 		*val = 0xffffffff;
 
@@ -143,6 +152,7 @@ static int tx4938_pcibios_write_config(s
 						int size, u32 val)
 {
 	int flags, dev, busno, func;
+	struct tx4938_pcic_reg *pcicptr = pci_bus_to_pcicptr(bus);
 
 	busno = bus->number;
 	dev = PCI_SLOT(devfn);
@@ -155,12 +165,12 @@ static int tx4938_pcibios_write_config(s
 		busno = 0;
 	}
 
-	if (mkaddr(busno, devfn, where, &flags))
+	if (mkaddr(busno, devfn, where, &flags, pcicptr))
 		return -1;
 
 	switch (size) {
 	case 1:
-		*(volatile u8 *) ((ulong) & tx4938_pcicptr->g2pcfgdata |
+		*(volatile u8 *) ((ulong)& pcicptr->g2pcfgdata |
 #ifdef __BIG_ENDIAN
 			  ((where & 3) ^ 3)) = val;
 #else
@@ -168,7 +178,7 @@ static int tx4938_pcibios_write_config(s
 #endif
 		break;
 	case 2:
-		*(volatile u16 *) ((ulong) & tx4938_pcicptr->g2pcfgdata |
+		*(volatile u16 *) ((ulong)& pcicptr->g2pcfgdata |
 #ifdef __BIG_ENDIAN
 			((where & 0x3) ^ 0x2)) = val;
 #else
@@ -176,11 +186,11 @@ static int tx4938_pcibios_write_config(s
 #endif
 		break;
 	case 4:
-		TX4938_WR(&tx4938_pcicptr->g2pcfgdata, val);
+		TX4938_WR(&pcicptr->g2pcfgdata, val);
 		break;
 	}
 
-	return check_abort(flags);
+	return check_abort(flags, pcicptr);
 }
 
 struct pci_ops tx4938_pci_ops = {
Index: linux-2.6.10/arch/mips/tx4938/toshiba_rbtx4938/setup.c
===================================================================
--- linux-2.6.10.orig/arch/mips/tx4938/toshiba_rbtx4938/setup.c
+++ linux-2.6.10/arch/mips/tx4938/toshiba_rbtx4938/setup.c
@@ -196,7 +196,7 @@ tx4938_pcic_setup(struct tx4938_pcic_reg
 #endif
 	    );
 
-	TX4938_WR64(&pcicptr->g2piopbase, 0);
+	TX4938_WR64(&pcicptr->g2piopbase, pci_io_base);
 	for (i = 0; i < 3; i++) {
 		TX4938_WR(&pcicptr->g2pmmask[i], 0);
 		TX4938_WR64(&pcicptr->g2pmgbase[i], 0);
@@ -378,6 +378,7 @@ static struct pci_dev *fake_pci_dev(stru
 	bus.number = busnr;
 	bus.ops = hose->pci_ops;
 	bus.parent = NULL;
+	bus.sysdata = (void *)hose;
 	dev.bus = &bus;
 
 	return &dev;
@@ -601,14 +602,14 @@ static int __init tx4938_pcibios_init(vo
 			  io_base[1], extarb);
 
 	/* map ioport 0 to PCI I/O space address 0 */
-	set_io_port_base(KSEG1 + io_base[0]);
+	set_io_port_base(KSEG1);
 
 	return 0;
 }
 
 arch_initcall(tx4938_pcibios_init);
 
-#endif				/* CONFIG_PCI */
+#endif /* CONFIG_PCI */
 
 /* SPI support */
 
@@ -928,6 +929,29 @@ void __init tx4938_board_setup(void)
 }
 
 #ifdef CONFIG_PCI
+void tx4938_dump_pcic_settings(void)
+{
+	printk("tx4938 pcic settings:");
+	{
+		int i;
+		unsigned long *preg = (unsigned long *) tx4938_pcicptr;
+		for (i = 0; i < sizeof (struct tx4938_pcic_reg); i += 4) {
+			if (i % 32 == 0)
+				printk("\n%04x:", i);
+			if (preg == &tx4938_pcicptr->g2pintack
+			    || preg == &tx4938_pcicptr->g2pspc) {
+				printk(" XXXXXXXX");
+				preg++;
+				continue;
+			}
+			printk(" %08lx", *preg++);
+			if (preg == &tx4938_pcicptr->g2pcfgadrs)
+				break;
+		}
+		printk("\n");
+	}
+}
+
 static inline void tx4938_report_pcic_status1(struct tx4938_pcic_reg *pcicptr)
 {
 	unsigned short pcistatus =
@@ -938,25 +962,25 @@ static inline void tx4938_report_pcic_st
 		unsigned long flag;
 		const char *str;
 	} pcistat_tbl[] = {
-		{
-		PCI_STATUS_DETECTED_PARITY, "DetectedParityError"}, {
-		PCI_STATUS_SIG_SYSTEM_ERROR, "SignaledSystemError"}, {
-		PCI_STATUS_REC_MASTER_ABORT, "ReceivedMasterAbort"}, {
-		PCI_STATUS_REC_TARGET_ABORT, "ReceivedTargetAbort"}, {
-		PCI_STATUS_SIG_TARGET_ABORT, "SignaledTargetAbort"}, {
-	PCI_STATUS_PARITY, "MasterParityError"},}, g2pstat_tbl[] = {
-		{
-		TX4938_PCIC_G2PSTATUS_TTOE, "TIOE"}, {
-	TX4938_PCIC_G2PSTATUS_RTOE, "RTOE"},}, pcicstat_tbl[] = {
-		{
-		TX4938_PCIC_PCICSTATUS_PME, "PME"}, {
-		TX4938_PCIC_PCICSTATUS_TLB, "TLB"}, {
-		TX4938_PCIC_PCICSTATUS_NIB, "NIB"}, {
-		TX4938_PCIC_PCICSTATUS_ZIB, "ZIB"}, {
-		TX4938_PCIC_PCICSTATUS_PERR, "PERR"}, {
-		TX4938_PCIC_PCICSTATUS_SERR, "SERR"}, {
-		TX4938_PCIC_PCICSTATUS_GBE, "GBE"}, {
-	TX4938_PCIC_PCICSTATUS_IWB, "IWB"},};
+		{ PCI_STATUS_DETECTED_PARITY,	"DetectedParityError" },
+		{ PCI_STATUS_SIG_SYSTEM_ERROR,	"SignaledSystemError" },
+		{ PCI_STATUS_REC_MASTER_ABORT,	"ReceivedMasterAbort" },
+		{ PCI_STATUS_REC_TARGET_ABORT,	"ReceivedTargetAbort" },
+		{ PCI_STATUS_SIG_TARGET_ABORT,	"SignaledTargetAbort" },
+		{ PCI_STATUS_PARITY,	"MasterParityError" },
+	}, g2pstat_tbl[] = {
+		{ TX4938_PCIC_G2PSTATUS_TTOE,	"TIOE" },
+		{ TX4938_PCIC_G2PSTATUS_RTOE,	"RTOE" },
+	}, pcicstat_tbl[] = {
+		{ TX4938_PCIC_PCICSTATUS_PME,	"PME" },
+		{ TX4938_PCIC_PCICSTATUS_TLB,	"TLB" },
+		{ TX4938_PCIC_PCICSTATUS_NIB,	"NIB" },
+		{ TX4938_PCIC_PCICSTATUS_ZIB,	"ZIB" },
+		{ TX4938_PCIC_PCICSTATUS_PERR,	"PERR" },
+		{ TX4938_PCIC_PCICSTATUS_SERR,	"SERR" },
+		{ TX4938_PCIC_PCICSTATUS_GBE,	"GBE" },
+		{ TX4938_PCIC_PCICSTATUS_IWB,	"IWB" },
+	};
 	int i;
 
 	printk("pcistat:%04x(", pcistatus);
@@ -982,7 +1006,34 @@ void tx4938_report_pcic_status(void)
 		tx4938_report_pcic_status1(pcicptr);
 }
 
-#endif				/* CONFIG_PCI */
+static irqreturn_t tx4938_pcierr_interrupt(int irq, void *dev_id, struct pt_regs *regs)
+{
+        printk("PCIERR interrupt (irq 0x%x) at 0x%08lx.\n",
+               irq, regs->cp0_epc);
+        printk("ccfg:%Lx, tear:%Lx\n",
+               tx4938_ccfgptr->ccfg, tx4938_ccfgptr->tear);
+        tx4938_report_pcic_status();
+        show_regs(regs);
+        tx4938_dump_pcic_settings();
+        panic("PCI error.");
+
+	return IRQ_HANDLED;
+}
+
+static struct irqaction tx4938_pcic_action = {
+	tx4938_pcierr_interrupt, SA_INTERRUPT, CPU_MASK_NONE, "PCI-C", NULL, NULL,
+};
+
+static struct irqaction tx4938_pcierr_action = {
+	tx4938_pcierr_interrupt, SA_INTERRUPT, CPU_MASK_NONE, "PCI error", NULL, NULL,
+};
+
+void __init toshiba_tx4938_setup_pci_irq(void)
+{
+	setup_irq(TX4938_IRQ_IRC_PCIC, &tx4938_pcic_action);
+	setup_irq(TX4938_IRQ_IRC_PCIERR, &tx4938_pcierr_action);
+}
+#endif /* CONFIG_PCI */
 
 /* We use onchip r4k counter or TMR timer as our system wide timer
  * interrupt running at 100HZ. */
Index: linux-2.6.10/include/asm-mips/tx4938/tx4938.h
===================================================================
--- linux-2.6.10.orig/include/asm-mips/tx4938/tx4938.h
+++ linux-2.6.10/include/asm-mips/tx4938/tx4938.h
@@ -31,7 +31,7 @@
 #define TX4938_PCIIO_SIZE_0 0x01000000
 #define TX4938_PCIIO_SIZE_1 0x00010000
 #define TX4938_PCIMEM_SIZE_0 0x08000000
-#define TX4938_PCIMEM_SIZE_1 0x00010000
+#define TX4938_PCIMEM_SIZE_1 0x02000000
 
 #define TX4938_REG_BASE	0xff1f0000	/* == TX4937_REG_BASE */
 #define TX4938_REG_SIZE	0x00010000	/* == TX4937_REG_SIZE */
Index: linux-2.6.10/mvl_patches/pro-0267.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0267.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2005 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(267);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

