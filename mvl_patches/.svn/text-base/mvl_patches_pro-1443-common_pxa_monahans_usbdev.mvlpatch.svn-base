#! /usr/bin/env bash
# Patch: -common_pxa_monahans_usbdev
# Date: Fri Dec  7 11:52:34 2007
# Source: Marvell International Ltd.
# MR: 23401
# Type: Integration
# Disposition: merged from Marvell
# Signed-off-by: yadviga grigorieva <yadviga@ru.mvista.com>
# Description:
# 	Configuring usb conrollers 
# 

PATCHNUM=1443
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: Marvell International Ltd.
MR: 23401
Type: Integration
Disposition: merged from Marvell
Signed-off-by: yadviga grigorieva <yadviga@ru.mvista.com>
Description:
	Configuring usb conrollers 

Index: linux-2.6.10/drivers/usb/gadget/Kconfig
===================================================================
--- linux-2.6.10.orig/drivers/usb/gadget/Kconfig
+++ linux-2.6.10/drivers/usb/gadget/Kconfig
@@ -132,6 +132,76 @@ config USB_PXA27X_DMA
 	depends on USB_GADGET_PXA27X
 	default n
 
+config USB_GADGET_PXA3XX
+	boolean "PXA3xx Processor USB 1.1 controller"
+	depends on ARCH_PXA && PXA3xx && !PXA310
+	help
+	   Intel's Monahans series XScale ARM-5TE processors include
+	   an integrated full speed USB 1.1 device controller.
+
+	   Say "y" to link the driver statically, or "m" to build a
+	   dynamically linked module called "pxa3xx_udc" and force all
+	   gadget drivers to also be dynamically linked.
+
+config USB_PXA3XX
+	tristate
+	depends on USB_GADGET_PXA3XX
+	default USB_GADGET
+
+config USB_PXA3XX_DMA
+	bool "Use DMA support"
+	depends on USB_GADGET_PXA3XX
+	default y
+
+config USB_OTG
+	boolean "OTG Support on PXA3xx Processor USB 1.1 controller"
+	depends on USB_GADGET_PXA3XX && USB_OHCI_HCD && PXA3XX_ARAVA
+	default y
+	 help
+	   The most notable feature of USB OTG is support for a
+	   "Dual-Role" device, which can act as either a device
+	   or a host.  The initial role choice can be changed
+	   later, when two dual-role devices talk to each other.
+
+	   Select this only if your PXA3xx board has a Mini-AB connector.
+
+config USB_OTG_PXA3XX
+	boolean "USB OTG support on PXA3xx Processor"
+	depends on USB_OTG && PXA3xx
+	default USB_OTG
+
+config USB_GADGET_PXA3XX_U2D
+	depends on ARCH_PXA && PXA3xx
+	bool "Monahans USB 2.0 controller"
+	select USB_GADGET_DUALSPEED
+	help
+	   Intel(R) processor  Monahans series XScale processors include a
+	   high speed USB 2.0 device controller, which support
+	   high speed and full speed USB Peripheral.
+
+	   Say "y" to link the driver statically, or "m" to build a
+	   dynamically linked module called "pxa3xx_u2d" and force all
+	   gadget drivers to also be dynamically linked.
+
+config USB_PXA3XX_U2D
+	tristate
+	depends on USB_GADGET_PXA3XX_U2D
+	default USB_GADGET
+
+config USB_OTG
+	boolean "OTG Support on Marvell(R) PXA3xx Processor USB 2.0 controller"
+	depends on USB_GADGET_PXA3XX_U2D && USB_OHCI_HCD && PXA310
+	help
+	 The most notable feature of USB OTG is support for a
+	 "Dual-Role" device, which can act as either a device
+	 or a host.  The initial role choice can be changed
+	 later, when two dual-role devices talk to each other.
+
+config USB_OTG_PXA3XX_U2D
+	boolean "USB OTG support on Marvell(R) PXA3xx Processor"
+	depends on USB_OTG && USB_GADGET_PXA3XX_U2D
+	default USB_OTG
+
 config USB_GADGET_GOKU
 	boolean "Toshiba TC86C001 'Goku-S'"
 	depends on PCI
Index: linux-2.6.10/drivers/usb/gadget/Makefile
===================================================================
--- linux-2.6.10.orig/drivers/usb/gadget/Makefile
+++ linux-2.6.10/drivers/usb/gadget/Makefile
@@ -14,6 +14,8 @@ obj-$(CONFIG_USB_MPC8272ADS)	+= mpc8272_
 obj-$(CONFIG_USB_MUSBHSFC)	+= musbhsfc_udc.o
 obj-$(CONFIG_USB_GADGET_MPC885ADS)	+= mpc885_udc.o
 obj-$(CONFIG_USB_SUPERH)       += superh_udc.o
+obj-$(CONFIG_USB_PXA3XX)	+= pxa3xx_udc.o
+obj-$(CONFIG_USB_PXA3XX_U2D)	+= pxa3xx_u2d.o
 
 #
 # USB gadget drivers
Index: linux-2.6.10/drivers/usb/gadget/epautoconf.c
===================================================================
--- linux-2.6.10.orig/drivers/usb/gadget/epautoconf.c
+++ linux-2.6.10/drivers/usb/gadget/epautoconf.c
@@ -271,6 +271,13 @@ struct usb_ep * __init usb_ep_autoconfig
 		ep = find_ep (gadget, "ep1-bulk");
 		if (ep && ep_matches (gadget, ep, desc))
 			return ep;
+#if defined(CONFIG_USB_PXA3XX)  || defined(CONFIG_USB_PXA3XX_U2D)
+	} else if (gadget_is_pxa3xx(gadget) || gadget_is_pxa3xx_u2d(gadget)) {
+extern struct usb_ep* pxa3xx_ep_config(struct usb_gadget *gadget,
+		struct usb_endpoint_descriptor *desc);
+
+		return pxa3xx_ep_config(gadget, desc);
+#endif
 	}
 
 	/* Second, look at endpoints until an unclaimed one looks usable */ 
Index: linux-2.6.10/drivers/usb/gadget/gadget_chips.h
===================================================================
--- linux-2.6.10.orig/drivers/usb/gadget/gadget_chips.h
+++ linux-2.6.10/drivers/usb/gadget/gadget_chips.h
@@ -119,6 +119,18 @@
 #define gadget_is_mpc885(g)	0
 #endif
 
+#ifdef CONFIG_USB_GADGET_PXA3XX
+#define	gadget_is_pxa3xx(g)	!strcmp("pxa3xx_udc", (g)->name)
+#else
+#define	gadget_is_pxa3xx(g)	0
+#endif
+
+#ifdef CONFIG_USB_GADGET_PXA3XX_U2D
+#define	gadget_is_pxa3xx_u2d(g)	!strcmp("pxa3xx_u2d", (g)->name)
+#else
+#define	gadget_is_pxa3xx_u2d(g)	0
+#endif
+
 // CONFIG_USB_GADGET_SX2
 // CONFIG_USB_GADGET_AU1X00
 // ...
@@ -177,5 +189,9 @@ static inline int usb_gadget_controller_
 		return 0x17;
 	else if (gadget_is_mpc885(gadget))
 		return 0x18;
+ 	else if (gadget_is_pxa3xx(gadget))
+ 		return 0x19;
+ 	else if (gadget_is_pxa3xx_u2d(gadget))
+ 		return 0x20;
 	return -ENOENT;
 }
Index: linux-2.6.10/drivers/usb/gadget/ether.c
===================================================================
--- linux-2.6.10.orig/drivers/usb/gadget/ether.c
+++ linux-2.6.10/drivers/usb/gadget/ether.c
@@ -242,6 +242,10 @@ MODULE_PARM_DESC(host_addr, "Host Ethern
 #define DEV_CONFIG_CDC
 #endif
 
+#if defined (CONFIG_USB_GADGET_PXA3XX) || defined (CONFIG_USB_GADGET_PXA3XX_U2D)
+#define DEV_CONFIG_CDC
+#endif
+
 #ifdef CONFIG_USB_GADGET_AT91
 #define DEV_CONFIG_CDC
 #endif
Index: linux-2.6.10/mvl_patches/pro-1443.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1443.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1443);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

