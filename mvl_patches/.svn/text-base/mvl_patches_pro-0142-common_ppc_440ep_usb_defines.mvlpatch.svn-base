#! /usr/bin/env bash
# Patch: -common_ppc_440ep_usb_defines
# Date: Wed Dec 28 14:59:15 2005
# Source: John Otken <jotken@softadvances.com>, MontaVista Software, Inc.
# MR: 14294
# Type: Enhancement
# Disposition: submitted to linuxppc-embedded mailing list
# Signed-off-by: John Otken <jotken@softadvances.com>
# 	       Wade Farnsworth <wfarnsworth@mvista.com>
# Description:
# 	Platform-specific defines for USB Host and Device interfaces on the
# 	AMCC 440EP Eval Board.
# 	

PATCHNUM=142
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: John Otken <jotken@softadvances.com>, MontaVista Software, Inc.
MR: 14294
Type: Enhancement
Disposition: submitted to linuxppc-embedded mailing list
Signed-off-by: John Otken <jotken@softadvances.com>
	       Wade Farnsworth <wfarnsworth@mvista.com>
Description:
	Platform-specific defines for USB Host and Device interfaces on the
	AMCC 440EP Eval Board.
	
Index: linux-2.6.10/include/asm-ppc/ibm44x.h
===================================================================
--- linux-2.6.10.orig/include/asm-ppc/ibm44x.h
+++ linux-2.6.10/include/asm-ppc/ibm44x.h
@@ -169,6 +169,7 @@
 #ifdef CONFIG_440EP
 #define DCRN_SDR_UART2		0x0122
 #define DCRN_SDR_UART3		0x0123
+#define DCRN_SDR_USB0		0x0320
 #define DCRN_SDR_CUST0		0x4000
 #endif
 
Index: linux-2.6.10/arch/ppc/platforms/4xx/ibm440ep.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/4xx/ibm440ep.c
+++ linux-2.6.10/arch/ppc/platforms/4xx/ibm440ep.c
@@ -181,23 +181,48 @@ struct ppc4xx_uic_settings ppc4xx_core_u
 	},
 };
 
-static struct resource usb_gadget_resources[] = {
+static struct resource ohci_usb_resources[] = {
 	[0] = {
-		.start	= 0x050000100ULL,
-		.end 	= 0x05000017FULL,
+		.start	= 0x0EF601000ULL,
+		.end 	= 0x0EF60107FULL,
 		.flags	= IORESOURCE_MEM,
 	},
 	[1] = {
-		.start	= 55,
-		.end	= 55,
+		.start	= 40,
+		.end	= 40,
 		.flags	= IORESOURCE_IRQ,
 	},
 };
 
+static struct resource usb_gadget_resources[] = {
+	[0] = {
+		.start  = 0x050000100ULL,
+		.end    = 0x05000017FULL,
+		.flags  = IORESOURCE_MEM,
+	},
+	[1] = {
+		.start  = 55,
+		.end    = 55,
+		.flags  = IORESOURCE_IRQ,
+		.name   = "usb_device_irq",
+	},
+};
+
 static u64 dma_mask = 0xffffffffULL;
 
+static struct platform_device ohci_usb_device = {
+	.name           = "ppc-soc-ohci",
+	.id             = 1,
+	.num_resources  = ARRAY_SIZE(ohci_usb_resources),
+	.resource       = ohci_usb_resources,
+	.dev            = {
+		.dma_mask = &dma_mask,
+		.coherent_dma_mask = 0xffffffffULL,
+	}
+};
+
 static struct platform_device usb_gadget_device = {
-	.name		= "musbhsfc",
+	.name		= "musbhsfc_udc",
 	.id		= 0,
 	.num_resources	= ARRAY_SIZE(usb_gadget_resources),
 	.resource       = usb_gadget_resources,
@@ -209,6 +234,7 @@ static struct platform_device usb_gadget
 
 static struct platform_device *ibm440ep_devs[] __initdata = {
 	&usb_gadget_device,
+	&ohci_usb_device,
 };
 
 static int __init
Index: linux-2.6.10/mvl_patches/pro-0142.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0142.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2005 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(142);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

