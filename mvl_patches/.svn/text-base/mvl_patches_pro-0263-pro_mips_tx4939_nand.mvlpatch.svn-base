#! /usr/bin/env bash
# Patch: -pro_mips_tx4939_nand
# Date: Wed Dec 28 15:03:29 2005
# Source: MontaVista Software, Inc.
# MR: 13614 16061
# Type: Defect Fix
# Disposition: needs submitting to linux-mips.org
# Signed-off-by: Atsuo Igarashi <aigarashi@mvista.com>
# Description:
# 	1. add board specific structure as nand_bbt_descr for bad block scan.
# 	2. modify accessing bit width for DMA source address register.
# 	3. modify setting I/O address from top of register structure.
# 
#  arch/mips/tx4939/rbtx4939/setup.c |    2 +-
#  drivers/mtd/nand/tx4939ndfmc.c    |   28 +++++++++++++++++++++-------
#  2 files changed, 22 insertions(+), 8 deletions(-)
# 

PATCHNUM=263
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 13614 16061
Type: Defect Fix
Disposition: needs submitting to linux-mips.org
Signed-off-by: Atsuo Igarashi <aigarashi@mvista.com>
Description:
	1. add board specific structure as nand_bbt_descr for bad block scan.
	2. modify accessing bit width for DMA source address register.
	3. modify setting I/O address from top of register structure.

 arch/mips/tx4939/rbtx4939/setup.c |    2 +-
 drivers/mtd/nand/tx4939ndfmc.c    |   28 +++++++++++++++++++++-------
 mvl_patches/pro-0263.c            |   16 ++++++++++++++++
 3 files changed, 38 insertions(+), 8 deletions(-)

Index: linux-2.6.10/arch/mips/tx4939/rbtx4939/setup.c
===================================================================
--- linux-2.6.10.orig/arch/mips/tx4939/rbtx4939/setup.c
+++ linux-2.6.10/arch/mips/tx4939/rbtx4939/setup.c
@@ -238,7 +238,7 @@ static void __init rbtx4939_nor_setup(vo
 void rbtx4939_get_tx4939_nandc_parameter(int *hold, int *spw)
 {
 	*hold = 2;
-	*spw = 7;               /*  GBUSCLK = 5ns (@ GBUSCLK 200MHz) */
+	*spw = 8;               /*  GBUSCLK = 5ns (@ GBUSCLK 200MHz) */
 }
 #endif                         /* CONFIG_MTD_NAND */
 #endif				/* CONFIG_MTD_TX4938 */
Index: linux-2.6.10/drivers/mtd/nand/tx4939ndfmc.c
===================================================================
--- linux-2.6.10.orig/drivers/mtd/nand/tx4939ndfmc.c
+++ linux-2.6.10/drivers/mtd/nand/tx4939ndfmc.c
@@ -92,6 +92,17 @@ static struct mtd_partition partition_in
 };
 #endif
 
+/* Define bad / good block scan pattern which are used
+ * while scanning a device for factory marked good / bad blocks. */
+static uint8_t bbt_pattern[] = { 0xff };
+
+static struct nand_bbt_descr tx4939ndfmc_bbt_main_descr = {
+	.options = 0,
+	.offs = 5,
+	.len = 1,
+	.pattern = bbt_pattern
+};
+
 /**
  * tx4939ndfmc_hwcontrol - send command to NDFMC
  * @mtd_info: device information
@@ -107,6 +118,8 @@ static void tx4939ndfmc_hwcontrol(struct
 		break;
 	case NAND_CTL_CLRCLE:
 		reg_wr16(&tx4939_ndfmcptr->mcr, s & ~TX4939_NDFMCR_CLE);
+		if (!(s & TX4939_NDFMCR_WE))
+			reg_wr16(&tx4939_ndfmcptr->dtr, 0);
 		break;
 	case NAND_CTL_SETALE:
 		reg_wr16(&tx4939_ndfmcptr->mcr, s | TX4939_NDFMCR_ALE);
@@ -267,7 +280,7 @@ tx4939ndfmc_nand_read_buf(struct mtd_inf
 	if (len == TRANSFER_SIZE && ((unsigned long)buf & 7) == 0) {
 		dma_cache_inv((unsigned long)buf, len);
 		reg_wr32(&tx4939_dmacptr(0)->ch[3].cntr, TRANSFER_SIZE);
-		reg_wr32(&tx4939_dmacptr(0)->ch[3].sar, CPHYSADDR(buf));
+		reg_wr64(&tx4939_dmacptr(0)->ch[3].sar, CPHYSADDR(buf));
 		l = reg_rd32(&tx4939_dmacptr(0)->ch[3].ccr);
 		reg_wr32(&tx4939_dmacptr(0)->ch[3].ccr, l | TX4939_DMCCR_XFACT);
 
@@ -443,13 +456,12 @@ int __init tx4939ndfmc_init(void)
 	reg_wr64(&tx4939_ccfgptr->clkctr, q & ~TX4939_CLKCTR_NDCRST);
 	udelay(1);		/* wait 128 CPU clocks (2.5ns * 128 = 320ns) */
 	reg_wr16(&tx4939_ndfmcptr->sr, 0);
-	reg_wr16(&tx4939_ndfmcptr->dtr, 0);
-
-	/* setup BusSeparete */
-	reg_wr16(&tx4939_ndfmcptr->mcr, bsprt ? TX4939_NDFMCR_BSPRT : 0);
 	/* setup  Hold Time, Strobe Pulse Width */
 	rbtx4939_get_tx4939_nandc_parameter(&hold, &spw);
 	reg_wr16(&tx4939_ndfmcptr->spr, hold << 4 | spw);
+	/* setup BusSeparete */
+	reg_wr16(&tx4939_ndfmcptr->mcr, bsprt ? TX4939_NDFMCR_BSPRT : 0);
+	reg_wr16(&tx4939_ndfmcptr->dtr, 0);
 
 #ifdef USE_DMA
 	/* Initialize DMAC */
@@ -501,8 +513,8 @@ int __init tx4939ndfmc_init(void)
 	tx4939ndfmc_mtd->priv = this;
 
 	/* Set address of NAND IO lines */
-	this->IO_ADDR_R = (unsigned long)&tx4939_ndfmcptr->dtr;
-	this->IO_ADDR_W = (unsigned long)&tx4939_ndfmcptr->dtr;
+	this->IO_ADDR_R = (void __iomem *)tx4939_ndfmcptr;
+	this->IO_ADDR_W = (void __iomem *)tx4939_ndfmcptr;
 	this->hwcontrol = tx4939ndfmc_hwcontrol;
 	this->dev_ready = tx4939ndfmc_dev_ready;
 	this->calculate_ecc = tx4939ndfmc_calculate_ecc;
@@ -521,6 +533,8 @@ int __init tx4939ndfmc_init(void)
 	this->read_buf = tx4939ndfmc_nand_read_buf;
 	this->verify_buf = tx4939ndfmc_nand_verify_buf;
 
+	this->bbt_td = &tx4939ndfmc_bbt_main_descr;
+
 	/* Scan to find existance of the device */
 	if (nand_scan(tx4939ndfmc_mtd, 1)) {
 		kfree(tx4939ndfmc_mtd);
Index: linux-2.6.10/mvl_patches/pro-0263.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0263.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2005 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(263);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

