#! /usr/bin/env bash
# Patch: -pro_ppc32_ucc_geth_add_napi_multicast_and_mtu
# Date: Mon Jun 11 17:03:22 2007
# Source: Freescale Semiconductor
# MR: 21282
# Type: Enhancement
# Disposition: merged from Freescale.
# Signed-off-by: Randy Vinson <rvinson@mvista.com>
# Description:
# Add NAPI, Multicast and MTU support to the QUICC Engine UCC Ethernet driver
# (ucc_geth.c).
# 

PATCHNUM=1340
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: Freescale Semiconductor
MR: 21282
Type: Enhancement
Disposition: merged from Freescale.
Signed-off-by: Randy Vinson <rvinson@mvista.com>
Description:
Add NAPI, Multicast and MTU support to the QUICC Engine UCC Ethernet driver
(ucc_geth.c).

Index: linux-2.6.10/arch/ppc/qe_io/ucc/Kconfig
===================================================================
--- linux-2.6.10.orig/arch/ppc/qe_io/ucc/Kconfig
+++ linux-2.6.10/arch/ppc/qe_io/ucc/Kconfig
@@ -309,3 +309,7 @@ config UCC_GETH
 	depends on UCC1_GETH || UCC2_GETH || UCC3_GETH || UCC4_GETH || UCC5_GETH || UCC6_GETH || UCC7_GETH || UCC8_GETH
 	default y
 	bool
+
+config UGETH_NAPI
+	depends on UCC_GETH
+	bool "UCC GETH NAPI support"
Index: linux-2.6.10/arch/ppc/qe_io/ucc/ucc_geth.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/qe_io/ucc/ucc_geth.c
+++ linux-2.6.10/arch/ppc/qe_io/ucc/ucc_geth.c
@@ -35,6 +35,7 @@
 #include <linux/dma-mapping.h>
 #include <linux/fsl_devices.h>
 #include <linux/ethtool.h>
+#include <linux/mii.h>
 
 #include <asm/uaccess.h>
 #include <asm/irq.h>
@@ -162,7 +163,11 @@ static ucc_geth_info_t ugeth_primary_inf
 	.pausePeriod = 0xf000,
 	.extensionField = 0,
 	.weightfactor = {0, 0, 0, 0, 0, 0, 0, 0},
-	.interruptcoalescingmaxvalue = {1, 1, 1, 1, 1, 1, 1, 1},
+#ifdef CONFIG_UGETH_NAPI
+	.interruptcoalescingmaxvalue     = {8,8,8,8,8,8,8,8},
+#else
+	.interruptcoalescingmaxvalue     = {1,1,1,1,1,1,1,1},
+#endif
 	.l2qt = {0, 0, 0, 0, 0, 0, 0, 0},
 	.l3qt = {0, 0, 0, 0, 0, 0, 0, 0,
 		 0, 0, 0, 0, 0, 0, 0, 0,
@@ -210,6 +215,15 @@ static ucc_geth_info_t ugeth_primary_inf
 	.riscRx = QE_RISC_ALLOCATION_RISC1_AND_RISC2,
 };
 
+static int ucc_geth_tx(struct net_device *dev, u8 txQ);
+static int ucc_geth_rx(ucc_geth_private_t *ugeth, u8 rxQ, int rx_work_limit);
+static irqreturn_t ucc_geth_irq_handler (int irq, void *info, struct pt_regs *regs);
+static void ugeth_phy_change(void *data);
+static irqreturn_t phy_interrupt(int irq, void *dev_id, struct pt_regs *regs);
+static void ugeth_phy_timer(unsigned long data);
+static void ugeth_phy_startup_timer(unsigned long data);
+static int ucc_geth_startup (ucc_geth_private_t *ugeth);
+static void ucc_geth_stop (ucc_geth_private_t *ugeth);
 static ucc_geth_info_t ugeth_info[8];
 
 static void mem_disp(u8 * addr, int size)
@@ -526,6 +540,13 @@ static void put_enet_addr_container(enet
 	kfree(enet_addr_cont);
 }
 
+static int set_mac_addr(__be16 __iomem *reg, u8 *mac)
+{
+	out_be16(&reg[0], ((u16)mac[5] << 8) | mac[4]);
+	out_be16(&reg[1], ((u16)mac[3] << 8) | mac[2]);
+	out_be16(&reg[2], ((u16)mac[1] << 8) | mac[0]);
+}
+
 #ifdef UCC_GETH_UNUSED
 static int hw_add_addr_in_paddr(ucc_geth_private_t * ugeth,
 				enet_addr_t * p_enet_addr, u8 paddr_num)
@@ -543,16 +564,7 @@ static int hw_add_addr_in_paddr(ucc_geth
 
 	/* Ethernet frames are defined in Little Endian mode,    */
 	/* therefore to insert the address we reverse the bytes. */
-	out_be16(&p_82xx_addr_filt->paddr[paddr_num].h,
-		 (u16) (((u16) (((u16) ((*p_enet_addr)[5])) << 8)) |
-			(u16) (*p_enet_addr)[4]));
-	out_be16(&p_82xx_addr_filt->paddr[paddr_num].m,
-		 (u16) (((u16) (((u16) ((*p_enet_addr)[3])) << 8)) |
-			(u16) (*p_enet_addr)[2]));
-	out_be16(&p_82xx_addr_filt->paddr[paddr_num].l,
-		 (u16) (((u16) (((u16) ((*p_enet_addr)[1])) << 8)) |
-			(u16) (*p_enet_addr)[0]));
-
+	set_mac_addr(&p_82xx_addr_filt->paddr[paddr_num].h, p_enet_addr);
 	return 0;
 }
 #endif
@@ -578,9 +590,8 @@ static int hw_clear_addr_in_paddr(ucc_ge
 	return 0;
 }
 
-#ifdef UCC_GETH_UNUSED
 static void hw_add_addr_in_hash(ucc_geth_private_t * ugeth,
-				enet_addr_t * p_enet_addr)
+				u8 *p_enet_addr)
 {
 	ucc_geth_82xx_address_filtering_pram_t *p_82xx_addr_filt;
 	u32 cecr_subblock;
@@ -592,22 +603,15 @@ static void hw_add_addr_in_hash(ucc_geth
 	cecr_subblock =
 	    ucc_fast_get_qe_cr_subblock(ugeth->ug_info->uf_info.ucc_num);
 
-	/* Ethernet frames are defined in Little Endian mode, therefor to insert */
-	/* the address to the hash (Big Endian mode), we reverse the bytes.      */
-	out_be16(&p_82xx_addr_filt->taddr.h,
-		 (u16) (((u16) (((u16) ((*p_enet_addr)[5])) << 8)) |
-			(u16) (*p_enet_addr)[4]));
-	out_be16(&p_82xx_addr_filt->taddr.m,
-		 (u16) (((u16) (((u16) ((*p_enet_addr)[3])) << 8)) |
-			(u16) (*p_enet_addr)[2]));
-	out_be16(&p_82xx_addr_filt->taddr.l,
-		 (u16) (((u16) (((u16) ((*p_enet_addr)[1])) << 8)) |
-			(u16) (*p_enet_addr)[0]));
+	/*
+	 *  Ethernet frames are defined in Little Endian mode, therefor to
+	 *  the address to the hash (Big Endian mode), we reverse the bytes.
+	 */
+	set_mac_addr(&p_82xx_addr_filt->taddr.h, p_enet_addr);
 
 	qe_issue_cmd(QE_SET_GROUP_ADDRESS, cecr_subblock,
 		     (u8) QE_CR_PROTOCOL_ETHERNET, 0);
 }
-#endif
 #ifdef UCC_GETH_UNUSED
 static void magic_packet_detection_enable(ucc_geth_private_t * ugeth)
 {
@@ -1756,7 +1760,6 @@ static int adjust_enet_interface(ucc_get
  * function converts those variables into the appropriate
  * register values, and can bring down the device if needed.
  */
-#include <linux/mii.h>
 static void adjust_link(struct net_device *dev)
 {
 	ucc_geth_private_t *ugeth = netdev_priv(dev);
@@ -1770,19 +1773,15 @@ static void adjust_link(struct net_devic
 		/* Now we make sure that we can be in full duplex mode.
 		 * If not, we operate in half-duplex mode. */
 		if (mii_info->duplex != ugeth->oldduplex) {
+			tempval = in_be32(&ug_regs->maccfg2);
 			if (!(mii_info->duplex)) {
-				tempval = in_be32(&ug_regs->maccfg2);
 				tempval &= ~(MACCFG2_FDX);
-				out_be32(&ug_regs->maccfg2, tempval);
-
 				ugeth_info("%s: Half Duplex", dev->name);
 			} else {
-				tempval = in_be32(&ug_regs->maccfg2);
 				tempval |= MACCFG2_FDX;
-				out_be32(&ug_regs->maccfg2, tempval);
-
 				ugeth_info("%s: Full Duplex", dev->name);
 			}
+			out_be32(&ug_regs->maccfg2, tempval);
 
 			ugeth->oldduplex = mii_info->duplex;
 		}
@@ -2633,6 +2632,102 @@ static void ucc_geth_memclean(ucc_geth_p
 	while (!list_empty(&ugeth->ind_hash_q))
 		put_enet_addr_container(ENET_ADDR_CONT_ENTRY
 					(dequeue(&ugeth->ind_hash_q)));
+	/* Shutdown the PHY */
+	if(ugeth->mii_info)
+	{
+		if (ugeth->mii_info->phyinfo->close)
+			ugeth->mii_info->phyinfo->close(ugeth->mii_info);
+		kfree(ugeth->mii_info);
+	}
+}
+
+static void ucc_geth_set_multi(struct net_device *dev)
+{
+	ucc_geth_private_t *ugeth;
+	struct	dev_mc_list        *dmi;
+	ucc_fast_t        *uf_regs;
+        ucc_geth_82xx_address_filtering_pram_t *p_82xx_addr_filt;
+	int	i;
+
+
+	ugeth = netdev_priv(dev);
+
+	uf_regs=ugeth->uccf->uf_regs;
+
+	if (dev->flags&IFF_PROMISC) {
+
+		/* Log any net taps. */
+		printk("%s: Promiscuous mode enabled.\n", dev->name);
+		uf_regs->upsmr |= UPSMR_PRO;
+
+	} else {
+
+		uf_regs->upsmr &= ~UPSMR_PRO;
+
+		p_82xx_addr_filt = (ucc_geth_82xx_address_filtering_pram_t *) ugeth->p_rx_glbl_pram->addressfiltering;
+
+		if (dev->flags & IFF_ALLMULTI) {
+			/* Catch all multicast addresses, so set the
+			 * filter to all 1's.
+			 */
+			out_be32(&p_82xx_addr_filt->gaddr_h,0xffffffff);
+			out_be32(&p_82xx_addr_filt->gaddr_l,0xffffffff);
+		}
+		else {
+			/* Clear filter and add the addresses in the list.
+			*/
+			out_be32(&p_82xx_addr_filt->gaddr_h,0x0);
+			out_be32(&p_82xx_addr_filt->gaddr_l,0x0);
+
+			dmi = dev->mc_list;
+
+			for (i=0; i<dev->mc_count; i++,dmi = dmi->next) {
+
+				/* Only support group multicast for now.
+				*/
+				if (!(dmi->dmi_addr[0] & 1))
+					continue;
+
+				/* Ask CPM to run CRC and set bit in
+				 * filter mask.
+				 */
+    				hw_add_addr_in_hash(ugeth, dmi->dmi_addr);
+
+			}
+		}
+	}
+}
+
+static int ucc_geth_change_mtu(struct net_device *dev, int new_mtu)
+{
+	int tempsize;
+	int oldsize ;
+	ucc_geth_private_t *ugeth = netdev_priv(dev);
+	ucc_geth_info_t    *ug_info = ugeth->ug_info;
+	int frame_size = new_mtu + 18;
+	oldsize = ug_info->uf_info.max_rx_buf_length;
+
+	if ((frame_size < 64) || (frame_size > 9600)) {
+		printk(KERN_ERR "%s: Invalid MTU setting\n", dev->name);
+		return -EINVAL;
+	}
+
+	tempsize =  (frame_size & ~(512 - 1)) + 512;
+
+	/* Only stop and start the controller if it isn't already
+	 * stopped and we changed something */
+	if ((oldsize != tempsize) && netif_running(dev))
+		ucc_geth_stop(ugeth);
+
+	ug_info->uf_info.max_rx_buf_length = tempsize;
+	ug_info->maxFrameLength = tempsize;
+
+	dev->mtu = new_mtu;
+
+	if ((oldsize != tempsize) && netif_running(dev))
+		ucc_geth_startup(ugeth);
+
+	return 0;
 }
 
 static void ucc_geth_stop(ucc_geth_private_t * ugeth)
@@ -2698,6 +2793,7 @@ static int ucc_geth_startup(ucc_geth_pri
 	u8 function_code = 0;
 	u8 *bd, *endOfRing;
 	u8 numThreadsRxNumerical, numThreadsTxNumerical;
+	int err;
 
 	ugeth_vdbg("%s: IN", __FUNCTION__);
 
@@ -3680,6 +3776,75 @@ static int ucc_geth_startup(ucc_geth_pri
 	/* Free InitEnet command parameter */
 	qe_muram_free(init_enet_pram_offset);
 
+	err = adjust_enet_interface(ugeth);
+	if (err) {
+		ugeth_err("%s: Cannot configure net device, aborting.", ugeth->dev->name);
+		return err;
+	}
+
+	/*       Set MACSTNADDR1, MACSTNADDR2                */
+	/* For more details see the hardware spec.           */
+	init_mac_station_addr_regs( ugeth->dev->dev_addr[0],
+			ugeth->dev->dev_addr[1],
+			ugeth->dev->dev_addr[2],
+			ugeth->dev->dev_addr[3],
+			ugeth->dev->dev_addr[4],
+			ugeth->dev->dev_addr[5],
+			&ugeth->ug_regs->macstnaddr1,
+			&ugeth->ug_regs->macstnaddr2 );
+
+
+	err = init_phy(ugeth->dev);
+	if(err)
+	{
+		ugeth_err("%s: Cannot initialzie PHY, aborting.", ugeth->dev->name);
+		return err;
+	}
+
+	if (ugeth->ug_info->board_flags & FSL_UGETH_BRD_HAS_PHY_INTR) {
+		/* Clear any pending interrupts */
+		mii_clear_phy_interrupt(ugeth->mii_info);
+
+		/* Disable PHY Interrupts */
+		mii_configure_phy_interrupt(ugeth->mii_info,
+					    MII_INTERRUPT_DISABLED);
+
+		if (request_irq(ugeth->ug_info->phy_interrupt,
+					phy_interrupt,
+					SA_SHIRQ, "phy_interrupt",
+					ugeth->dev) < 0) {
+			ugeth_err("%s: Can't get IRQ %d (PHY)",
+				  ugeth->dev->name,
+				  ugeth->ug_info->phy_interrupt);
+			/* Fall back to polling */
+			ugeth->ug_info->board_flags &=
+				~FSL_UGETH_BRD_HAS_PHY_INTR;
+		}
+	}
+	err = request_irq(ugeth->ug_info->uf_info.irq, ucc_geth_irq_handler, 0, "UCC Geth", ugeth->dev);
+	if (err) {
+		ugeth_err("%s: Cannot get IRQ for net device, aborting.", ugeth->dev->name);
+		ucc_geth_stop(ugeth);
+		return err;
+	}
+
+
+	/* Set up the PHY change work queue */
+	INIT_WORK(&ugeth->tq, ugeth_phy_change, ugeth->dev);
+
+	init_timer(&ugeth->phy_info_timer);
+	ugeth->phy_info_timer.function = &ugeth_phy_startup_timer;
+	ugeth->phy_info_timer.data = (unsigned long) ugeth->mii_info;
+	mod_timer(&ugeth->phy_info_timer, jiffies + HZ);
+
+
+	err = ugeth_enable(ugeth, COMM_DIR_RX_AND_TX);
+	if (err) {
+		ugeth_err("%s: Cannot enable net device, aborting.", ugeth->dev->name);
+		ucc_geth_stop(ugeth);
+		return err;
+	}
+
 	return 0;
 }
 
@@ -3903,6 +4068,52 @@ static int ucc_geth_tx(struct net_device
 	return 0;
 }
 
+#ifdef CONFIG_UGETH_NAPI
+static int ucc_geth_poll(struct net_device *dev, int *budget)
+{
+    ucc_geth_private_t  *ugeth = netdev_priv(dev);
+    ucc_fast_private_t  *uccf;
+    ucc_geth_info_t     *ug_info;
+    int                 howmany;
+    int                 rx_work_limit = *budget;
+#if (DEFAULT_numQueuesRx > 1)
+#error "We support only 1 receive queue!"
+#endif /* (DEFAULT_numQueuesRx > 1) */
+    u8                  i;
+    register u32	uccm;
+    register u32        bit_mask = UCCE_RXBF_SINGLE_MASK;
+
+    uccf    = ugeth->uccf;
+    ug_info = ugeth->ug_info;
+
+    if (rx_work_limit > dev->quota)
+        rx_work_limit = dev->quota;
+
+    howmany=0;
+    for (i = 0; i < ug_info->numQueuesRx; i++)
+    	howmany += ucc_geth_rx(ugeth, i, rx_work_limit);
+
+    dev->quota -= howmany;
+    rx_work_limit -= howmany;
+    *budget -= howmany;
+
+    if (rx_work_limit >= 0)
+    {
+        netif_rx_complete(dev);
+    	uccm = in_be32(uccf->p_uccm);
+    	for (i = 0; i < ug_info->numQueuesRx; i++)
+	{
+    		uccm |= bit_mask;
+    		bit_mask <<=1;
+	}
+
+      	out_be32(uccf->p_uccm, uccm);
+    }
+
+    return (rx_work_limit < 0) ? 1 : 0;
+}
+#endif /* CONFIG_UGETH_NAPI */
+
 static irqreturn_t ucc_geth_irq_handler(int irq, void *info,
 					struct pt_regs *regs)
 {
@@ -3911,6 +4122,9 @@ static irqreturn_t ucc_geth_irq_handler(
 	ucc_fast_private_t *uccf;
 	ucc_geth_info_t *ug_info;
 	register u32 ucce = 0;
+#ifdef CONFIG_UGETH_NAPI
+	register u32        uccm = 0;
+#endif
 	register u32 bit_mask = UCCE_RXBF_SINGLE_MASK;
 	register u32 tx_mask = UCCE_TXBF_SINGLE_MASK;
 	register u8 i;
@@ -3930,16 +4144,33 @@ static irqreturn_t ucc_geth_irq_handler(
 		/* Side effect here is to mask ucce variable for future processing below. */
 		out_be32(uccf->p_ucce, ucce);	/* Clear with ones, but only bits in UCCM */
 
-		/* We ignore Tx interrupts because Tx confirmation is done inside Tx routine */
+#ifdef CONFIG_UGETH_NAPI
+		if(ucce & bit_mask) {
+			if (netif_rx_schedule_prep(dev)) {
+				uccm = in_be32(uccf->p_uccm);
+				for (i = 0; i < ug_info->numQueuesRx; i++) {
+					uccm &= ~bit_mask;
+					ucce &= ~bit_mask;
+					bit_mask <<= 1;
+				}
+				out_be32(uccf->p_uccm, uccm); /* Clear with ones, but only bits in UCCM */
+				__netif_rx_schedule(dev);
+			} else {
+#ifdef VERBOSE_UGETH_ERRORS
+				ugeth_dbg( "%s: receive called twice (%x)[%x]\n",
+						dev->name, in_be32(uccf->p_ucce),in_be32(uccf->p_uccm));
+#endif
+			}
 
+		}
+#else
 		for (i = 0; i < ug_info->numQueuesRx; i++) {
 			if (ucce & bit_mask)
-				ucc_geth_rx(ugeth, i,
-					    (int)ugeth->ug_info->
-					    bdRingLenRx[i]);
+				ucc_geth_rx(ugeth, i, (int)ugeth->ug_info->bdRingLenRx[i]);
 			ucce &= ~bit_mask;
 			bit_mask <<= 1;
 		}
+#endif
 
 		for (i = 0; i < ug_info->numQueuesTx; i++) {
 			if (ucce & tx_mask)
@@ -3956,7 +4187,7 @@ static irqreturn_t ucc_geth_irq_handler(
 		}
 		if (ucce & UCCE_OTHER) {
 			ugeth_vdbg("Got frame with error (ucce - 0x%08x)!!!!",
-				   ucce);
+					ucce);
 			ugeth->stats.rx_errors++;
 			ucce &= ~ucce;
 		}
@@ -4008,6 +4239,12 @@ static void ugeth_phy_change(void *data)
 	 * isn't still coming up */
 	if ((0 == result) || (ugeth->mii_info->link == 0))
 		adjust_link(dev);
+	else if (result == -EAGAIN)
+	{
+		/* Schedule the phy change */
+		schedule_work(&ugeth->tq);
+		return;
+	}
 
 	/* Reenable interrupts, if needed */
 	if (ugeth->ug_info->board_flags & FSL_UGETH_BRD_HAS_PHY_INTR)
@@ -4102,73 +4339,6 @@ static int ucc_geth_open(struct net_devi
 		return err;
 	}
 
-	err = adjust_enet_interface(ugeth);
-	if (err) {
-		ugeth_err("%s: Cannot configure net device, aborting.",
-			  dev->name);
-		return err;
-	}
-
-	/*       Set MACSTNADDR1, MACSTNADDR2                */
-	/* For more details see the hardware spec.           */
-	init_mac_station_addr_regs(dev->dev_addr[0],
-				   dev->dev_addr[1],
-				   dev->dev_addr[2],
-				   dev->dev_addr[3],
-				   dev->dev_addr[4],
-				   dev->dev_addr[5],
-				   &ugeth->ug_regs->macstnaddr1,
-				   &ugeth->ug_regs->macstnaddr2);
-
-	err = init_phy(dev);
-	if (err) {
-		ugeth_err("%s: Cannot initialzie PHY, aborting.", dev->name);
-		return err;
-	}
-
-	if (ugeth->ug_info->board_flags & FSL_UGETH_BRD_HAS_PHY_INTR) {
-		/* Clear any pending interrupts */
-		mii_clear_phy_interrupt(ugeth->mii_info);
-
-		/* Disable PHY Interrupts */
-		mii_configure_phy_interrupt(ugeth->mii_info,
-					    MII_INTERRUPT_DISABLED);
-
-		if (request_irq(ugeth->ug_info->phy_interrupt,
-					phy_interrupt,
-					SA_SHIRQ, "phy_interrupt", dev) < 0) {
-			ugeth_err("%s: Can't get IRQ %d (PHY)", dev->name,
-					ugeth->ug_info->phy_interrupt);
-			/* Fall back to polling */
-			ugeth->ug_info->board_flags &=
-				~FSL_UGETH_BRD_HAS_PHY_INTR;
-		}
-	}
-	err =
-	    request_irq(ugeth->ug_info->uf_info.irq, ucc_geth_irq_handler, 0,
-			"UCC Geth", dev);
-	if (err) {
-		ugeth_err("%s: Cannot get IRQ for net device, aborting.",
-			  dev->name);
-		ucc_geth_stop(ugeth);
-		return err;
-	}
-
-	/* Set up the PHY change work queue */
-	INIT_WORK(&ugeth->tq, ugeth_phy_change, dev);
-
-	init_timer(&ugeth->phy_info_timer);
-	ugeth->phy_info_timer.function = &ugeth_phy_startup_timer;
-	ugeth->phy_info_timer.data = (unsigned long)ugeth->mii_info;
-	mod_timer(&ugeth->phy_info_timer, jiffies + HZ);
-
-	err = ugeth_enable(ugeth, COMM_DIR_RX_AND_TX);
-	if (err) {
-		ugeth_err("%s: Cannot enable net device, aborting.", dev->name);
-		ucc_geth_stop(ugeth);
-		return err;
-	}
-
 	netif_start_queue(dev);
 
 	return err;
@@ -4185,12 +4355,6 @@ static int ucc_geth_close(struct net_dev
 
 	ucc_geth_stop(ugeth);
 
-	/* Shutdown the PHY */
-	if (ugeth->mii_info->phyinfo->close)
-		ugeth->mii_info->phyinfo->close(ugeth->mii_info);
-
-	kfree(ugeth->mii_info);
-
 	return 0;
 }
 
@@ -4267,9 +4431,15 @@ static int ucc_geth_probe(struct device 
 	dev->hard_start_xmit = ucc_geth_start_xmit;
 	dev->tx_timeout = ucc_geth_timeout;
 	dev->watchdog_timeo = TX_TIMEOUT;
+#ifdef CONFIG_UGETH_NAPI
+	dev->poll = ucc_geth_poll;
+	dev->weight = UCC_GETH_DEV_WEIGHT;
+#endif /* CONFIG_UGETH_NAPI */
 	dev->stop = ucc_geth_close;
 	dev->get_stats = ucc_geth_get_stats;
+	dev->change_mtu = ucc_geth_change_mtu;
 	dev->mtu = 1500;
+	dev->set_multicast_list = ucc_geth_set_multi;
 	dev->ethtool_ops = &ucc_geth_ethtool_ops;
 
 	err = register_netdev(dev);
@@ -4284,6 +4454,12 @@ static int ucc_geth_probe(struct device 
 	ugeth->dev = dev;
 	memcpy(dev->dev_addr, ugeth_pdata->mac_addr, 6);
 
+#ifdef CONFIG_UGETH_NAPI
+	ugeth_info("%s: Running with NAPI enabled", dev->name);
+#else
+	ugeth_info("%s: Running with NAPI disabled", dev->name);
+#endif /* CONFIG_UGETH_NAPI */
+
 	return 0;
 }
 
Index: linux-2.6.10/arch/ppc/configs/mpc832xe_mds_defconfig
===================================================================
--- linux-2.6.10.orig/arch/ppc/configs/mpc832xe_mds_defconfig
+++ linux-2.6.10/arch/ppc/configs/mpc832xe_mds_defconfig
@@ -1,7 +1,7 @@
 #
 # Automatically generated make config: don't edit
 # Linux kernel version: 2.6.10_mvl401
-# Wed Mar  7 11:32:32 2007
+# Wed Mar  7 13:56:40 2007
 #
 CONFIG_MMU=y
 CONFIG_GENERIC_HARDIRQS=y
@@ -949,6 +949,7 @@ CONFIG_UCC4_GETH=y
 CONFIG_UCC=y
 CONFIG_UCC_FAST=y
 CONFIG_UCC_GETH=y
+# CONFIG_UGETH_NAPI is not set
 
 #
 # Library routines
Index: linux-2.6.10/mvl_patches/pro-1340.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1340.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1340);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

