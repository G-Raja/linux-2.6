#! /usr/bin/env bash
# Patch: -common_yaffs1_deprecate
# Date: Thu Jul  6 17:07:24 2006
# Source: MontaVista Software, Inc.
# MR: 14931
# Type: Integration
# Disposition: MontaVista
# Signed-off-by: Todd Poynor <tpoynor@mvista.com>
# Description:
#     Deprecate the YAFFS1 codebase, which is deprecated upstream, does not
#     support large page size chips, and lacks community bugfixes.  The
#     YAFFS2 codebase can be used instead.
# 

PATCHNUM=726
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 14931
Type: Integration
Disposition: MontaVista
Signed-off-by: Todd Poynor <tpoynor@mvista.com>
Description:
    Deprecate the YAFFS1 codebase, which is deprecated upstream, does not
    support large page size chips, and lacks community bugfixes.  The
    YAFFS2 codebase can be used instead.

Index: linux-2.6.10/fs/yaffs/Kconfig
===================================================================
--- linux-2.6.10.orig/fs/yaffs/Kconfig
+++ linux-2.6.10/fs/yaffs/Kconfig
@@ -1,31 +1,28 @@
 #
 # YAFFS file system configurations
 #
-config YAFFS_FS
-	tristate "Yet Another Flash Filing System(YAFFS) file system support"
+config YAFFS1_FS
+	tristate "YAFFS version 1 legacy implementation"
 	help
-	  YAFFS, for Yet Another Flash Filing System, is a filing system
-	  optimised for NAND Flash chips.
-
-	  To compile the YAFFS file system support as a module, choose M here:
-	  the module will be called yaffs.
+	  Use obsolete YAFFS1 code.  Obsoleted by YAFFS2, which provides
+	  YAFFS1 compatibility.
 
 	  If unsure, say N.
 
 	  Further information on YAFFS is available at
 	  <http://www.aleph1.co.uk/yaffs/>.
 
-config YAFFS_MTD_ENABLED
+config YAFFS1_MTD_ENABLED
 	bool "NAND mtd support"
-	depends on YAFFS_FS
+	depends on YAFFS1_FS
 	help
 	  This adds the yaffs file system support for working with a NAND mtd.
 
 	  If unsure, say Y.
 
-config YAFFS_RAM_ENABLED
+config YAFFS1_RAM_ENABLED
 	bool "yaffsram file system support"
-	depends on YAFFS_FS
+	depends on YAFFS1_FS
 	help
 	  This adds the yaffsram file system support. Nice for testing on x86,
 	  but uses 2MB of RAM.  Don't enable for NAND-based targets.
@@ -33,11 +30,11 @@ config YAFFS_RAM_ENABLED
 	  If unsure, say N.
 
 comment "WARNING: mtd and/or yaffsram support should be selected"
-	depends on YAFFS_FS && !YAFFS_MTD_ENABLED && !YAFFS_RAM_ENABLED
+	depends on YAFFS1_FS && !YAFFS1_MTD_ENABLED && !YAFFS1_RAM_ENABLED
 
-config YAFFS_USE_OLD_MTD
+config YAFFS1_USE_OLD_MTD
 	bool "Old mtd support"
-	depends on YAFFS_FS && 0
+	depends on YAFFS1_FS && 0
 	help
 	  Enable this to use the old MTD stuff that did not have yaffs support.
 	  You can use this to get around compilation problems, but the best
@@ -45,9 +42,9 @@ config YAFFS_USE_OLD_MTD
 
 	  If unsure, say N.
 
-config YAFFS_USE_NANDECC
+config YAFFS1_USE_NANDECC
 	bool "Use ECC functions of the generic MTD-NAND driver"
-	depends on YAFFS_FS
+	depends on YAFFS1_FS
 	default y
 	help
 	  This enables the ECC functions of the generic MTD-NAND driver.
@@ -57,9 +54,9 @@ config YAFFS_USE_NANDECC
 
 	  If unsure, say Y.
 
-config YAFFS_ECC_WRONG_ORDER
+config YAFFS1_ECC_WRONG_ORDER
 	bool "Use the same ecc byte order as Steven Hill's nand_ecc.c"
-	depends on YAFFS_FS
+	depends on YAFFS1_FS
 	help
 	  This makes yaffs_ecc.c use the same ecc byte order as
 	  Steven Hill's nand_ecc.c. If not set, then you get the
@@ -67,10 +64,10 @@ config YAFFS_ECC_WRONG_ORDER
 
 	  If unsure, say N.
 
-config YAFFS_USE_GENERIC_RW
+config YAFFS1_USE_GENERIC_RW
 	bool "Use Linux file caching layer"
 	default y
-	depends on YAFFS_FS
+	depends on YAFFS1_FS
 	help
 	  Use generic_read/generic_write for reading/writing files. This
 	  enables the use of the Linux file caching layer.
@@ -80,9 +77,9 @@ config YAFFS_USE_GENERIC_RW
 
 	  If unsure, say Y.
 
-config YAFFS_USE_HEADER_FILE_SIZE
+config YAFFS1_USE_HEADER_FILE_SIZE
 	bool "Use object header size"
-	depends on YAFFS_FS
+	depends on YAFFS1_FS
 	help
 	  When the flash is scanned, two file sizes are constructed:
 	  * The size taken from the object header for the file.
@@ -92,9 +89,9 @@ config YAFFS_USE_HEADER_FILE_SIZE
 
 	  If unsure, say N.
 
-config YAFFS_DISABLE_CHUNK_ERASED_CHECK
+config YAFFS1_DISABLE_CHUNK_ERASED_CHECK
 	bool "Turn off debug chunk erase check"
-	depends on YAFFS_FS
+	depends on YAFFS1_FS
 	default y
 	help
 	  Enabling this turns off the test that chunks are erased in flash
@@ -104,9 +101,9 @@ config YAFFS_DISABLE_CHUNK_ERASED_CHECK
 
 	  If unsure, say Y.
 
-#config YAFFS_DISABLE_WRITE_VERIFY
+#config YAFFS1_DISABLE_WRITE_VERIFY
 #	bool "Disable write verify (DANGEROUS)"
-#	depends on YAFFS_FS && EXPERIMENTAL
+#	depends on YAFFS1_FS && EXPERIMENTAL
 #	help
 #	  I am severely reluctant to provide this config. Disabling the
 #	  verification is not a good thing to do since NAND writes can
@@ -117,9 +114,9 @@ config YAFFS_DISABLE_CHUNK_ERASED_CHECK
 #	  If unsure, say N.
 #
 
-config YAFFS_SHORT_NAMES_IN_RAM
+config YAFFS1_SHORT_NAMES_IN_RAM
 	bool "Cache short names in RAM"
-	depends on YAFFS_FS
+	depends on YAFFS1_FS
 	default y
 	help
 	  If this config is set, then short names are stored with the
Index: linux-2.6.10/fs/yaffs/Makefile
===================================================================
--- linux-2.6.10.orig/fs/yaffs/Makefile
+++ linux-2.6.10/fs/yaffs/Makefile
@@ -1,11 +1,11 @@
 
 #
-# Makefile for the linux YAFFS filesystem routines.
+# Makefile for the linux YAFFS1 filesystem routines.
 #
 
-obj-$(CONFIG_YAFFS_FS) += yaffs.o
+obj-$(CONFIG_YAFFS1_FS) += yaffs.o
 
 yaffs-y := yaffs_ecc.o yaffs_fs.o yaffs_guts.o
 
-yaffs-$(CONFIG_YAFFS_MTD_ENABLED) += yaffs_mtdif.o
-yaffs-$(CONFIG_YAFFS_RAM_ENABLED) += yaffs_ramem.o
+yaffs-$(CONFIG_YAFFS1_MTD_ENABLED) += yaffs_mtdif.o
+yaffs-$(CONFIG_YAFFS1_RAM_ENABLED) += yaffs_ramem.o
Index: linux-2.6.10/fs/yaffs/yaffs_ecc.c
===================================================================
--- linux-2.6.10.orig/fs/yaffs/yaffs_ecc.c
+++ linux-2.6.10/fs/yaffs/yaffs_ecc.c
@@ -113,7 +113,7 @@ void yaffs_ECCCalculate(const unsigned c
 	if(line_parity_prime & 0x01) t |= 0x01;
 	ecc[0] = ~t;
 
-#ifdef CONFIG_YAFFS_ECC_WRONG_ORDER
+#ifdef CONFIG_YAFFS1_ECC_WRONG_ORDER
 	// Swap the bytes into the wrong order
 	t = ecc[0];
 	ecc[0] = ecc[1];
@@ -146,7 +146,7 @@ int yaffs_ECCCorrect(unsigned char *data
 		unsigned byte;
 		unsigned bit;
 
-#ifdef CONFIG_YAFFS_ECC_WRONG_ORDER
+#ifdef CONFIG_YAFFS1_ECC_WRONG_ORDER
 		// swap the bytes to correct for the wrong order
 		unsigned char t;
 		
Index: linux-2.6.10/fs/yaffs/yaffs_fs.c
===================================================================
--- linux-2.6.10.orig/fs/yaffs/yaffs_fs.c
+++ linux-2.6.10/fs/yaffs/yaffs_fs.c
@@ -76,16 +76,16 @@ extern const char *yaffs_guts_c_version;
 
 unsigned yaffs_traceMask = YAFFS_TRACE_ALWAYS | YAFFS_TRACE_BAD_BLOCKS;
 
-#ifdef CONFIG_YAFFS_RAM_ENABLED
+#ifdef CONFIG_YAFFS1_RAM_ENABLED
 #include "yaffs_nandemul.h" 
 // 2 MB of RAM for emulation
 #define YAFFS_RAM_EMULATION_SIZE  0x200000
-#endif //CONFIG_YAFFS_RAM_ENABLED
+#endif //CONFIG_YAFFS1_RAM_ENABLED
 
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
 #include <linux/mtd/mtd.h>
 #include "yaffs_mtdif.h"
-#endif //CONFIG_YAFFS_MTD_ENABLED
+#endif //CONFIG_YAFFS1_MTD_ENABLED
 
 //#define T(x) printk x
 
@@ -109,7 +109,7 @@ static void yaffs_put_super(struct super
  * http://www.aleph1.co.uk/pipermail/yaffs/2004q4/000747.html
  *
  * from: Charles Manning  Charles.Manning@trimble.co.nz
- * subject: [Yaffs] CONFIG_YAFFS_USE_GENERIC_RW
+ * subject: [Yaffs] CONFIG_YAFFS1_USE_GENERIC_RW
  * date: Thu, 14 Oct 2004 12:12:36 +1300
  *
  * The direct read/write stuff was iimplemented first, and I followed it by
@@ -125,11 +125,11 @@ static void yaffs_put_super(struct super
  * -- Charles
  */
 
-#ifndef CONFIG_YAFFS_USE_GENERIC_RW
-#define CONFIG_YAFFS_USE_GENERIC_RW
+#ifndef CONFIG_YAFFS1_USE_GENERIC_RW
+#define CONFIG_YAFFS1_USE_GENERIC_RW
 #endif
 
-#if !defined(CONFIG_YAFFS_USE_GENERIC_RW)
+#if !defined(CONFIG_YAFFS1_USE_GENERIC_RW)
 static ssize_t yaffs_file_read(struct file *f, char *buf, size_t n, loff_t *pos);
 #endif
 static ssize_t yaffs_file_write(struct file *f, const char *buf, size_t n, loff_t *pos);
@@ -169,7 +169,7 @@ static int yaffs_statfs(struct super_blo
 #endif
 static void yaffs_read_inode (struct inode *inode);
 
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
 //#if defined(CONFIG_KERNEL_2_5)
 #if (LINUX_VERSION_CODE > KERNEL_VERSION(2,5,0))
 static struct super_block *yaffs_read_super(struct file_system_type * fs, int flags, const char *dev_name, void *data);
@@ -206,7 +206,7 @@ static struct address_space_operations y
 
 
 static struct file_operations yaffs_file_operations = {
-#ifdef CONFIG_YAFFS_USE_GENERIC_RW
+#ifdef CONFIG_YAFFS1_USE_GENERIC_RW
 	read:		generic_file_read,
 	write:		generic_file_write,
 #else
@@ -724,7 +724,7 @@ struct inode *yaffs_get_inode(struct sup
 	return inode;
 }
 
-#if !defined(CONFIG_YAFFS_USE_GENERIC_RW)
+#if !defined(CONFIG_YAFFS1_USE_GENERIC_RW)
 static ssize_t yaffs_file_read(struct file *f, char *buf, size_t n, loff_t *pos)
 {
 	yaffs_Object *obj;
@@ -1294,7 +1294,7 @@ static void yaffs_put_super(struct super
 }
 
 
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
 
 static void  yaffs_MTDPutSuper(struct super_block *sb)
 {
@@ -1336,7 +1336,7 @@ static struct super_block *yaffs_interna
 	
 
 
-#ifdef CONFIG_YAFFS_USE_CHUNK_SIZE
+#ifdef CONFIG_YAFFS1_USE_CHUNK_SIZE
 	sb->s_blocksize = YAFFS_BYTES_PER_CHUNK;
 	sb->s_blocksize_bits = YAFFS_CHUNK_SIZE_SHIFT;
 #else
@@ -1345,7 +1345,7 @@ static struct super_block *yaffs_interna
 #endif
 	T(YAFFS_TRACE_OS,("yaffs_read_super: %s block size %d\n", useRam ? "RAM" : "MTD",(int)(sb->s_blocksize)));
 
-#ifdef CONFIG_YAFFS_DISABLE_WRITE_VERIFY
+#ifdef CONFIG_YAFFS1_DISABLE_WRITE_VERIFY
 	T(YAFFS_TRACE_OS,("yaffs: Write verification disabled. All guarantees null and void\n"));
 #endif
 
@@ -1354,7 +1354,7 @@ static struct super_block *yaffs_interna
 	if(useRam)
 	{
 
-#ifdef CONFIG_YAFFS_RAM_ENABLED
+#ifdef CONFIG_YAFFS1_RAM_ENABLED
 		// Set the yaffs_Device up for ram emulation
 
 #if (LINUX_VERSION_CODE > KERNEL_VERSION(2,5,0))
@@ -1396,7 +1396,7 @@ static struct super_block *yaffs_interna
 	}
 	else
 	{	
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
 		struct mtd_info *mtd;
 		
 		T(YAFFS_TRACE_ALWAYS,( "yaffs: Attempting MTD mount on %u.%u, \"%s\"\n",
@@ -1434,7 +1434,7 @@ static struct super_block *yaffs_interna
 		if(!mtd->erase ||
 		   !mtd->read  ||
 		   !mtd->write ||
-#ifndef CONFIG_YAFFS_USE_OLD_MTD
+#ifndef CONFIG_YAFFS1_USE_OLD_MTD
 		   !mtd->write_ecc ||
 		   !mtd->read_ecc ||
 #endif
@@ -1492,7 +1492,7 @@ static struct super_block *yaffs_interna
 				
 		dev->putSuperFunc = yaffs_MTDPutSuper;
 		
-#ifdef CONFIG_YAFFS_USE_NANDECC
+#ifdef CONFIG_YAFFS1_USE_NANDECC
 		dev->useNANDECC = 1;
 #endif
 
@@ -1542,14 +1542,14 @@ static struct super_block *yaffs_interna
 	return sb;
 }
 
-#ifdef CONFIG_YAFFS_RAM_ENABLED
+#ifdef CONFIG_YAFFS1_RAM_ENABLED
 static int yaffs_internal_read_super_ram(struct super_block * sb, void * data, int silent)
 {
 	 return yaffs_internal_read_super(1,sb,data,silent) ? 0 : -1;
 }
 #endif
 
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
 static int yaffs_internal_read_super_mtd(struct super_block * sb, void * data, int silent)
 {
 	 return yaffs_internal_read_super(0,sb,data,silent) ? 0 : -1;
@@ -1557,7 +1557,7 @@ static int yaffs_internal_read_super_mtd
 #endif
 
 
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
 //#if defined(CONFIG_KERNEL_2_5)
 #if (LINUX_VERSION_CODE > KERNEL_VERSION(2,5,0))
 static struct super_block *yaffs_read_super(struct file_system_type * fs, int flags, const char *dev_name, void *data)
@@ -1586,7 +1586,7 @@ static DECLARE_FSTYPE(yaffs_fs_type, "ya
 #endif
 #endif
 
-#ifdef CONFIG_YAFFS_RAM_ENABLED
+#ifdef CONFIG_YAFFS1_RAM_ENABLED
 
 //#if defined(CONFIG_KERNEL_2_5)
 #if (LINUX_VERSION_CODE > KERNEL_VERSION(2,5,0))
@@ -1616,7 +1616,7 @@ static struct super_block *yaffs_ram_rea
 
 static DECLARE_FSTYPE(yaffs_ram_fs_type, "yaffsram", yaffs_ram_read_super, FS_SINGLE);
 #endif
-#endif // CONFIG_YAFFS_RAM_ENABLED
+#endif // CONFIG_YAFFS1_RAM_ENABLED
 
 
 static struct proc_dir_entry *my_proc_entry;
@@ -1711,7 +1711,7 @@ static int __init init_yaffs_fs(void)
 	yaffs_dev = yaffsram_dev = NULL;
 	
 	T(YAFFS_TRACE_OS,( "yaffs " __DATE__ " " __TIME__ " Initialisation\n"));
-#ifdef CONFIG_YAFFS_USE_GENERIC_RW
+#ifdef CONFIG_YAFFS1_USE_GENERIC_RW
 	T(YAFFS_TRACE_OS,( "yaffs is using generic read/write (caching)\n"));
 #else
 	T(YAFFS_TRACE_OS,( "yaffs is using direct read/write (uncached)\n"));
@@ -1729,7 +1729,7 @@ static int __init init_yaffs_fs(void)
        return -ENOMEM;
     }
 
-#ifdef CONFIG_YAFFS_RAM_ENABLED
+#ifdef CONFIG_YAFFS1_RAM_ENABLED
 #if 0
     my_proc_ram_write_entry = create_proc_entry("yaffs_ram",
                                            S_IRUGO | S_IFREG,
@@ -1750,17 +1750,17 @@ static int __init init_yaffs_fs(void)
     {
     	return error;
     }
-#endif //CONFIG_YAFFS_RAM_ENABLED
+#endif //CONFIG_YAFFS1_RAM_ENABLED
 
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
 	error = register_filesystem(&yaffs_fs_type);
 	if(error)
 	{
-#ifdef CONFIG_YAFFS_RAM_ENABLED
+#ifdef CONFIG_YAFFS1_RAM_ENABLED
 		unregister_filesystem(&yaffs_ram_fs_type);
-#endif //CONFIG_YAFFS_RAM_ENABLED
+#endif //CONFIG_YAFFS1_RAM_ENABLED
 	}
-#endif // CONFIG_YAFFS_MTD_ENABLED
+#endif // CONFIG_YAFFS1_MTD_ENABLED
 
 	return error;
 }
@@ -1771,10 +1771,10 @@ static void __exit exit_yaffs_fs(void)
 
     remove_proc_entry("yaffs",&proc_root);
     
-#ifdef CONFIG_YAFFS_RAM_ENABLED
+#ifdef CONFIG_YAFFS1_RAM_ENABLED
 	unregister_filesystem(&yaffs_ram_fs_type);
 #endif
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
 	unregister_filesystem(&yaffs_fs_type);
 #endif
 
Index: linux-2.6.10/fs/yaffs/yaffs_guts.h
===================================================================
--- linux-2.6.10.orig/fs/yaffs/yaffs_guts.h
+++ linux-2.6.10/fs/yaffs/yaffs_guts.h
@@ -159,7 +159,7 @@ typedef enum {
 
 typedef struct
 {
-#ifndef CONFIG_YAFFS_NO_YAFFS2
+#ifndef CONFIG_YAFFS1_NO_YAFFS2
 	__u32 sequenceNumber;	// block sequence number for yaffs2
 #endif
 	int   softDeletions:12; // number of soft deleted pages
@@ -196,7 +196,7 @@ typedef struct
 	// Thes following apply to directories, files, symlinks - not hard links
 	__u32 st_mode;  // protection
 
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 	__u32 notForWinCE[5];
 #else
 	__u32 st_uid;   // user ID of owner
@@ -217,7 +217,7 @@ typedef struct
 	
 	__u32 st_rdev;  // device stuff for block and char devices (maj/min)
 	
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 	__u32 win_ctime[2];
 	__u32 win_atime[2];
 	__u32 win_mtime[2];
@@ -234,7 +234,7 @@ typedef struct
 
 union yaffs_Tnode_union
 {
-#ifdef CONFIG_YAFFS_TNODE_LIST_DEBUG
+#ifdef CONFIG_YAFFS1_TNODE_LIST_DEBUG
 	union yaffs_Tnode_union *internal[YAFFS_NTNODES_INTERNAL+1];
 #else
 	union yaffs_Tnode_union *internal[YAFFS_NTNODES_INTERNAL];
@@ -335,7 +335,7 @@ struct  yaffs_ObjectStruct
 	
 	__u32 st_mode;  	// protection
 
-#ifdef CONFIG_YAFFS_SHORT_NAMES_IN_RAM
+#ifdef CONFIG_YAFFS1_SHORT_NAMES_IN_RAM
 	char shortName[YAFFS_SHORT_NAME_LENGTH+1];
 #endif
 
@@ -343,7 +343,7 @@ struct  yaffs_ObjectStruct
 	__u32 inUse;
 #endif
 
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 	__u32 win_ctime[2];
 	__u32 win_mtime[2];
 	__u32 win_atime[2];
@@ -578,8 +578,8 @@ yaffs_Object *yaffs_MknodSpecial(yaffs_O
 yaffs_Object *yaffs_Root(yaffs_Device *dev);
 yaffs_Object *yaffs_LostNFound(yaffs_Device *dev);
 
-#ifdef CONFIG_YAFFS_WINCE
-// CONFIG_YAFFS_WINCE special stuff
+#ifdef CONFIG_YAFFS1_WINCE
+// CONFIG_YAFFS1_WINCE special stuff
 void  yfsd_WinFileTimeNow(__u32 target[2]);
 #endif
 
Index: linux-2.6.10/fs/yaffs/yaffs_mtdif.c
===================================================================
--- linux-2.6.10.orig/fs/yaffs/yaffs_mtdif.c
+++ linux-2.6.10/fs/yaffs/yaffs_mtdif.c
@@ -17,7 +17,7 @@ const char *yaffs_mtdif_c_version = "$Id
 
 #include <linux/config.h>
 
-#ifdef CONFIG_YAFFS_MTD_ENABLED
+#ifdef CONFIG_YAFFS1_MTD_ENABLED
  
 #include "yportenv.h"
 
@@ -27,7 +27,7 @@ const char *yaffs_mtdif_c_version = "$Id
 #include "linux/types.h"
 #include "linux/time.h"
 
-#ifndef	CONFIG_YAFFS_USE_OLD_MTD
+#ifndef	CONFIG_YAFFS1_USE_OLD_MTD
 #include "linux/mtd/nand.h"
 #endif
 
@@ -55,7 +55,7 @@ int nandmtd_WriteChunkToNAND(yaffs_Devic
 	
 	__u8 *spareAsBytes = (__u8 *)spare;
 
-#ifndef	CONFIG_YAFFS_USE_OLD_MTD
+#ifndef	CONFIG_YAFFS1_USE_OLD_MTD
 	if(data && spare)
 	{
 		if(dev->useNANDECC)
@@ -70,7 +70,7 @@ int nandmtd_WriteChunkToNAND(yaffs_Devic
 		retval = mtd->write(mtd,addr,dev->nBytesPerChunk,&dummy,data);
 	if(spare)
 		retval = mtd->write_oob(mtd,addr,YAFFS_BYTES_PER_SPARE,&dummy,spareAsBytes);
-#ifndef	CONFIG_YAFFS_USE_OLD_MTD
+#ifndef	CONFIG_YAFFS1_USE_OLD_MTD
 	}
 #endif
 
@@ -90,7 +90,7 @@ int nandmtd_ReadChunkFromNAND(yaffs_Devi
 	
 	__u8 *spareAsBytes = (__u8 *)spare;
 	
-#ifndef	CONFIG_YAFFS_USE_OLD_MTD
+#ifndef	CONFIG_YAFFS1_USE_OLD_MTD
 	if(data && spare)
 	{
 		if(dev->useNANDECC)
@@ -110,7 +110,7 @@ int nandmtd_ReadChunkFromNAND(yaffs_Devi
 		retval = mtd->read(mtd,addr,dev->nBytesPerChunk,&dummy,data);
 	if(spare)
 		retval = mtd->read_oob(mtd,addr,YAFFS_BYTES_PER_SPARE,&dummy,spareAsBytes);
-#ifndef	CONFIG_YAFFS_USE_OLD_MTD
+#ifndef	CONFIG_YAFFS1_USE_OLD_MTD
 	}
 #endif
 
@@ -165,5 +165,5 @@ int nandmtd_InitialiseNAND(yaffs_Device 
 	return YAFFS_OK;
 }
 
-#endif // CONFIG_YAFFS_MTD_ENABLED
+#endif // CONFIG_YAFFS1_MTD_ENABLED
 
Index: linux-2.6.10/fs/yaffs/yaffs_ramem.c
===================================================================
--- linux-2.6.10.orig/fs/yaffs/yaffs_ramem.c
+++ linux-2.6.10/fs/yaffs/yaffs_ramem.c
@@ -20,10 +20,10 @@ const char *yaffs_ramem_c_version = "$Id
 #include <linux/config.h>
 
 #ifndef __KERNEL__
-#define CONFIG_YAFFS_RAM_ENABLED
+#define CONFIG_YAFFS1_RAM_ENABLED
 #endif
 
-#ifdef CONFIG_YAFFS_RAM_ENABLED
+#ifdef CONFIG_YAFFS1_RAM_ENABLED
 
 #include "yportenv.h"
 
Index: linux-2.6.10/fs/yaffs/yportenv.h
===================================================================
--- linux-2.6.10.orig/fs/yaffs/yportenv.h
+++ linux-2.6.10/fs/yaffs/yportenv.h
@@ -23,7 +23,7 @@
 #define __YPORTENV_H__
 
 
-#if defined CONFIG_YAFFS_WINCE
+#if defined CONFIG_YAFFS1_WINCE
 
 #include "ywinceenv.h"
 
@@ -65,12 +65,12 @@
 #define TOUT(p) printk p
 
 
-#elif defined CONFIG_YAFFS_DIRECT
+#elif defined CONFIG_YAFFS1_DIRECT
 
 // Direct interface
 #include "ydirectenv.h"
 
-#elif defined CONFIG_YAFFS_UTIL
+#elif defined CONFIG_YAFFS1_UTIL
 
 // Stuff for YAFFS utilities
 
@@ -128,7 +128,7 @@ extern unsigned yaffs_traceMask;
 #define T(mask,p) do{ if((mask) & (yaffs_traceMask | YAFFS_TRACE_ERROR)) TOUT(p);} while(0) 
 
 
-#ifndef CONFIG_YAFFS_WINCE
+#ifndef CONFIG_YAFFS1_WINCE
 #define YBUG() T(YAFFS_TRACE_BUG,(TSTR("==>> yaffs bug: " __FILE__ " %d" TENDSTR),__LINE__))
 #endif
 
Index: linux-2.6.10/fs/yaffs/yaffs_guts.c
===================================================================
--- linux-2.6.10.orig/fs/yaffs/yaffs_guts.c
+++ linux-2.6.10/fs/yaffs/yaffs_guts.c
@@ -92,7 +92,7 @@ static void yaffs_HandleWriteChunkError(
 static void yaffs_HandleWriteChunkOk(yaffs_Device *dev,int chunkInNAND,const __u8 *data, const yaffs_Spare *spare);
 static void yaffs_HandleUpdateChunk(yaffs_Device *dev,int chunkInNAND, const yaffs_Spare *spare);
 
-#ifndef CONFIG_YAFFS_DISABLE_CHUNK_ERASED_CHECK
+#ifndef CONFIG_YAFFS1_DISABLE_CHUNK_ERASED_CHECK
 static int  yaffs_CheckChunkErased(struct yaffs_DeviceStruct *dev,int chunkInNAND);
 #endif
 
@@ -331,7 +331,7 @@ int yaffs_ReadChunkFromNAND(struct yaffs
 }
 
 
-#ifndef CONFIG_YAFFS_DISABLE_CHUNK_ERASED_CHECK
+#ifndef CONFIG_YAFFS1_DISABLE_CHUNK_ERASED_CHECK
 static int yaffs_CheckChunkErased(struct yaffs_DeviceStruct *dev,int chunkInNAND)
 {
 
@@ -387,7 +387,7 @@ static int yaffs_WriteNewChunkToNAND(str
 		{
 
 			// First check this chunk is erased...
-#ifndef CONFIG_YAFFS_DISABLE_CHUNK_ERASED_CHECK
+#ifndef CONFIG_YAFFS1_DISABLE_CHUNK_ERASED_CHECK
 			writeOk = yaffs_CheckChunkErased(dev,chunk);
 #endif		
 			if(!writeOk)
@@ -408,7 +408,7 @@ static int yaffs_WriteNewChunkToNAND(str
 				// NB We check a raw read without ECC correction applied
 				yaffs_ReadChunkFromNAND(dev,chunk,rbData,&rbSpare,0);
 				
-#ifndef CONFIG_YAFFS_DISABLE_WRITE_VERIFY
+#ifndef CONFIG_YAFFS1_DISABLE_WRITE_VERIFY
 				if(!yaffs_VerifyCompare(data,rbData,spare,&rbSpare))
 				{
 					// Didn't verify
@@ -577,7 +577,7 @@ static __u16 yaffs_CalcNameSum(const cha
 		while ((*bname) && (i <=YAFFS_MAX_NAME_LENGTH))
 		{
 
-#ifdef CONFIG_YAFFS_CASE_INSENSITIVE
+#ifdef CONFIG_YAFFS1_CASE_INSENSITIVE
 			sum += toupper(*bname) * i;
 #else
 			sum += (*bname) * i;
@@ -591,7 +591,7 @@ static __u16 yaffs_CalcNameSum(const cha
 
 void yaffs_SetObjectName(yaffs_Object *obj, const char *name)
 {
-#ifdef CONFIG_YAFFS_SHORT_NAMES_IN_RAM
+#ifdef CONFIG_YAFFS1_SHORT_NAMES_IN_RAM
 					if(name && strlen(name) <= YAFFS_SHORT_NAME_LENGTH)
 					{
 						strcpy(obj->shortName,name);
@@ -711,13 +711,13 @@ static int yaffs_CreateTnodes(yaffs_Devi
     for(i = 0; i < nTnodes - 1; i++)
     {
     	newTnodes[i].internal[0] = &newTnodes[i+1];
-#ifdef CONFIG_YAFFS_TNODE_LIST_DEBUG
+#ifdef CONFIG_YAFFS1_TNODE_LIST_DEBUG
     	newTnodes[i].internal[YAFFS_NTNODES_INTERNAL] = 1;
 #endif
     }
     	
 	newTnodes[nTnodes - 1].internal[0] = dev->freeTnodes;
-#ifdef CONFIG_YAFFS_TNODE_LIST_DEBUG
+#ifdef CONFIG_YAFFS1_TNODE_LIST_DEBUG
    	newTnodes[nTnodes - 1].internal[YAFFS_NTNODES_INTERNAL] = 1;
 #endif
 	dev->freeTnodes = newTnodes;
@@ -762,7 +762,7 @@ static yaffs_Tnode *yaffs_GetTnode(yaffs
 	if(dev->freeTnodes)
 	{
 		tn = dev->freeTnodes;
-#ifdef CONFIG_YAFFS_TNODE_LIST_DEBUG
+#ifdef CONFIG_YAFFS1_TNODE_LIST_DEBUG
     	if(tn->internal[YAFFS_NTNODES_INTERNAL] != 1)
 		{
 			// Hoosterman, this thing looks like it isn't in the list
@@ -785,7 +785,7 @@ static void yaffs_FreeTnode(yaffs_Device
 {
 	if(tn)
 	{
-#ifdef CONFIG_YAFFS_TNODE_LIST_DEBUG
+#ifdef CONFIG_YAFFS1_TNODE_LIST_DEBUG
     	if(tn->internal[YAFFS_NTNODES_INTERNAL] != 0)
 		{
 			// Hoosterman, this thing looks like it is already in the list
@@ -1675,7 +1675,7 @@ yaffs_Object *yaffs_CreateNewObject(yaff
 		theObject->objectId = number;
 		yaffs_HashObject(theObject);
 		theObject->variantType = type;
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 		yfsd_WinFileTimeNow(theObject->win_atime);
 		theObject->win_ctime[0] = theObject->win_mtime[0] = theObject->win_atime[0];
 		theObject->win_ctime[1] = theObject->win_mtime[1] = theObject->win_atime[1];
@@ -1781,7 +1781,7 @@ yaffs_Object *yaffs_MknodObject( yaffs_O
 
 		in->st_mode  = mode;
 		
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 		yfsd_WinFileTimeNow(in->win_atime);
 		in->win_ctime[0] = in->win_mtime[0] = in->win_atime[0];
 		in->win_ctime[1] = in->win_mtime[1] = in->win_atime[1];
@@ -1914,7 +1914,7 @@ int yaffs_RenameObject(yaffs_Object *old
 	yaffs_Object *obj;
 	int force = 0;
 	
-#ifdef CONFIG_YAFFS_CASE_INSENSITIVE
+#ifdef CONFIG_YAFFS1_CASE_INSENSITIVE
 	// Special case for WinCE.
 	// While look-up is case insensitive, the name isn't.
 	// THerefore we might want to change x.txt to X.txt
@@ -3046,7 +3046,7 @@ int yaffs_UpdateObjectHeader(yaffs_Objec
 		
 		oh->st_mode = in->st_mode;
 
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 		oh->win_atime[0] = in->win_atime[0];
 		oh->win_ctime[0] = in->win_ctime[0];
 		oh->win_mtime[0] = in->win_mtime[0];
@@ -3504,7 +3504,7 @@ int yaffs_ReadDataFromFile(yaffs_Object 
 		}
 		else
 		{
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 			
 			// Under WinCE can't do direct transfer. Need to use a local buffer.
 			// This is because we otherwise screw up WinCE's memory mapper
@@ -3625,7 +3625,7 @@ int yaffs_WriteDataToFile(yaffs_Object *
 		else
 		{
 			
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 			// Under WinCE can't do direct transfer. Need to use a local buffer.
 			// This is because we otherwise screw up WinCE's memory mapper
 			memcpy(dev->localBuffer,buffer,YAFFS_BYTES_PER_CHUNK);
@@ -3766,7 +3766,7 @@ int yaffs_FlushFile(yaffs_Object *in, in
 		yaffs_FlushFilesChunkCache(in);
 		if(updateTime)
 		{
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 			yfsd_WinFileTimeNow(in->win_mtime);
 #else
 			in->st_mtime = Y_CURRENT_TIME;
@@ -3814,7 +3814,7 @@ static int yaffs_DoGenericObjectDeletion
 static int yaffs_UnlinkFile(yaffs_Object *in)
 {
 
-#ifdef CONFIG_YAFFS_DISABLE_BACKGROUND_DELETION
+#ifdef CONFIG_YAFFS1_DISABLE_BACKGROUND_DELETION
 
 	// Delete the file data & tnodes
 
@@ -4166,7 +4166,7 @@ static int yaffs_Scan(yaffs_Device *dev)
 				if(in->variant.fileVariant.scannedFileSize <endpos)
 				{
 					in->variant.fileVariant.scannedFileSize = endpos;
-#ifndef CONFIG_YAFFS_USE_HEADER_FILE_SIZE
+#ifndef CONFIG_YAFFS1_USE_HEADER_FILE_SIZE
 						in->variant.fileVariant.fileSize = 	
 							in->variant.fileVariant.scannedFileSize;
 #endif
@@ -4216,7 +4216,7 @@ static int yaffs_Scan(yaffs_Device *dev)
 					in->variantType = oh->type;
 	
 					in->st_mode  = oh->st_mode;
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 					in->win_atime[0] = oh->win_atime[0];
 					in->win_ctime[0] = oh->win_ctime[0];
 					in->win_mtime[0] = oh->win_mtime[0];
@@ -4242,7 +4242,7 @@ static int yaffs_Scan(yaffs_Device *dev)
 					in->variantType = oh->type;
 	
 					in->st_mode  = oh->st_mode;
-#ifdef CONFIG_YAFFS_WINCE
+#ifdef CONFIG_YAFFS1_WINCE
 					in->win_atime[0] = oh->win_atime[0];
 					in->win_ctime[0] = oh->win_ctime[0];
 					in->win_mtime[0] = oh->win_mtime[0];
@@ -4300,7 +4300,7 @@ static int yaffs_Scan(yaffs_Device *dev)
 						case YAFFS_OBJECT_TYPE_UNKNOWN: 	// Todo got a problem
 							break;
 						case YAFFS_OBJECT_TYPE_FILE:
-#ifdef CONFIG_YAFFS_USE_HEADER_FILE_SIZE
+#ifdef CONFIG_YAFFS1_USE_HEADER_FILE_SIZE
 							in->variant.fileVariant.fileSize = oh->fileSize;
 #endif
 							break;
@@ -4520,7 +4520,7 @@ int yaffs_GetObjectName(yaffs_Object *ob
 		strncpy(name,locName,buffSize - 1);
 
 	}
-#ifdef CONFIG_YAFFS_SHORT_NAMES_IN_RAM
+#ifdef CONFIG_YAFFS1_SHORT_NAMES_IN_RAM
 	else if(obj->shortName[0])
 	{
 		strcpy(name,obj->shortName);
@@ -4621,7 +4621,7 @@ char *yaffs_GetSymlinkAlias(yaffs_Object
 	}
 }
 
-#ifndef CONFIG_YAFFS_WINCE
+#ifndef CONFIG_YAFFS1_WINCE
 
 int yaffs_SetAttributes(yaffs_Object *obj, struct iattr *attr)
 {
@@ -5032,7 +5032,7 @@ static int yaffs_CheckStructures(void)
 	yaffs_CheckStruct(yaffs_Tags,8,"yaffs_Tags")
 	yaffs_CheckStruct(yaffs_TagsUnion,8,"yaffs_TagsUnion")
 	yaffs_CheckStruct(yaffs_Spare,16,"yaffs_Spare")
-#ifndef CONFIG_YAFFS_TNODE_LIST_DEBUG
+#ifndef CONFIG_YAFFS1_TNODE_LIST_DEBUG
 	yaffs_CheckStruct(yaffs_Tnode,2* YAFFS_NTNODES_LEVEL0,"yaffs_Tnode")
 #endif
 	yaffs_CheckStruct(yaffs_ObjectHeader,512,"yaffs_ObjectHeader")
Index: linux-2.6.10/mvl_patches/pro-0726.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0726.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2006 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(726);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

