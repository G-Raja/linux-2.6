#! /usr/bin/env bash
# Patch: -pro_mpc8349mIDX_plsprt_cfide
# Date: Mon Apr  9 00:18:11 2007
# Source: MontaVista Software, Inc.
# MR: 22730
# Type: Enhancement
# Disposition: MontaVista
# Signed-off-by: Gennadiy Kurtsman <gkurtsman@ru.mvista.com>
# Description:
#     Platform support of True IDE Compact Flash driver
# 

PATCHNUM=1302
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 22730
Type: Enhancement
Disposition: MontaVista
Signed-off-by: Gennadiy Kurtsman <gkurtsman@ru.mvista.com>
Description:
    Platform support of True IDE Compact Flash driver

Index: linux-2.6.10/arch/ppc/syslib/mpc83xx_devices.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/mpc83xx_devices.c
+++ linux-2.6.10/arch/ppc/syslib/mpc83xx_devices.c
@@ -18,6 +18,7 @@
 #include <linux/device.h>
 #include <linux/serial_8250.h>
 #include <linux/fsl_devices.h>
+#include <linux/cfide.h>
 #include <asm/mpc83xx.h>
 #include <asm/irq.h>
 #include <asm/ppc_sys.h>
@@ -87,6 +88,11 @@ static struct ucc_geth_platform_data mpc
 	.phy_reg_addr = 0x3000,
 };
 
+static struct cfide_platform_data cfide_pdata = {
+	.byte_lanes_swapping	= 0,
+	.regaddr_step		= 2,
+};
+
 struct platform_device ppc_sys_platform_devices[] = {
 	[MPC83xx_TSEC1] = {
 		.name = "fsl-gianfar",
@@ -330,6 +336,31 @@ struct platform_device ppc_sys_platform_
 			},
 		},
 	},
+	[MPC83xx_CFIDE] = {
+		.name			= "mmio-cfide",
+		.id			= 1,
+		.dev.platform_data	= &cfide_pdata,
+		.num_resources		= 3,
+		.resource = (struct resource[]) {
+			{
+				.start  = 0x10000000,
+				.end	= 0x1000000f,
+				.flags	= IORESOURCE_MEM,
+			},
+			{
+				.start  = 0x10000200, /* there is a self-contradiction
+							in board description: either
+							0x10000100 or 0x10000200 */
+				.end	= 0x1000020f,
+				.flags	= IORESOURCE_MEM,
+			},
+			{
+				.start	= MPC83xx_IRQ_EXT7,
+				.end	= MPC83xx_IRQ_EXT7,
+				.flags	= IORESOURCE_IRQ,
+			},
+		},
+	},
 };
 
 static int __init mach_mpc83xx_fixup(struct platform_device *pdev)
Index: linux-2.6.10/arch/ppc/syslib/mpc83xx_sys.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/mpc83xx_sys.c
+++ linux-2.6.10/arch/ppc/syslib/mpc83xx_sys.c
@@ -36,12 +36,13 @@ struct ppc_sys_spec ppc_sys_specs[] = {
 		.ppc_sys_name	= "8349E_ITX",
 		.mask 		= 0xFFFF0000,
 		.value 		= 0x80500000,
-		.num_devices	= 9,
+		.num_devices	= 10,
 		.device_list	= (enum ppc_sys_devices[])
 		{
 			MPC83xx_TSEC1, MPC83xx_TSEC2, MPC83xx_IIC1,
 			MPC83xx_IIC2, MPC83xx_DUART, MPC83xx_SEC2,
 			MPC83xx_USB2_DR, MPC83xx_USB2_MPH, MPC83xx_MDIO_TSEC1,
+			MPC83xx_CFIDE,
 		},
 	},
 	{
Index: linux-2.6.10/include/asm-ppc/mpc83xx.h
===================================================================
--- linux-2.6.10.orig/include/asm-ppc/mpc83xx.h
+++ linux-2.6.10/include/asm-ppc/mpc83xx.h
@@ -192,6 +192,7 @@ enum ppc_sys_devices {
 	MPC83xx_USB2_MPH,
 	MPC83xx_MDIO,
 	MPC83xx_MDIO_TSEC1,
+	MPC83xx_CFIDE,
 	MPC83xx_QE_UCC1,
 	MPC83xx_QE_UCC2,
 	MPC83xx_QE_UCC3,
Index: linux-2.6.10/arch/ppc/platforms/83xx/mpc834x_itx.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/83xx/mpc834x_itx.c
+++ linux-2.6.10/arch/ppc/platforms/83xx/mpc834x_itx.c
@@ -17,6 +17,7 @@
 #include <linux/stddef.h>
 #include <linux/kernel.h>
 #include <linux/init.h>
+#include <linux/module.h>
 #include <linux/errno.h>
 #include <linux/reboot.h>
 #include <linux/pci.h>
@@ -51,6 +52,7 @@
 #include <asm/kgdb.h>
 #include <asm/ppc_sys.h>
 #include <mm/mmu_decl.h>
+#include <linux/ide.h>
 
 #include <syslib/ppc83xx_setup.h>
 
@@ -166,6 +168,42 @@ static void __init mpc834x_usb_init(void
 }
 #endif				/* CONFIG_834x_USB_SUPPORT */
 
+static void cfide_outsw(unsigned long port, void *addr, u32 count)
+{
+	_outsw_ns((void __iomem *)port, addr, count);
+}
+
+static void cfide_insw(unsigned long port, void *addr, u32 count)
+{
+	_insw_ns((void __iomem *)port, addr, count);
+}
+
+void cfide_platform_mmiops (ide_hwif_t *hwif)
+{
+	default_hwif_mmiops(hwif);
+	hwif->OUTL = NULL;
+	hwif->OUTSW = cfide_outsw;
+	hwif->OUTSL = NULL;
+	hwif->INL = NULL;
+	hwif->INSW = cfide_insw;
+	hwif->INSL = NULL;
+}
+
+EXPORT_SYMBOL(cfide_platform_mmiops);
+
+void cfide_selectproc (ide_drive_t *drive)
+{
+	u8 stat;
+
+	stat = drive->hwif->INB(IDE_STATUS_REG);
+	if ((stat & READY_STAT) && (stat & BUSY_STAT))
+		drive->present = 0;
+	else
+		drive->present = 1;
+}
+
+EXPORT_SYMBOL(cfide_selectproc);
+
 /* ************************************************************************
  *
  * Setup the architecture
Index: linux-2.6.10/mvl_patches/pro-1302.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1302.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1302);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

