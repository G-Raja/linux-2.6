#! /usr/bin/env bash
# Patch: -pro_mips_rmi_hrt
# Date: Wed May 16 11:17:31 2007
# Source: MontaVista Software, Inc.
# MR: 23251
# Type: Defect Fix
# Disposition: MontaVista
# Signed-off-by: Manish Lachwani <mlachwani@mvista.com>
# Description:
# 
# HRT support for RMI XLR platform:
# 
#  arch/mips/rmi/phoenix/irq.c         |   10 +++++++++-
#  arch/mips/rmi/phoenix/irq_handler.S |   15 ++++++++++++---
#  arch/mips/rmi/phoenix/smp.c         |    8 +++++++-
#  arch/mips/rmi/phoenix/time.c        |   13 ++++++++++++-
#  arch/mips/rmi/ptr/setup.c           |    2 ++
#  arch/mips/rmi/ptr/smp.c             |    4 ++++
#  6 files changed, 46 insertions(+), 6 deletions(-)
# 
# 

PATCHNUM=1335
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 23251
Type: Defect Fix
Disposition: MontaVista
Signed-off-by: Manish Lachwani <mlachwani@mvista.com>
Description:

HRT support for RMI XLR platform:

 arch/mips/rmi/phoenix/irq.c         |   10 +++++++++-
 arch/mips/rmi/phoenix/irq_handler.S |   15 ++++++++++++---
 arch/mips/rmi/phoenix/smp.c         |    8 +++++++-
 arch/mips/rmi/phoenix/time.c        |   13 ++++++++++++-
 arch/mips/rmi/ptr/setup.c           |    2 ++
 arch/mips/rmi/ptr/smp.c             |    4 ++++
 mvl_patches/pro-1335.c              |   16 ++++++++++++++++
 7 files changed, 62 insertions(+), 6 deletions(-)


Index: linux-2.6.10/arch/mips/rmi/ptr/setup.c
===================================================================
--- linux-2.6.10.orig/arch/mips/rmi/ptr/setup.c
+++ linux-2.6.10/arch/mips/rmi/ptr/setup.c
@@ -212,7 +212,9 @@ void __init ptr_timer_setup(struct irqac
 	 * to be NULL function so that we are sure the high-level code
 	 * is not invoked accidentally.
 	 */
+#ifndef CONFIG_CPU_TIMER
 	phoenix_timer_setup();
+#endif
 }
 
 static int __init ptr_console_setup(void) 
Index: linux-2.6.10/arch/mips/rmi/ptr/smp.c
===================================================================
--- linux-2.6.10.orig/arch/mips/rmi/ptr/smp.c
+++ linux-2.6.10/arch/mips/rmi/ptr/smp.c
@@ -155,6 +155,10 @@ void prom_smp_finish(void)
 
 void prom_cpus_done(void)
 {
+#ifdef CONFIG_CPU_TIMER
+	extern void sync_c0_count_master(void);
+	sync_c0_count_master();
+#endif
 }
 
 void __init prom_build_cpu_map(void)
Index: linux-2.6.10/arch/mips/rmi/phoenix/irq.c
===================================================================
--- linux-2.6.10.orig/arch/mips/rmi/phoenix/irq.c
+++ linux-2.6.10/arch/mips/rmi/phoenix/irq.c
@@ -297,6 +297,11 @@ void __init init_phoenix_irqs(void)
 
 	phnx_irq_mask |= 
 		((1ULL<<IRQ_IPI_SMP_FUNCTION)|(1ULL<<IRQ_IPI_SMP_RESCHEDULE));
+
+#ifdef CONFIG_CPU_TIMER
+	 phnx_irq_mask |= ((1ULL<<IRQ_TIMER));
+#endif
+
 #endif
 
 	/* msgring interrupt */
@@ -326,7 +331,10 @@ void __init init_phoenix_irqs(void)
 	 */
 	for(i=PIC_IRT_FIRST_IRQ;i<=PIC_IRT_LAST_IRQ;i++) 
 		phnx_irq_mask |= (1ULL << i);
-	
+
+#ifdef CONFIG_CPU_TIMER
+	change_c0_status(ST0_IM, phnx_irq_mask);
+#endif	
 }
  
 extern void phoenix_timer_interrupt(struct pt_regs *regs, int irq);
Index: linux-2.6.10/arch/mips/rmi/phoenix/irq_handler.S
===================================================================
--- linux-2.6.10.orig/arch/mips/rmi/phoenix/irq_handler.S
+++ linux-2.6.10/arch/mips/rmi/phoenix/irq_handler.S
@@ -58,12 +58,21 @@
 	 */
 	
 	/* phoenix_timer_interrupt((a0 = sp)) */
-	li	a1, IRQ_TIMER
-	move    a0, sp
-	jal     phoenix_timer_interrupt
+#ifdef CONFIG_CPU_TIMER
+	li	a0, IRQ_TIMER
+	move	a1, sp
+	jal     ll_timer_interrupt
 	nop
 	j       ret_from_irq
 	nop
+#else
+	li	a1, IRQ_TIMER
+	move	a0, sp
+	jal	phoenix_timer_interrupt
+	nop
+	j	ret_from_irq
+	nop
+#endif
 
 	/* All other interrupts */
 1:
Index: linux-2.6.10/arch/mips/rmi/phoenix/smp.c
===================================================================
--- linux-2.6.10.orig/arch/mips/rmi/phoenix/smp.c
+++ linux-2.6.10/arch/mips/rmi/phoenix/smp.c
@@ -60,6 +60,9 @@ void core_send_ipi(int logical_cpu, unsi
 		++ipi_3_counter_tx[smp_processor_id()][cpu]; 
 
 	}
+	else if (action & SMP_LOCAL_TIMER) {
+		ipi = (tid << 16) | (pid << 20) | IRQ_IPI_SMP_RESCHEDULE;
+	}
 	else if (action & SMP_RESCHEDULE_YOURSELF) {
 		ipi = (tid << 16) | (pid << 20) | IRQ_IPI_SMP_RESCHEDULE;
 #ifdef IPI_PRINTK_DEBUG
@@ -100,9 +103,12 @@ void phoenix_ipi_handler(int irq, struct
 			smp_processor_id(), irq);
 #endif
 
+#ifndef CONFIG_CPU_TIMER
 		/* Announce that we are for reschduling */
 		set_need_resched();
-
+#else
+		local_timer_interrupt(0, NULL, regs);
+#endif
 	}
 	phoenix_ipi_stats[smp_processor_id()]--;
 }
Index: linux-2.6.10/arch/mips/rmi/phoenix/time.c
===================================================================
--- linux-2.6.10.orig/arch/mips/rmi/phoenix/time.c
+++ linux-2.6.10/arch/mips/rmi/phoenix/time.c
@@ -40,8 +40,11 @@
 
 extern spinlock_t phnx_pic_lock;
 
+#ifdef CONFIG_CPU_TIMER
+extern void local_timer_interrupt(int irq,  void *dev_id, struct pt_regs *regs);
+#else
 extern void ll_local_timer_interrupt(int irq, struct pt_regs *regs);
-
+#endif
 static unsigned long phoenix_timer_stats[NR_CPUS] ____cacheline_aligned;
 static unsigned long phoenix_timer_diff[NR_CPUS] ____cacheline_aligned;
 static unsigned long phoenix_timer_count[NR_CPUS] ____cacheline_aligned;
@@ -104,7 +107,11 @@ void phoenix_timer_interrupt(struct pt_r
 		ll_timer_interrupt(irq, regs);
 	}  else {
 		xlr_timer_ack();
+#ifdef CONFIG_CPU_TIMER
+		ll_timer_interrupt(irq, regs);
+#else
 		ll_local_timer_interrupt(irq, regs);
+#endif
 	}
 #ifdef CONFIG_PHOENIX_RAW_PERF_COUNTERS
 	/* Collect COP0 perf counters which are per vCPU */
@@ -126,7 +133,9 @@ void phoenix_smp_time_init(void)
 #define PIC_CLKS_PER_USEC 64 //(PIC_CLKS_PER_SEC / 1000000)
 #define PIC_CLKS_PER_TIMER_TICK (PIC_CLKS_PER_SEC / HZ)
 
+#ifndef CONFIG_CPU_TIMER
 extern unsigned long (*do_gettimeoffset)(void);
+#endif
 /* 
  * this routine returns the time duration since the last timer interrupt
  * in micro seconds
@@ -172,6 +181,7 @@ void phoenix_timer_setup(void)
 	pic_update_control(1<<(8+7));
 	spin_unlock_irqrestore(&phnx_pic_lock, flags);
 
+#ifndef CONFIG_CPU_TIMER
 	do_gettimeoffset = phoenix_gettimeoffset;
 
 	printk("%s: phoenix_timer_stats = %p, phoenix_timer_diff = %p,"
@@ -180,4 +190,5 @@ void phoenix_timer_setup(void)
 	 	__FUNCTION__, phoenix_timer_stats, phoenix_timer_diff, 
 		phoenix_timer_count, phoenix_timer_epc,
 	 	phoenix_timer_cpu, phoenix_timer_gettimeoffset);
+#endif
 }
Index: linux-2.6.10/mvl_patches/pro-1335.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1335.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1335);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

