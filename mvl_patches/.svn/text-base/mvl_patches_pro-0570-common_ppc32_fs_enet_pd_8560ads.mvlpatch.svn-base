#! /usr/bin/env bash
# Patch: -common_ppc32_fs_enet_pd_8560ads
# Date: Fri May 26 10:17:49 2006
# Source: MontaVista Software, Inc.
# MR: 17804
# Type: Enhancement
# Disposition: MontaVista
# Signed-off-by: Yuri Shpilevsky <yshpilevsky@ru.mvista.com>
# Description:
#     This patch updates board-specific data (for 8560ads and 885ads) to 
#     to respect fs_enet driver changes.
# 
#  arch/ppc/platforms/85xx/mpc8560_ads.c |  110 +++++++++++++++++++++++++++++++
#  arch/ppc/platforms/85xx/mpc8560_ads.h |    1 
#  arch/ppc/syslib/mpc85xx_devices.c     |  115 ++++++++++++++++++++++++++++++---
#  arch/ppc/syslib/mpc85xx_sys.c         |    3 
#  drivers/net/fs_enet/fs_enet-main.c    |    6 +
#  drivers/net/fs_enet/fs_enet.h         |    5 +
#  drivers/net/fs_enet/mac-fcc.c         |   27 +++----
#  drivers/net/fs_enet/mii-fec.c         |    4 -
#  include/asm-ppc/mpc85xx.h             |  118 ++++++++++++++++++++++++++++++++++
#  9 files changed, 357 insertions(+), 32 deletions(-)
# 

PATCHNUM=570
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 17804
Type: Enhancement
Disposition: MontaVista
Signed-off-by: Yuri Shpilevsky <yshpilevsky@ru.mvista.com>
Description:
    This patch updates board-specific data (for 8560ads and 885ads) to 
    to respect fs_enet driver changes.

 arch/ppc/platforms/85xx/mpc8560_ads.c |  110 +++++++++++++++++++++++++++++++
 arch/ppc/platforms/85xx/mpc8560_ads.h |    1 
 arch/ppc/syslib/mpc85xx_devices.c     |  115 ++++++++++++++++++++++++++++++---
 arch/ppc/syslib/mpc85xx_sys.c         |    3 
 drivers/net/fs_enet/fs_enet-main.c    |    6 +
 drivers/net/fs_enet/fs_enet.h         |    5 +
 drivers/net/fs_enet/mac-fcc.c         |   27 +++----
 drivers/net/fs_enet/mii-fec.c         |    4 -
 include/asm-ppc/mpc85xx.h             |  118 ++++++++++++++++++++++++++++++++++
 mvl_patches/pro-0570.c                |   16 ++++
 10 files changed, 373 insertions(+), 32 deletions(-)

Index: linux-2.6.10/arch/ppc/platforms/85xx/mpc8560_ads.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/85xx/mpc8560_ads.c
+++ linux-2.6.10/arch/ppc/platforms/85xx/mpc8560_ads.c
@@ -33,6 +33,7 @@
 #include <linux/initrd.h>
 #include <linux/module.h>
 #include <linux/fsl_devices.h>
+#include <linux/fs_enet_pd.h>
 
 #include <asm/system.h>
 #include <asm/pgtable.h>
@@ -63,6 +64,72 @@
  *
  */
 
+static void init_fcc_ioports(void)
+{
+	struct immap *immap;
+	struct io_port *io;
+	u32 tempval;
+
+	immap = cpm2_immr;
+
+	io = &immap->im_ioport;
+	/* FCC2/3 are on the ports B/C. */ 
+	tempval = in_be32(&io->iop_pdirb); 
+	tempval &= ~PB2_DIRB0; 
+	tempval |= PB2_DIRB1; 
+	out_be32(&io->iop_pdirb, tempval); 
+
+	tempval = in_be32(&io->iop_psorb); 
+	tempval &= ~PB2_PSORB0; 
+	tempval |= PB2_PSORB1; 
+	out_be32(&io->iop_psorb, tempval); 
+
+	tempval = in_be32(&io->iop_pparb); 
+	tempval |= (PB2_DIRB0 | PB2_DIRB1); 
+	out_be32(&io->iop_pparb, tempval); 
+
+	tempval = in_be32(&io->iop_pdirb); 
+	tempval &= ~PB3_DIRB0; 
+	tempval |= PB3_DIRB1; 
+	out_be32(&io->iop_pdirb, tempval); 
+
+	tempval = in_be32(&io->iop_psorb); 
+	tempval &= ~PB3_PSORB0; 
+	tempval |= PB3_PSORB1; 
+	out_be32(&io->iop_psorb, tempval); 
+
+	tempval = in_be32(&io->iop_pparb); 
+	tempval |= (PB3_DIRB0 | PB3_DIRB1); 
+	out_be32(&io->iop_pparb, tempval); 
+
+        tempval = in_be32(&io->iop_pdirc);
+        tempval |= PC3_DIRC1;
+        out_be32(&io->iop_pdirc, tempval);
+
+        tempval = in_be32(&io->iop_pparc);
+        tempval |= PC3_DIRC1;
+        out_be32(&io->iop_pparc, tempval);
+
+	/* Port C has clocks......  */ 
+	tempval = in_be32(&io->iop_psorc); 
+	tempval &= ~(CLK_TRX); 
+	out_be32(&io->iop_psorc, tempval); 
+
+	tempval = in_be32(&io->iop_pdirc); 
+	tempval &= ~(CLK_TRX); 
+	out_be32(&io->iop_pdirc, tempval); 
+	tempval = in_be32(&io->iop_pparc); 
+	tempval |= (CLK_TRX); 
+	out_be32(&io->iop_pparc, tempval); 
+
+	/* Configure Serial Interface clock routing. 
+	 * First,  clear all FCC bits to zero, 
+	 * then set the ones we want. 
+	 */ 
+	immap->im_cpmux.cmx_fcr &= ~(CPMUX_CLK_MASK); 
+	immap->im_cpmux.cmx_fcr |= CPMUX_CLK_ROUTE; 
+} 
+
 static void __init
 mpc8560ads_setup_arch(void)
 {
@@ -70,7 +137,9 @@ mpc8560ads_setup_arch(void)
 	unsigned int freq;
 	struct gianfar_platform_data *pdata;
 	struct gianfar_mdio_data *mdata;
-
+	struct fs_platform_info *fpi;
+	struct fs_mii_bb_platform_info *bb_pdata;
+	
 	cpm2_reset();
 
 	/* get the core frequency */
@@ -103,9 +172,19 @@ mpc8560ads_setup_arch(void)
 	mdata->irq[0] = MPC85xx_IRQ_EXT5;
 	mdata->irq[1] = MPC85xx_IRQ_EXT5;
 	mdata->irq[2] = -1;
-	mdata->irq[3] = MPC85xx_IRQ_EXT5;
+	mdata->irq[3] = -1;
 	mdata->irq[31] = -1;
 
+	bb_pdata = (struct fs_mii_bb_platform_info *) ppc_sys_get_pdata (MPC85xx_MDIO_BB);
+
+	bb_pdata->irq[0] = -1; 
+	bb_pdata->irq[1] = -1;
+	bb_pdata->irq[2] = MPC85xx_IRQ_EXT7;
+	bb_pdata->irq[3] = MPC85xx_IRQ_EXT7;
+	bb_pdata->irq[4] = -1;
+	bb_pdata->irq[31] = -1;
+
+
 	/* setup the board related information for the enet controllers */
 	pdata = (struct gianfar_platform_data *) ppc_sys_get_pdata(MPC85xx_TSEC1);
 	if (pdata) {
@@ -123,6 +202,33 @@ mpc8560ads_setup_arch(void)
 		memcpy(pdata->mac_addr, binfo->bi_enet1addr, 6);
 	}
 
+	init_fcc_ioports();
+
+	ppc_sys_device_remove(MPC85xx_CPM_FCC1);
+	ppc_sys_device_remove(MPC85xx_CPM_SCC1);
+	ppc_sys_device_remove(MPC85xx_CPM_SCC2);
+	ppc_sys_device_remove(MPC85xx_CPM_SCC3);
+	ppc_sys_device_remove(MPC85xx_CPM_SCC4);
+
+	fpi = (struct fs_platform_info *) ppc_sys_get_pdata(MPC85xx_CPM_FCC2);
+	if (fpi) {
+	memcpy(fpi->macaddr, binfo->bi_enet2addr, 6);
+	fpi->bus_id = "0:02";
+	fpi->phy_addr = 2;
+	fpi->dpram_offset = (u32)cpm2_immr->im_dprambase;
+	fpi->fcc_regs_c = (u32)&cpm2_immr->im_fcc_c[1];
+	}
+
+	fpi = (struct fs_platform_info *) ppc_sys_get_pdata(MPC85xx_CPM_FCC3);
+	if (fpi) {
+	memcpy(fpi->macaddr, binfo->bi_enet2addr, 6);
+	fpi->macaddr[5] += 1;
+	fpi->bus_id = "0:03";
+	fpi->phy_addr = 3;
+	fpi->dpram_offset = (u32)cpm2_immr->im_dprambase;
+	fpi->fcc_regs_c = (u32)&cpm2_immr->im_fcc_c[2];
+	}
+
 #ifdef CONFIG_MTD
 	mpc85xx_ads_mtd_setup();
 #endif
Index: linux-2.6.10/arch/ppc/platforms/85xx/mpc8560_ads.h
===================================================================
--- linux-2.6.10.orig/arch/ppc/platforms/85xx/mpc8560_ads.h
+++ linux-2.6.10/arch/ppc/platforms/85xx/mpc8560_ads.h
@@ -22,6 +22,5 @@
 #include <platforms/85xx/mpc85xx_ads_common.h>
 
 #define CPM_MAP_ADDR	(CCSRBAR + MPC85xx_CPM_OFFSET)
-#define PHY_INTERRUPT	MPC85xx_IRQ_EXT7
 
 #endif				/* __MACH_MPC8560ADS_H */
Index: linux-2.6.10/arch/ppc/syslib/mpc85xx_devices.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/mpc85xx_devices.c
+++ linux-2.6.10/arch/ppc/syslib/mpc85xx_devices.c
@@ -18,9 +18,11 @@
 #include <linux/device.h>
 #include <linux/serial_8250.h>
 #include <linux/fsl_devices.h>
+#include <linux/fs_enet_pd.h>
 #include <asm/mpc85xx.h>
 #include <asm/irq.h>
 #include <asm/ppc_sys.h>
+#include <asm/cpm2.h>
 
 /* We use offsets for IORESOURCE_MEM since we do not know at compile time
  * what CCSRBAR is, will get fixed up by mach_mpc85xx_fixup
@@ -84,6 +86,68 @@ static struct fsl_i2c_platform_data mpc8
 	.device_flags = FSL_I2C_DEV_SEPARATE_DFSRR,
 };
 
+static struct fs_mii_bb_platform_info mpc85xx_mii_bb_pdata = {
+       .mdio_port	= fsiop_portc,
+       .mdio_bit	= 9,
+       .mdc_port	= fsiop_portc,
+       .mdc_bit		= 10,
+       .delay		= 10,
+};
+
+static struct fs_platform_info mpc85xx_fcc1_pdata = { 
+	.fs_no          = fsid_fcc1, 
+	.cp_page        = CPM_CR_FCC1_PAGE, 
+	.cp_block       = CPM_CR_FCC1_SBLOCK, 
+
+	.rx_ring        = 32, 
+	.tx_ring        = 32, 
+	.rx_copybreak   = 240, 
+	.use_napi       = 0, 
+	.napi_weight    = 17, 
+
+	.clk_mask	= CMX1_CLK_MASK,
+	.clk_route	= CMX1_CLK_ROUTE,
+	.clk_trx	= (PC_F1RXCLK | PC_F1TXCLK),
+	
+	.mem_offset     = FCC1_MEM_OFFSET,
+}; 
+
+static struct fs_platform_info mpc85xx_fcc2_pdata = { 
+	.fs_no          = fsid_fcc2, 
+	.cp_page        = CPM_CR_FCC2_PAGE, 
+	.cp_block       = CPM_CR_FCC2_SBLOCK, 
+
+	.rx_ring        = 32, 
+	.tx_ring        = 32, 
+	.rx_copybreak   = 240, 
+	.use_napi       = 0, 
+	.napi_weight    = 17,
+	
+	.clk_mask	= CMX2_CLK_MASK,
+	.clk_route	= CMX2_CLK_ROUTE,
+	.clk_trx	= (PC_F2RXCLK | PC_F2TXCLK),
+	
+	.mem_offset     = FCC2_MEM_OFFSET,
+}; 
+
+static struct fs_platform_info mpc85xx_fcc3_pdata = { 
+	.fs_no          = fsid_fcc3, 
+	.cp_page        = CPM_CR_FCC3_PAGE, 
+	.cp_block       = CPM_CR_FCC3_SBLOCK, 
+
+	.rx_ring        = 32, 
+	.tx_ring        = 32, 
+	.rx_copybreak   = 240, 
+	.use_napi       = 0, 
+	.napi_weight    = 17,
+
+	.clk_mask	= CMX3_CLK_MASK,
+	.clk_route	= CMX3_CLK_ROUTE,
+	.clk_trx	= (PC_F3RXCLK | PC_F3TXCLK),
+	
+	.mem_offset     = FCC3_MEM_OFFSET,
+}; 
+
 static struct plat_serial8250_port serial_platform_data[] = {
 	[0] = {
 		.mapbase	= 0x4500,
@@ -322,16 +386,25 @@ struct platform_device ppc_sys_platform_
 	[MPC85xx_CPM_FCC1] = {
 		.name = "fsl-cpm-fcc",
 		.id	= 1,
-		.num_resources	 = 3,
+		.num_resources	 = 4,
+		.dev.platform_data = &mpc85xx_fcc1_pdata,
 		.resource = (struct resource[]) {
 			{
+				.name	= "fcc_regs",
 				.start	= 0x91300,
 				.end	= 0x9131F,
 				.flags	= IORESOURCE_MEM,
 			},
 			{
-				.start	= 0x91380,
-				.end	= 0x9139F,
+				.name   = "fcc_regs_c",
+				.start  = 0x91380,
+				.end    = 0x9139F,
+				.flags  = IORESOURCE_MEM,
+			},
+			{
+				.name	= "fcc_pram",
+				.start	= 0x88400,
+				.end	= 0x884ff,
 				.flags	= IORESOURCE_MEM,
 			},
 			{
@@ -344,16 +417,25 @@ struct platform_device ppc_sys_platform_
 	[MPC85xx_CPM_FCC2] = {
 		.name = "fsl-cpm-fcc",
 		.id	= 2,
-		.num_resources	 = 3,
+		.num_resources	 = 4,
+		.dev.platform_data = &mpc85xx_fcc2_pdata, 
 		.resource = (struct resource[]) {
 			{
+				.name	= "fcc_regs",
 				.start	= 0x91320,
 				.end	= 0x9133F,
 				.flags	= IORESOURCE_MEM,
 			},
 			{
-				.start	= 0x913A0,
-				.end	= 0x913CF,
+				.name   = "fcc_regs_c",
+				.start  = 0x913A0,
+				.end    = 0x913CF,
+				.flags  = IORESOURCE_MEM,
+			},
+			{
+				.name	= "fcc_pram",
+				.start	= 0x88500,
+				.end	= 0x885ff,
 				.flags	= IORESOURCE_MEM,
 			},
 			{
@@ -366,16 +448,25 @@ struct platform_device ppc_sys_platform_
 	[MPC85xx_CPM_FCC3] = {
 		.name = "fsl-cpm-fcc",
 		.id	= 3,
-		.num_resources	 = 3,
+		.num_resources	 = 4,
+		.dev.platform_data = &mpc85xx_fcc3_pdata,
 		.resource = (struct resource[]) {
 			{
+				.name	= "fcc_regs",
 				.start	= 0x91340,
 				.end	= 0x9135F,
 				.flags	= IORESOURCE_MEM,
 			},
 			{
-				.start	= 0x913D0,
-				.end	= 0x913FF,
+				.name   = "fcc_regs_c",
+				.start  = 0x913D0,
+				.end    = 0x913FF,
+				.flags  = IORESOURCE_MEM,
+			},
+			{
+				.name	= "fcc_pram",
+				.start	= 0x88600,
+				.end	= 0x886ff,
 				.flags	= IORESOURCE_MEM,
 			},
 			{
@@ -730,6 +821,12 @@ struct platform_device ppc_sys_platform_
 			},
 		},
 	},
+	[MPC85xx_MDIO_BB] = {
+		.name = "fsl-bb-mdio",
+		.id = 1,
+		.dev.platform_data = &mpc85xx_mii_bb_pdata,
+		.num_resources = 0,
+	},
 };
 
 static int __init mach_mpc85xx_fixup(struct platform_device *pdev)
Index: linux-2.6.10/arch/ppc/syslib/mpc85xx_sys.c
===================================================================
--- linux-2.6.10.orig/arch/ppc/syslib/mpc85xx_sys.c
+++ linux-2.6.10/arch/ppc/syslib/mpc85xx_sys.c
@@ -36,7 +36,7 @@ struct ppc_sys_spec ppc_sys_specs[] = {
 		.ppc_sys_name	= "8560",
 		.mask 		= 0xFFFF0000,
 		.value 		= 0x80700000,
-		.num_devices	= 20,
+		.num_devices	= 21,
 		.device_list	= (enum ppc_sys_devices[])
 		{
 			MPC85xx_TSEC1, MPC85xx_TSEC2, MPC85xx_IIC1,
@@ -46,6 +46,7 @@ struct ppc_sys_spec ppc_sys_specs[] = {
 			MPC85xx_CPM_SCC2, MPC85xx_CPM_SCC3, MPC85xx_CPM_SCC4,
 			MPC85xx_CPM_FCC1, MPC85xx_CPM_FCC2, MPC85xx_CPM_FCC3,
 			MPC85xx_CPM_MCC1, MPC85xx_CPM_MCC2, MPC85xx_MDIO,
+			MPC85xx_MDIO_BB,
 		},
 	},
 	{
Index: linux-2.6.10/drivers/net/fs_enet/fs_enet-main.c
===================================================================
--- linux-2.6.10.orig/drivers/net/fs_enet/fs_enet-main.c
+++ linux-2.6.10/drivers/net/fs_enet/fs_enet-main.c
@@ -1,4 +1,4 @@
-/*
+/* 
  * Combined Ethernet driver for Motorola MPC8xx and MPC82xx.
  *
  * Copyright (c) 2003 Intracom S.A.
@@ -1226,6 +1226,7 @@ static int __init fs_init(void)
 	if (r != 0)
 		return r;
 
+#ifdef CONFIG_CPM2
 		/* let's insert mii stuff */
 	r = fs_enet_mdio_bb_init();
 
@@ -1234,13 +1235,16 @@ static int __init fs_init(void)
 			"BB PHY init failed.\n");
 		return r;
 	}
+#endif
 	
+#ifdef CONFIG_CPM1
 	r =  fs_enet_mdio_fec_init();
 	if (r != 0) {
 		printk(KERN_ERR DRV_MODULE_NAME
 			"FEC PHY init failed.\n");
 		return r;
 	}
+#endif
 	
 	r = driver_register(&fs_enet_fec_driver);
 	if (r != 0)
Index: linux-2.6.10/drivers/net/fs_enet/fs_enet.h
===================================================================
--- linux-2.6.10.orig/drivers/net/fs_enet/fs_enet.h
+++ linux-2.6.10/drivers/net/fs_enet/fs_enet.h
@@ -34,11 +34,12 @@ struct bb_info {
 };
 
 
+#ifdef CONFIG_CPM1
 struct fec_info {
         fec_t*  fecp;
 	u32     mii_speed;
 };
-						
+#endif						
 
 /* hw driver ops */
 struct fs_ops {
@@ -205,6 +206,8 @@ void fs_mii_link_status_change_check(str
 void fs_init_bds(struct net_device *dev);
 void fs_cleanup_bds(struct net_device *dev);
 
+int fs_enet_mdio_fec_init(void);
+
 /***************************************************************************/
 
 #define DRV_MODULE_NAME		"fs_enet"
Index: linux-2.6.10/drivers/net/fs_enet/mac-fcc.c
===================================================================
--- linux-2.6.10.orig/drivers/net/fs_enet/mac-fcc.c
+++ linux-2.6.10/drivers/net/fs_enet/mac-fcc.c
@@ -84,6 +84,10 @@
 #define mk_mii_end		0
 
 #define MAX_CR_CMD_LOOPS	10000
+#define FCC_NAPI_RX_EVENT_MSK	(FCC_ENET_RXF | FCC_ENET_RXB)
+#define FCC_RX_EVENT		(FCC_ENET_RXF)
+#define FCC_TX_EVENT		(FCC_ENET_TXB)
+#define FCC_ERR_EVENT_MSK	(FCC_ENET_TXE | FCC_ENET_BSY)
 
 static inline int fcc_cr_cmd(struct fs_enet_private *fep, u32 mcn, u32 op)
 {
@@ -111,7 +115,7 @@ static inline int fcc_cr_cmd(struct fs_e
 	return 0;
 }
 
-static int do_pd_setup(struct fs_enet_private *fep)
+int do_pd_setup(struct fs_enet_private *fep)
 {
 	struct platform_device *pdev = to_platform_device(fep->dev);
 	struct resource *r;
@@ -121,30 +125,26 @@ static int do_pd_setup(struct fs_enet_pr
 
 	/* Attach the memory for the FCC Parameter RAM */
 	r = platform_get_resource_byname(pdev, IORESOURCE_MEM, "fcc_pram");
-	fep->fcc.ep = (void *)r->start;
-
+	fep->fcc.ep = (void *)ioremap(r->start, r->end - r->start + 1);
 	if (fep->fcc.ep == NULL)
 		return -EINVAL;
 
 	r = platform_get_resource_byname(pdev, IORESOURCE_MEM, "fcc_regs");
-	fep->fcc.fccp = (void *)r->start;
-
+	fep->fcc.fccp = (void *)ioremap(r->start, r->end - r->start + 1);
 	if (fep->fcc.fccp == NULL)
 		return -EINVAL;
 
 	fep->fcc.fcccp = (void *)fep->fpi->fcc_regs_c;
-
 	if (fep->fcc.fcccp == NULL)
 		return -EINVAL;
 
+	fep->fcc.mem = (void *)fep->fpi->mem_offset;
+	if (fep->fcc.mem == NULL)
+		return -EINVAL;
+
 	return 0;
 }
 
-#define FCC_NAPI_RX_EVENT_MSK	(FCC_ENET_RXF | FCC_ENET_RXB)
-#define FCC_RX_EVENT		(FCC_ENET_RXF)
-#define FCC_TX_EVENT		(FCC_ENET_TXB)
-#define FCC_ERR_EVENT_MSK	(FCC_ENET_TXE | FCC_ENET_BSY)
-
 static int setup_data(struct net_device *dev)
 {
 	struct fs_enet_private *fep = netdev_priv(dev);
@@ -154,8 +154,6 @@ static int setup_data(struct net_device 
 	if ((unsigned int)fep->fcc.idx >= 3)	/* max 3 FCCs */
 		return -EINVAL;
 
-	fep->fcc.mem = (void *)fpi->mem_offset;
-
 	if (do_pd_setup(fep) != 0)
 		return -EINVAL;
 
@@ -278,7 +276,8 @@ static void restart(struct net_device *d
 	u16 mem_addr;
 	const unsigned char *mac;
 	int i;
-
+	
+	/* disable ethernet */
 	C32(fccp, fcc_gfmr, FCC_GFMR_ENR | FCC_GFMR_ENT);
 
 	/* clear everything (slow & steady does it) */
Index: linux-2.6.10/include/asm-ppc/mpc85xx.h
===================================================================
--- linux-2.6.10.orig/include/asm-ppc/mpc85xx.h
+++ linux-2.6.10/include/asm-ppc/mpc85xx.h
@@ -137,6 +137,7 @@ enum ppc_sys_devices {
 	MPC85xx_eTSEC4,
 	MPC85xx_IIC2,
 	MPC85xx_MDIO,
+	MPC85xx_MDIO_BB,
 };
 
 /* Internal interrupts are all Level Sensitive, and Positive Polarity */
@@ -190,6 +191,123 @@ enum ppc_sys_devices {
 	(IRQ_SENSE_LEVEL | IRQ_POLARITY_POSITIVE),	/* Internal 46 */	\
 	(IRQ_SENSE_LEVEL | IRQ_POLARITY_POSITIVE)	/* Internal 47 */
 
+/* FCC1 Clock Source Configuration.  These can be 
+ * redefined in the board specific file. 
+ *    Can only choose from CLK9-12 */ 
+
+#define F1_RXCLK       12 
+#define F1_TXCLK       11 
+
+/* FCC2 Clock Source Configuration.  These can be 
+ * redefined in the board specific file. 
+ *    Can only choose from CLK13-16 */ 
+#define F2_RXCLK       13 
+#define F2_TXCLK       14 
+
+/* FCC3 Clock Source Configuration.  These can be 
+ * redefined in the board specific file. 
+ *    Can only choose from CLK13-16 */ 
+#define F3_RXCLK       15 
+#define F3_TXCLK       16 
+
+/* MDIO and MDCK settings. These can be redefined in the 
+ * board specific file.*/ 
+#define PC_MDIO         0x00400000U 
+#define PC_MDCK         0x00200000U 
+
+/* Automatically generates register configurations */ 
+#define PC_CLK(x)      ((uint)(1<<(x-1)))      /* FCC CLK I/O ports */ 
+
+#define CMXFCR_RF1CS(x)        ((uint)((x-5)<<27))     /* FCC1 Receive Clock Source */ 
+#define CMXFCR_TF1CS(x)        ((uint)((x-5)<<24))     /* FCC1 Transmit Clock Source */ 
+#define CMXFCR_RF2CS(x)        ((uint)((x-9)<<19))     /* FCC2 Receive Clock Source */ 
+#define CMXFCR_TF2CS(x) ((uint)((x-9)<<16))    /* FCC2 Transmit Clock Source */ 
+#define CMXFCR_RF3CS(x)        ((uint)((x-9)<<11))     /* FCC3 Receive Clock Source */ 
+#define CMXFCR_TF3CS(x) ((uint)((x-9)<<8))     /* FCC3 Transmit Clock Source */ 
+
+#define PC_F1RXCLK     PC_CLK(F1_RXCLK) 
+#define PC_F1TXCLK     PC_CLK(F1_TXCLK) 
+#define CMX1_CLK_ROUTE (CMXFCR_RF1CS(F1_RXCLK) | CMXFCR_TF1CS(F1_TXCLK)) 
+#define CMX1_CLK_MASK  ((uint)0xff000000) 
+
+#define PC_F2RXCLK     PC_CLK(F2_RXCLK) 
+#define PC_F2TXCLK     PC_CLK(F2_TXCLK) 
+#define CMX2_CLK_ROUTE (CMXFCR_RF2CS(F2_RXCLK) | CMXFCR_TF2CS(F2_TXCLK)) 
+#define CMX2_CLK_MASK  ((uint)0x00ff0000) 
+
+#define PC_F3RXCLK     PC_CLK(F3_RXCLK) 
+#define PC_F3TXCLK     PC_CLK(F3_TXCLK) 
+#define CMX3_CLK_ROUTE (CMXFCR_RF3CS(F3_RXCLK) | CMXFCR_TF3CS(F3_TXCLK)) 
+#define CMX3_CLK_MASK  ((uint)0x0000ff00) 
+
+/* Some board-specific defines here... Temporary I hope 
+ * -vb*/ 
+#define CPMUX_CLK_MASK (CMX3_CLK_MASK | CMX2_CLK_MASK) 
+#define CPMUX_CLK_ROUTE (CMX3_CLK_ROUTE | CMX2_CLK_ROUTE) 
+ 
+#define CLK_TRX (PC_F3TXCLK | PC_F3RXCLK | PC_F2TXCLK | PC_F2RXCLK) 
+
+ 
+/* I/O Pin assignment for FCC1.  I don't yet know the 
+ * best way to do this, 
+ * but there is little variation among the choices. */ 
+#define PA1_COL                0x00000001U 
+#define PA1_CRS                0x00000002U 
+#define PA1_TXER       0x00000004U 
+#define PA1_TXEN       0x00000008U 
+#define PA1_RXDV       0x00000010U 
+#define PA1_RXER       0x00000020U 
+#define PA1_TXDAT      0x00003c00U 
+#define PA1_RXDAT      0x0003c000U 
+#define PA1_PSORA0     (PA1_RXDAT | PA1_TXDAT) 
+#define PA1_PSORA1     (PA1_COL | PA1_CRS | PA1_TXER | PA1_TXEN | \
+			PA1_RXDV | PA1_RXER) 
+#define PA1_DIRA0      (PA1_RXDAT | PA1_CRS | PA1_COL | PA1_RXER | PA1_RXDV) 
+#define PA1_DIRA1      (PA1_TXDAT | PA1_TXEN | PA1_TXER) 
+
+/* I/O Pin assignment for FCC2.  I don't yet know the best way to 
+ * do this, 
+ *  * but there is little variation among the choices. 
+ *   */ 
+#define PB2_TXER	0x00000001U 
+#define PB2_RXDV       0x00000002U 
+#define PB2_TXEN       0x00000004U 
+#define PB2_RXER       0x00000008U 
+#define PB2_COL		0x00000010U 
+#define PB2_CRS                0x00000020U 
+#define PB2_TXDAT      0x000003c0U 
+#define PB2_RXDAT      0x00003c00U 
+#define PB2_PSORB0     (PB2_RXDAT | PB2_TXDAT | PB2_CRS | PB2_COL | \
+			PB2_RXER | PB2_RXDV | PB2_TXER) 
+#define PB2_PSORB1     (PB2_TXEN) 
+#define PB2_DIRB0      (PB2_RXDAT | PB2_CRS | PB2_COL | PB2_RXER | PB2_RXDV) 
+#define PB2_DIRB1      (PB2_TXDAT | PB2_TXEN | PB2_TXER) 
+
+/* I/O Pin assignment for FCC3.  I don't yet know the best way to 
+ * do this, 
+ * but there is little variation among the choices. 
+ */ 
+#define PB3_RXDV       0x00004000U 
+#define PB3_RXER       0x00008000U 
+#define PB3_TXER       0x00010000U 
+#define PB3_TXEN       0x00020000U 
+#define PB3_COL                0x00040000U 
+#define PB3_CRS                0x00080000U 
+#define PB3_TXDAT      0x0e000000U 
+#define PC3_TXDAT      0x00000010U 
+#define PB3_RXDAT      0x00f00000U 
+#define PB3_PSORB0     (PB3_RXDAT | PB3_TXDAT | PB3_CRS | PB3_COL | \
+			PB3_RXER | PB3_RXDV | PB3_TXER | PB3_TXEN) 
+#define PB3_PSORB1     0 
+#define PB3_DIRB0      (PB3_RXDAT | PB3_CRS | PB3_COL | PB3_RXER | PB3_RXDV) 
+#define PB3_DIRB1      (PB3_TXDAT | PB3_TXEN | PB3_TXER) 
+#define PC3_DIRC1      (PC3_TXDAT) 
+
+#define FCC_MEM_OFFSET(x) (CPM_FCC_SPECIAL_BASE + (x*128)) 
+#define FCC1_MEM_OFFSET FCC_MEM_OFFSET(0) 
+#define FCC2_MEM_OFFSET FCC_MEM_OFFSET(1) 
+#define FCC3_MEM_OFFSET FCC_MEM_OFFSET(2) 
+
 #endif /* CONFIG_85xx */
 #endif /* __ASM_MPC85xx_H__ */
 #endif /* __KERNEL__ */
Index: linux-2.6.10/drivers/net/fs_enet/mii-fec.c
===================================================================
--- linux-2.6.10.orig/drivers/net/fs_enet/mii-fec.c
+++ linux-2.6.10/drivers/net/fs_enet/mii-fec.c
@@ -34,7 +34,6 @@
 #include <linux/mii.h>
 #include <linux/ethtool.h>
 #include <linux/bitops.h>
-#include <linux/platform_device.h>
 
 #include <asm/pgtable.h>
 #include <asm/irq.h>
@@ -84,8 +83,7 @@ static int fs_mii_fec_init(struct fec_in
 
 	r = platform_get_resource_byname(fec_pdev, IORESOURCE_MEM, "regs");
 	
-/*	fec->fecp = fecp = (void*)r->start;*/
-	fec->fecp = fecp = ioremap((void*)r->start,sizeof(fec_t));
+	fec->fecp = fecp = ioremap(r->start,sizeof(fec_t));
 	fec->mii_speed = fmpi->mii_speed;
 	
 	setbits32(&fecp->fec_r_cntrl, FEC_RCNTRL_MII_MODE);	/* MII enable */
Index: linux-2.6.10/mvl_patches/pro-0570.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0570.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2006 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(570);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

