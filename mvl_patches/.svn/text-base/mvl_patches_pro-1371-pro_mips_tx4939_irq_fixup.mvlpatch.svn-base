#! /usr/bin/env bash
# Patch: -pro_mips_tx4939_irq_fixup
# Date: Fri Oct 26 15:00:28 2007
# MR: 20899
# Source: Toshiba Inc
# Type: Defect fix
# Disposition: local
# Description:
# In the operation routine of the IRDM(Interrupt Detection Mode) register of 
# TX4939-IRC(register that set the method of detecting interrupt), the 
# address calculation was wrong, and IRLVL(Interrupt Level Register) 
# had been operated.  
# 
# Moreover, in processing that interrupt prohibition/permits RBTX4939-IOC, 
# "INT Factor 1 Register" that showed the interrupt factor was operated.
# But "INT Enable Register" that permitted interrupt should be operated . 
# 
# Signed-off-by: Armin Kuster <AKuster@mvista.com>
# Signed-off-by: Ryosuke Hisanaga <rhisanaga@mvista.com>
# 
#  arch/mips/tx4939/common/irq.c   |   42 ++++++++++++++++++++++------------------
#  arch/mips/tx4939/rbtx4939/irq.c |   10 ++++-----
#  2 files changed, 29 insertions(+), 23 deletions(-)
# 

PATCHNUM=1371
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
MR: 20899
Source: Toshiba Inc
Type: Defect fix
Disposition: local
Description:
In the operation routine of the IRDM(Interrupt Detection Mode) register of 
TX4939-IRC(register that set the method of detecting interrupt), the 
address calculation was wrong, and IRLVL(Interrupt Level Register) 
had been operated.  

Moreover, in processing that interrupt prohibition/permits RBTX4939-IOC, 
"INT Factor 1 Register" that showed the interrupt factor was operated.
But "INT Enable Register" that permitted interrupt should be operated . 

Signed-off-by: Armin Kuster <AKuster@mvista.com>
Signed-off-by: Ryosuke Hisanaga <rhisanaga@mvista.com>

 arch/mips/tx4939/common/irq.c   |   42 ++++++++++++++++++++++------------------
 arch/mips/tx4939/rbtx4939/irq.c |   10 ++++-----
 mvl_patches/pro-1371.c          |   16 +++++++++++++++
 3 files changed, 45 insertions(+), 23 deletions(-)

Index: linux-2.6.10/arch/mips/tx4939/common/irq.c
===================================================================
--- linux-2.6.10.orig/arch/mips/tx4939/common/irq.c
+++ linux-2.6.10/arch/mips/tx4939/common/irq.c
@@ -290,26 +290,31 @@ static void __init tx4939_irq_init(void)
 	set_except_vector(0, tx4939_irq_handler);
 }
 
-void tx4939_irc_set_irdn(unsigned int ic, u32 isc)
+void tx4939_irc_set_irdm(unsigned int ic, u32 isc)
 {
-	volatile u32 *irdn;
+	volatile u32 *irdm;
 	unsigned int offset;
+	unsigned long l;
 
-	ic--;
-	irdn = (volatile u32 *)TX4939_IRC_REG + 0x10;
-	offset = (ic & 0x7) << 1;
-
-	if (ic & 0x8)
-		irdn += 0x8;
-
-	if (ic & 0x10)
-		offset += 0x10;
-
-	if (ic & 0x20)
-		irdn += 0xb8;
-
-	*irdn &= ~(0x3 << offset);
-	*irdn |= (isc & 0x3) << offset;
+	if (ic & 0x20) {
+		if (ic & 0x8)
+			irdm = &tx4939_ircptr->dm3;
+		else
+			irdm = &tx4939_ircptr->dm2;
+	} else {
+		ic--;
+		if (ic & 0x8)
+			irdm = &tx4939_ircptr->dm1;
+		else
+			irdm = &tx4939_ircptr->dm0;
+	}
+
+	offset = (ic & 0x10) + ((ic & 0x7) << 1);
+
+	l = reg_rd32(irdm);
+	l &= ~(0x3 << offset);
+	l |= (isc & 0x3) << offset;
+	reg_wr32(irdm, l);
 }
 
 /**
@@ -361,5 +366,6 @@ void mips_spurious_interrupt(struct pt_r
 	printk(KERN_WARNING "interrupt pending1 register %x\n",
 	       reg_rd32(&tx4939_ircptr->pnd1));
 	printk(KERN_WARNING "status %lx cause %lx\n", status, cause);
-	printk(KERN_WARNING "epc %lx badvaddr %lx \n", regs->cp0_epc, regs->cp0_badvaddr);
+	printk(KERN_WARNING "epc %lx badvaddr %lx \n", regs->cp0_epc,
+		regs->cp0_badvaddr);
 }
Index: linux-2.6.10/arch/mips/tx4939/rbtx4939/irq.c
===================================================================
--- linux-2.6.10.orig/arch/mips/tx4939/rbtx4939/irq.c
+++ linux-2.6.10/arch/mips/tx4939/rbtx4939/irq.c
@@ -20,7 +20,7 @@
 #include <asm/tx4939/tx4939.h>
 #include <asm/tx4939/rbtx4939.h>
 
-extern void tx4939_irc_set_irdn(unsigned int ic, u32 isc);
+extern void tx4939_irc_set_irdm(unsigned int ic, u32 isc);
 
 static unsigned int rbtx4939_irq_ioc_startup(unsigned int irq);
 static void rbtx4939_irq_ioc_shutdown(unsigned int irq);
@@ -74,14 +74,14 @@ static void rbtx4939_irq_ioc_mask_modify
 	u8 c;
 	unsigned int offset = (irq - RBTX4939_IRQ_IOC_BEG);
 
-	c = reg_rd08(rbtx4939_intf1_ptr);
+	c = reg_rd08(rbtx4939_inte_ptr);
 	reg_wr08(rbtx4939_intf1_ptr, c & ~(0x1 << offset));
-	c = reg_rd08(rbtx4939_intf1_ptr);
+	c = reg_rd08(rbtx4939_inte_ptr);
 	reg_wr08(rbtx4939_intf1_ptr, c | (bit << offset));
 
 	/* prevent spurious interrupt */
 	__asm__ __volatile__("sync\n\t");
-	reg_rd08(rbtx4939_intf1_ptr);
+	reg_rd08(rbtx4939_inte_ptr);
 }
 
 /**
@@ -157,7 +157,7 @@ void __init rbtx4939_irq_init(void)
 	/* clear SoftInt interrupts */
 
 	/* Onboard 10M Ether: High Active */
-	tx4939_irc_set_irdn(RBTX4939_IRQ_DEBUG_ETHER - TX4939_IRQ_IRC_BEG,
+	tx4939_irc_set_irdm(RBTX4939_IRQ_DEBUG_ETHER - TX4939_IRQ_IRC_BEG,
 			    TX4939_IRDM_LOW_LEVEL);
 
 	rbtx4939_irq_ioc_init();
Index: linux-2.6.10/mvl_patches/pro-1371.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1371.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1371);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

