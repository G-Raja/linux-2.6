#! /usr/bin/env bash
# Patch: -common_pxafb_panning
# Date: Fri Dec  7 11:51:22 2007
# Source: MontaVista Software, Inc.
# MR: 15187
# Type: Enhancement
# Disposition: needs submitting to linux-arm-kernel
# Signed-off-by: Steve Longerbeam <stevel@mvista.com>
# Keywords: PXA, framebuffer
# Description:
#   Pxafb support for setting virtual screen, and panning in both axes.
# 

PATCHNUM=1425
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 15187
Type: Enhancement
Disposition: needs submitting to linux-arm-kernel
Signed-off-by: Steve Longerbeam <stevel@mvista.com>
Keywords: PXA, framebuffer
Description:
  Pxafb support for setting virtual screen, and panning in both axes.

Index: linux-2.6.10/drivers/video/pxafb.c
===================================================================
--- linux-2.6.10.orig/drivers/video/pxafb.c
+++ linux-2.6.10/drivers/video/pxafb.c
@@ -281,7 +281,6 @@ static void enable_overlays(struct pxafb
 
 static inline void pxafb_schedule_work(struct pxafb_info *fbi, u_int state)
 {
-#if 0
 	unsigned long flags;
 
 	/*
@@ -305,11 +304,6 @@ static inline void pxafb_schedule_work(s
 		schedule_work(&fbi->task);
 	}
 	local_irq_restore(flags);
-#else
-		printk("%s:%d  %s compiled with out blanking support\n",
-		       __FILE__, __LINE__, __FUNCTION__);
-#endif
-
 }
 
 static inline u_int chan_to_field(u_int chan, struct fb_bitfield *bf)
@@ -845,6 +839,13 @@ static int pxafb_ioctl(struct inode *ino
 	return 0;
 }
 
+static int pxafb_pan_display(struct fb_var_screeninfo *var,
+			     struct fb_info *info)
+{
+	struct pxafb_info *fbi = (struct pxafb_info *)info;
+	return pxafb_activate_var(var, fbi);
+}
+
 static struct fb_ops pxafb_ops = {
 	.owner		= THIS_MODULE,
 	.fb_check_var	= pxafb_check_var,
@@ -855,6 +856,7 @@ static struct fb_ops pxafb_ops = {
 	.fb_imageblit	= cfb_imageblit,
 	.fb_blank	= pxafb_blank,
 	.fb_ioctl       = pxafb_ioctl,
+	.fb_pan_display = pxafb_pan_display,
 	.fb_cursor	= soft_cursor,
 };
 
@@ -1050,7 +1052,7 @@ static int pxafb_activate_var(struct fb_
 {
 	struct pxafb_lcd_reg new_regs;
 	unsigned long palette_mem_size;
-	u_long flags;
+	u_long flags, fsaddr_offset;
 	u_int lines_per_panel, pcd;
 
 	DPRINTK("Configuring PXA LCD\n");
@@ -1154,7 +1156,7 @@ static int pxafb_activate_var(struct fb_
 	    );
 
 	new_regs.lccr1 =
-		LCCR1_DisWdth(var->xres) +
+		LCCR1_DisWdth(var->xres_virtual) +
 		LCCR1_HorSnchWdth(var->hsync_len) +
 		LCCR1_BegLnDel(var->left_margin) +
 		LCCR1_EndLnDel(var->right_margin);
@@ -1203,14 +1205,18 @@ static int pxafb_activate_var(struct fb_
 
 #define BYTES_PER_PANEL (lines_per_panel * fbi->fb.fix.line_length)
 
+	fsaddr_offset = var->yoffset * var->xres_virtual + var->xoffset;
+	fsaddr_offset *= (var->bits_per_pixel / 8);
+
 	/* populate descriptors */
 	fbi->dmadesc_fblow_cpu->fdadr = fbi->dmadesc_fblow_dma;
-	fbi->dmadesc_fblow_cpu->fsadr = fbi->screen_dma + BYTES_PER_PANEL;
+	fbi->dmadesc_fblow_cpu->fsadr =
+		fbi->screen_dma + BYTES_PER_PANEL + fsaddr_offset;
 	fbi->dmadesc_fblow_cpu->fidr  = 0;
 	fbi->dmadesc_fblow_cpu->ldcmd = BYTES_PER_PANEL | LDCMD_EOFINT;
 	fbi->fdadr1 = fbi->dmadesc_fblow_dma; /* only used in dual-panel mode */
 
-	fbi->dmadesc_fbhigh_cpu->fsadr = fbi->screen_dma;
+	fbi->dmadesc_fbhigh_cpu->fsadr = fbi->screen_dma + fsaddr_offset;
 	fbi->dmadesc_fbhigh_cpu->fidr = 0;
 	fbi->dmadesc_fbhigh_cpu->ldcmd = BYTES_PER_PANEL | LDCMD_EOFINT;
 
@@ -2375,9 +2381,7 @@ static void pxafb_init_unchangeable_vars
 	struct pxafb_mach_info *inf = dev->platform_data;
 
 	var->xres = inf->xres;
-	var->xres_virtual = inf->xres;
 	var->yres = inf->yres;
-	var->yres_virtual = inf->yres;
 	var->bits_per_pixel = inf->bpp;
 	var->pixclock = inf->pixclock;
 	var->hsync_len = inf->hsync_len;
@@ -2408,8 +2412,8 @@ static struct pxafb_info *__init pxafb_i
 
 	fbi->fb.fix.type	= FB_TYPE_PACKED_PIXELS;
 	fbi->fb.fix.type_aux	= 0;
-	fbi->fb.fix.xpanstep	= 0;
-	fbi->fb.fix.ypanstep	= 0;
+	fbi->fb.fix.xpanstep	= 1;
+	fbi->fb.fix.ypanstep	= 1;
 	fbi->fb.fix.ywrapstep	= 0;
 	fbi->fb.fix.accel	= FB_ACCEL_NONE;
 
@@ -2419,6 +2423,8 @@ static struct pxafb_info *__init pxafb_i
 	fbi->fb.var.width	= -1;
 	fbi->fb.var.accel_flags	= 0;
 	fbi->fb.var.vmode	= FB_VMODE_NONINTERLACED;
+	fbi->fb.var.xres_virtual= inf->xres;
+	fbi->fb.var.yres_virtual= inf->yres;
 
 	fbi->fb.fbops		= &pxafb_ops;
 	fbi->fb.flags		= FBINFO_DEFAULT;
Index: linux-2.6.10/mvl_patches/pro-1425.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1425.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1425);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

