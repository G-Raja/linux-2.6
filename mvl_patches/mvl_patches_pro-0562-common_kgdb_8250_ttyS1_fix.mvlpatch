#! /usr/bin/env bash
# Patch: -common_kgdb_8250_ttyS1_fix
# Date: Fri May 26 10:17:26 2006
# Source: MontaVista
# MR: 17435
# Type: Defect Fix
# Disposition: Merged from http://kgdb.linsyssoft.com
# Signed-off-by: Valentine Barshak <vbarshak@ru.mvista.com>
# Description:
#   The patch fixes some issues found in kgdb working 
#   over any serial device other than ttyS0.
#   Checking the "kgdb8250_ttyS" variable to determine the port->line used by
#   kgdb is not the best choice, since kgdb8250_ttyS is always 0
#   if CONFIG_KGDB_SIMPLE_SERIAL is not defined. And port->line is not always
#   valid, since the structure used in the uart_8250_register_port() function
#   is just a template containing the base address and irq number.
#   The patch removes all the "kgdb8250_ttyS" checks and adds 
#   serial8250_unregister_by_port() function to properly remove the serial
#   device taken by kgdb at the late init stage.
#   The code has been ported from the community KGDB patch v 2.3.
# 

PATCHNUM=562
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista
MR: 17435
Type: Defect Fix
Disposition: Merged from http://kgdb.linsyssoft.com
Signed-off-by: Valentine Barshak <vbarshak@ru.mvista.com>
Description:
  The patch fixes some issues found in kgdb working 
  over any serial device other than ttyS0.
  Checking the "kgdb8250_ttyS" variable to determine the port->line used by
  kgdb is not the best choice, since kgdb8250_ttyS is always 0
  if CONFIG_KGDB_SIMPLE_SERIAL is not defined. And port->line is not always
  valid, since the structure used in the uart_8250_register_port() function
  is just a template containing the base address and irq number.
  The patch removes all the "kgdb8250_ttyS" checks and adds 
  serial8250_unregister_by_port() function to properly remove the serial
  device taken by kgdb at the late init stage.
  The code has been ported from the community KGDB patch v 2.3.

Index: linux-2.6.10/drivers/serial/8250.c
===================================================================
--- linux-2.6.10.orig/drivers/serial/8250.c
+++ linux-2.6.10/drivers/serial/8250.c
@@ -1363,9 +1363,6 @@ static int serial8250_startup(struct uar
 	unsigned long flags;
 	int retval;
 
-	if (up->port.line == kgdb8250_ttyS)
-		return -EBUSY;
-
 	up->capabilities = uart_config[up->port.type].flags;
 	up->mcr = 0;
 
@@ -2014,9 +2011,6 @@ serial8250_register_ports(struct uart_dr
 	for (i = 0; i < UART_NR; i++) {
 		struct uart_8250_port *up = &serial8250_ports[i];
 
-		if (up->port.line == kgdb8250_ttyS)
-			continue;
-
 		up->port.dev = dev;
 		uart_add_one_port(drv, &up->port);
 	}
@@ -2425,10 +2419,6 @@ static struct uart_8250_port *uart_8250_
 	if (port->uartclk == 0)
 		return ERR_PTR(-EINVAL);
 
-	/* Avoid re-registering platform based ports if KGDB active */
-	if (port->line == kgdb8250_ttyS)
-		return ERR_PTR(-EBUSY);
-
 	down(&serial_sem);
 
 	uart = serial8250_find_match_or_unused(port);
@@ -2508,29 +2498,26 @@ void serial8250_unregister_port(int line
 EXPORT_SYMBOL(serial8250_unregister_port);
 
 /**
- *	serial8250_release_irq - remove a 16x50 serial port at runtime based
- *	on IRQ
- *	@irq: IRQ number
+ *	serial8250_unregister_by_port - remove a 16x50 serial port
+ *	at runtime.
+ *	@port: A &struct uart_port that describes the port to remove.
  *
  *	Remove one serial port.  This may not be called from interrupt
- *	context.  This is called when the caller know the IRQ of the
- *	port they want, but not where it is in our table.  This allows
- *	for one port, based on IRQ, to be permanently released from us.
+ *	context.  We hand the port back to the our control.
  */
-
-int serial8250_release_irq(int irq)
+void serial8250_unregister_by_port(struct uart_port *port)
 {
-        struct uart_8250_port *up;
-	int ttyS;
+	struct uart_8250_port *uart;
 
-	for (ttyS = 0; ttyS < UART_NR; ttyS++){
-		up =  &serial8250_ports[ttyS];
-		if (up->port.irq == irq && (irq_lists + irq)->head 
-				&& up->port.line == kgdb8250_ttyS)
-			serial8250_unregister_port(up->port.line);
-        }
-	return 0;
+	down(&serial_sem);
+	uart = serial8250_find_match_or_unused(port);
+	up(&serial_sem);
+
+	if (uart)
+		serial8250_unregister_port(uart->port.line);
 }
+EXPORT_SYMBOL(serial8250_unregister_by_port);
+
 
 static int __init serial8250_init(void)
 {
Index: linux-2.6.10/drivers/serial/8250.h
===================================================================
--- linux-2.6.10.orig/drivers/serial/8250.h
+++ linux-2.6.10/drivers/serial/8250.h
@@ -19,6 +19,7 @@
 
 int serial8250_register_port(struct uart_port *);
 void serial8250_unregister_port(int line);
+void serial8250_unregister_by_port(struct uart_port *port);
 void serial8250_suspend_port(int line);
 void serial8250_resume_port(int line);
 
Index: linux-2.6.10/drivers/serial/kgdb_8250.c
===================================================================
--- linux-2.6.10.orig/drivers/serial/kgdb_8250.c
+++ linux-2.6.10/drivers/serial/kgdb_8250.c
@@ -407,23 +407,30 @@ kgdb_init_io(void)
 	if (kgdb8250_local_init())
 		return -1;
 
-#ifdef CONFIG_SERIAL_8250
-	if (serial8250_release_irq(KGDB8250_IRQ))
-		return -1;
-#endif
-
 	if (kgdb8250_init() == -1)
 		return -1;
 
 	return 0;
 }
 
+
 /*
- * Hookup our IRQ line.  We will already have been initialized at
- * this point.
+ * Hookup our IRQ line now that it is safe to do so, after we grab any
+ * memory regions we might need to.  If we haven't been initialized yet,
+ * go ahead and copy the old_rs_table in.
  */
-static void __init kgdb8250_hookup_irq(void)
-{
+static void __init kgdb8250_late_init(void) {
+
+	if (old_rs_table_copied == 0)
+		kgdb8250_copy_rs_table();
+
+#if defined(CONFIG_SERIAL_8250) || defined (CONFIG_SERIAL_8250_MODULE)
+	/* Take the port away from the main driver. */
+	serial8250_unregister_by_port(&CURRENTPORT);
+
+	/* Now reinit the port as the above has disabled things. */
+	kgdb8250_init();
+#endif
 	/* We may need to call request_mem_region() first. */
 	if (kgdb8250_needs_request_mem_region)
 		request_mem_region(CURRENTPORT.mapbase,
@@ -436,7 +443,7 @@ struct kgdb_io kgdb_io_ops = {
 	.read_char = kgdb_get_debug_char,
 	.write_char = kgdb_put_debug_char,
 	.init = kgdb_init_io,
-	.late_init = kgdb8250_hookup_irq,
+	.late_init = kgdb8250_late_init,
 };
 
 /**
Index: linux-2.6.10/mvl_patches/pro-0562.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0562.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2006 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(562);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

