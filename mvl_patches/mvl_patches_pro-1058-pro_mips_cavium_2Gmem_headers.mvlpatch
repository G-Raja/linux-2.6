#! /usr/bin/env bash
# Patch: -pro_mips_cavium_2Gmem_headers
# Date: Tue Feb  6 08:14:54 2007
# Source: MontaVista Software, Inc.
# MR:19143 
# Type: Defect Fix
# Disposition: needs submitting to community
# Signed-off-by: Yadviga Grigorieva<yadviga@ru.mvista.com>
# Description:
# Descriptions of new routines added into hal.h
# octeon_processor_cycle request added to kernel-entry-init.h
# License is changed and defines for new types of chip added in octeon-app-init.h 
# 

PATCHNUM=1058
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR:19143 
Type: Defect Fix
Disposition: needs submitting to community
Signed-off-by: Yadviga Grigorieva<yadviga@ru.mvista.com>
Description:
Descriptions of new routines added into hal.h
octeon_processor_cycle request added to kernel-entry-init.h
License is changed and defines for new types of chip added in octeon-app-init.h 

Index: linux-2.6.10/include/asm-mips/mach-cavium-octeon/hal.h
===================================================================
--- linux-2.6.10.orig/include/asm-mips/mach-cavium-octeon/hal.h
+++ linux-2.6.10/include/asm-mips/mach-cavium-octeon/hal.h
@@ -8,6 +8,14 @@
 #ifndef __CAVIUM_OCTEON_HAL_H
 #define __CAVIUM_OCTEON_HAL_H
 
+extern int octeon_is_pci_host(void);
+extern uint64_t octeon_get_clock_rate(void);
+extern const char *octeon_board_type_string(void);
+extern const char *octeon_get_pci_interrupts(void);
+extern int octeon_get_boot_coremask(void);
+extern int octeon_get_boot_num_arguments(void);
+extern const char *octeon_get_boot_argument(int arg);
+void octeon_hal_setup_reserved32(void);
 extern void *octeon_bootmem_alloc(uint64_t size, uint64_t alignment);
 extern void *octeon_bootmem_alloc_range(uint64_t size, uint64_t alignment,
 					uint64_t min_addr, uint64_t max_addr);
@@ -1058,6 +1066,6 @@ static inline void octeon_led_clear(int 
 
 void octeon_write_lcd(const char *s);
 void octeon_check_cpu_bist(void);
-void octeon_led_init(void);
+void octeon_hal_init(void);
 
 #endif
Index: linux-2.6.10/include/asm-mips/mach-cavium-octeon/kernel-entry-init.h
===================================================================
--- linux-2.6.10.orig/include/asm-mips/mach-cavium-octeon/kernel-entry-init.h
+++ linux-2.6.10/include/asm-mips/mach-cavium-octeon/kernel-entry-init.h
@@ -9,6 +9,7 @@
 #define __ASM_MACH_GENERIC_KERNEL_ENTRY_H
 
 
+#define CP0_CYCLE_COUNTER $9,6
 #define CP0_CVMCTL_REG $9,7
 #define CP0_PRID_REG $15,0
 
@@ -57,6 +58,10 @@ octeon_spin_wait_boot:
     LONG_L  t1, (t0)                    # Get the core id of the next to be booted
     bne t1, v0, octeon_spin_wait_boot   # Keep looping if it isn't me
     nop
+    PTR_LA  t0, octeon_processor_cycle  # Synchronize the cycle counters
+    LONG_L  t0, (t0)
+    daddu   t0, 122                     # Aproximately how many cycles we will be off
+    dmtc0   t0, CP0_CYCLE_COUNTER
     PTR_LA  t0, octeon_processor_gp     # Get my GP from the global variable
     LONG_L  gp, (t0)
     PTR_LA  t0, octeon_processor_sp     # Get my SP from the global variable
Index: linux-2.6.10/include/asm-mips/mach-cavium-octeon/octeon-app-init.h
===================================================================
--- linux-2.6.10.orig/include/asm-mips/mach-cavium-octeon/octeon-app-init.h
+++ linux-2.6.10/include/asm-mips/mach-cavium-octeon/octeon-app-init.h
@@ -1,31 +1,208 @@
-/*
- * This file is subject to the terms and conditions of the GNU General Public
- * License.  See the file "COPYING" in the main directory of this archive
- * for more details.
- *
- * Copyright (C) 2004 Cavium Networks
- */
+/*************************************************************************
+Copyright (c) 2005 Cavium Networks (support@cavium.com). All rights
+reserved.
+
+Redistribution and use in source and binary forms, with or without
+modification, are permitted provided that the following conditions are
+met:
+
+1. Redistributions of source code must retain the above copyright
+notice, this list of conditions and the following disclaimer.
+2. Redistributions in binary form must reproduce the above copyright
+notice, this list of conditions and the following disclaimer in the
+documentation and/or other materials provided with the distribution.
+3. Cavium Networks' name may not be used to endorse or promote products
+derived from this software without specific prior written permission.
+
+This Software, including technical data, may be subject to U.S. export
+control laws, including the U.S. Export Administration Act and its
+associated regulations, and may be subject to export or import
+regulations in other countries. You warrant that You will comply
+strictly in all respects with all such regulations and acknowledge that
+you have the responsibility to obtain licenses to export, re-export or
+import the Software.
+
+TO THE MAXIMUM EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS"
+AND WITH ALL FAULTS AND CAVIUM MAKES NO PROMISES, REPRESENTATIONS OR
+WARRANTIES, EITHER EXPRESS, IMPLIED, STATUTORY, OR OTHERWISE, WITH
+RESPECT TO THE SOFTWARE, INCLUDING ITS CONDITION, ITS CONFORMITY TO ANY
+REPRESENTATION OR DESCRIPTION, OR THE EXISTENCE OF ANY LATENT OR PATENT
+DEFECTS, AND CAVIUM SPECIFICALLY DISCLAIMS ALL IMPLIED (IF ANY)
+WARRANTIES OF TITLE, MERCHANTABILITY, NONINFRINGEMENT, FITNESS FOR A
+PARTICULAR PURPOSE, LACK OF VIRUSES, ACCURACY OR COMPLETENESS, QUIET
+ENJOYMENT, QUIET POSSESSION OR CORRESPONDENCE TO DESCRIPTION. THE ENTIRE
+RISK ARISING OUT OF USE OR PERFORMANCE OF THE SOFTWARE LIES WITH YOU.
+
+*************************************************************************/
+
 /**
- * @file octeon-app-init.h
+ * @file
+ * Header file for simple executive application initialization.  This defines
+ * part of the ABI between the bootloader and the application.
+ * $Id: pro_mips_cavium_2Gmem_headers.patch,v 1.1.2.1 2006/08/01 09:53:47 yadviga Exp $
  *
- * Structures used to pass information from the bootloader to the application.
  */
 
-#ifndef __OCTEON_APP_INIT_H__
-#define __OCTEON_APP_INIT_H__
+#ifndef __CVMX_APP_INIT_H__
+#define __CVMX_APP_INIT_H__
+
+#ifdef	__cplusplus
+extern "C" {
+#endif
+
+
+/* Current major and minor versions of the CVMX bootinfo block that is passed
+** from the bootloader to the application.  This is versioned so that applications
+** can properly handle multiple bootloader versions. */
+#define CVMX_BOOTINFO_MAJ_VER 1
+#define CVMX_BOOTINFO_MIN_VER 2
 
-/* Macro indicates that bootmem related structures are now in
-** cvmx-bootmem.h */
-#define OCTEON_APP_INIT_BOOTMEM_STRUCTS_MOVED
 
-typedef enum
+#if (CVMX_BOOTINFO_MAJ_VER == 1)
+#define CVMX_BOOTINFO_OCTEON_SERIAL_LEN 20
+/* This structure is populated by the bootloader.  For binary
+** compatibility the only changes that should be made are
+** adding members to the end of the structure, and the minor
+** version should be incremented at that time.
+** If an incompatible change is made, the major version
+** must be incremented, and the minor version should be reset
+** to 0.
+*/
+typedef struct
 {
-	BOOT_FLAG_INIT_CORE     = 1,  /*( If flag set, core should do app-wide init */
-				  /* only one core per app will have this flag set */
-    OCTEON_BL_FLAG_DEBUG    = 1 << 1,
-    OCTEON_BL_FLAG_NO_MAGIC = 1 << 2,
-} octeon_boot_descriptor_flag_t;
+    uint32_t major_version;
+    uint32_t minor_version;
 
+    uint64_t stack_top;
+    uint64_t heap_base;
+    uint64_t heap_end;
+    uint64_t desc_vaddr;
+
+    uint32_t exception_base_addr;
+    uint32_t stack_size;
+    uint32_t flags;
+    uint32_t core_mask;
+    uint32_t dram_size;  /**< DRAM size in megabytes */
+    uint32_t phy_mem_desc_addr;  /**< physical address of free memory descriptor block*/
+    uint32_t debugger_flags_base_addr;  /**< used to pass flags from app to debugger */
+    uint32_t eclock_hz;  /**< CPU clock speed, in hz */
+    uint32_t dclock_hz;  /**< DRAM clock speed, in hz */
+    uint32_t spi_clock_hz;  /**< SPI4 clock in hz */
+    uint16_t board_type;
+    uint8_t board_rev_major;
+    uint8_t board_rev_minor;
+    uint16_t chip_type;  /**< deprecated */
+    uint8_t chip_rev_major; /**< deprecated */
+    uint8_t chip_rev_minor; /**< deprecated */
+    char board_serial_number[CVMX_BOOTINFO_OCTEON_SERIAL_LEN];
+    uint8_t mac_addr_base[6];
+    uint8_t mac_addr_count;
+#if (CVMX_BOOTINFO_MIN_VER >= 1)
+    /* Several boards support compact flash on the Octeon boot bus.  The CF
+    ** memory spaces may be mapped to different addresses on different boards.
+    ** These are the physical addresses, so care must be taken to use the correct
+    ** XKPHYS/KSEG0 addressing depending on the application's ABI.
+    ** These values will be 0 if CF is not present */
+    uint64_t compact_flash_common_base_addr;
+    uint64_t compact_flash_attribute_base_addr;
+    /* Base address of the LED display (as on EBT3000 board)
+    ** This will be 0 if LED display not present. */
+    uint64_t led_display_base_addr;
+#endif
+#if (CVMX_BOOTINFO_MIN_VER >= 2)
+    uint32_t dfa_ref_clock_hz;  /**< DFA reference clock in hz (if applicable)*/
+    uint32_t config_flags;  /**< flags indicating various configuration options.  These flags supercede
+                            ** the 'flags' variable and should be used instead if available */
+#endif
+
+
+} cvmx_bootinfo_t;
+
+#define CVMX_BOOTINFO_CFG_FLAG_PCI_HOST     (1ull << 0)
+#define CVMX_BOOTINFO_CFG_FLAG_PCI_TARGET   (1ull << 1)
+#define CVMX_BOOTINFO_CFG_FLAG_DEBUG        (1ull << 2)
+#define CVMX_BOOTINFO_CFG_FLAG_NO_MAGIC     (1ull << 3)
+
+#endif /*   (CVMX_BOOTINFO_MAJ_VER == 1) */
+
+
+/* Type defines for board and chip types */
+enum cvmx_board_types_enum {
+    CVMX_BOARD_TYPE_NULL = 0,
+    CVMX_BOARD_TYPE_SIM,
+    CVMX_BOARD_TYPE_EBT3000,
+    CVMX_BOARD_TYPE_KODAMA,
+    CVMX_BOARD_TYPE_NIAGARA,
+    CVMX_BOARD_TYPE_NAO38,
+    CVMX_BOARD_TYPE_THUNDER,
+    CVMX_BOARD_TYPE_TRANTOR,
+    CVMX_BOARD_TYPE_EBH3000,
+    CVMX_BOARD_TYPE_EBH3100,
+    CVMX_BOARD_TYPE_HIKARI,
+    CVMX_BOARD_TYPE_MAX,
+};
+enum cvmx_chip_types_enum {
+    CVMX_CHIP_TYPE_NULL = 0,
+    CVMX_CHIP_SIM_TYPE_DEPRECATED = 1,
+    CVMX_CHIP_TYPE_OCTEON_SAMPLE = 2,
+    CVMX_CHIP_TYPE_MAX,
+};
+/* Defines for name change transition
+** These names ending in _TYPE are deprecated, and are planned to be removed
+** before the 1.3 SDK release */
+#define    CVMX_BOARD_NULL_TYPE       CVMX_BOARD_TYPE_NULL
+#define    CVMX_BOARD_SIM_TYPE        CVMX_BOARD_TYPE_SIM
+#define    CVMX_BOARD_EBT3000_TYPE    CVMX_BOARD_TYPE_EBT3000
+#define    CVMX_BOARD_KODAMA_TYPE     CVMX_BOARD_TYPE_KODAMA
+#define    CVMX_BOARD_NIAGARA_TYPE    CVMX_BOARD_TYPE_NIAGARA
+#define    CVMX_BOARD_NAO38_TYPE      CVMX_BOARD_TYPE_NAO38
+#define    CVMX_BOARD_THUNDER_TYPE    CVMX_BOARD_TYPE_THUNDER
+#define    CVMX_BOARD_TRANTOR_TYPE    CVMX_BOARD_TYPE_TRANTOR
+#define    CVMX_BOARD_EBH3000_TYPE    CVMX_BOARD_TYPE_EBH3000
+#define    CVMX_BOARD_EBH3100_TYPE    CVMX_BOARD_TYPE_EBH3100
+#define    CVMX_BOARD_MAX_TYPE        CVMX_BOARD_TYPE_MAX
+#define    CVMX_CHIP_OCTEON_SAMPLE_TYPE    CVMX_CHIP_TYPE_OCTEON_SAMPLE
+
+
+/* Functions to return string based on type */
+#define ENUM_BRD_TYPE_CASE(x)   case x: return(#x + 16);   /* Skip CVMX_BOARD_TYPE_ */
+static inline const char *cvmx_board_type_to_string(enum cvmx_board_types_enum type)
+{
+    switch (type)
+    {
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_NULL)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_SIM)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_EBT3000)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_KODAMA)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_NIAGARA)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_NAO38)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_THUNDER)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_TRANTOR)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_EBH3000)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_EBH3100)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_HIKARI)
+        ENUM_BRD_TYPE_CASE(CVMX_BOARD_TYPE_MAX)
+    }
+    return "Unsupported Board";
+}
+
+#define ENUM_CHIP_TYPE_CASE(x)   case x: return(#x + 15);   /* Skip CVMX_CHIP_TYPE */
+static inline const char *cvmx_chip_type_to_string(enum cvmx_chip_types_enum type)
+{
+    switch (type)
+    {
+        ENUM_CHIP_TYPE_CASE(CVMX_CHIP_TYPE_NULL)
+        ENUM_CHIP_TYPE_CASE(CVMX_CHIP_SIM_TYPE_DEPRECATED)
+        ENUM_CHIP_TYPE_CASE(CVMX_CHIP_TYPE_OCTEON_SAMPLE)
+        ENUM_CHIP_TYPE_CASE(CVMX_CHIP_TYPE_MAX)
+    }
+    return "Unsupported Chip";
+}
+
+
+/* Macro indicates that bootmem related structures are now in
+** cvmx-bootmem.h */
+#define OCTEON_APP_INIT_BOOTMEM_STRUCTS_MOVED
 #define OCTEON_CURRENT_DESC_VERSION     6
 #define OCTEON_ARGV_MAX_ARGS            (64)
 
@@ -88,4 +265,12 @@ typedef struct
 /* Debug flags bit definitions */
 #define DEBUG_FLAG_CORE_DONE    0x1
 
-#endif /* __OCTEON_APP_INIT_H__ */
+
+
+
+
+#ifdef	__cplusplus
+}
+#endif
+
+#endif /* __CVMX_APP_INIT_H__ */
Index: linux-2.6.10/mvl_patches/pro-1058.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1058.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1058);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

