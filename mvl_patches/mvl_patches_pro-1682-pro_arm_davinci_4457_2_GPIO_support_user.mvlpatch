#! /usr/bin/env bash
# Patch: -pro_arm_davinci_4457_2_GPIO_support_user
# Date: Mon Jan 21 23:06:30 2008
# Source: Vladimir Barinov <vbarinov@ru.mvista.com>
# MR: 25937
# Disposition: backport from 2.6.22-rc1
# Description:
# 
# author  Vladimir Barinov <vbarinov@ru.mvista.com>
#         Tue, 10 Jul 2007 12:03:43 +0000 (13:03 +0100)
# committer       Russell King <rmk+kernel@arm.linux.org.uk>
#         Thu, 12 Jul 2007 08:57:09 +0000 (09:57 +0100)
# commit  3d9edf09d4525dad95f98b31f31aa86b8071fab9
# tree    e923d8ff8c71e83ed4edf97f7f52a95c34da2683        tree | snapshot
# parent  3e062b07ada88edb9ffdd147e39c7df4b4418f64
# 
# Support GPIO driver for TI DaVinci SoC.  This patch updates all
# the clients to use the new gpio interface.  The content of this file
# came from pro_arm_davinci_4457-2-GPIO-support.patch
# 
# Signed-off-by: Vladimir Barinov <vbarino@ru.mvista.com>
# Signed-off-by: Steve Chen <schen@mvista.com>
# Acked-by: David Brownell <david-b@pacbell.net>
# Acked-by: Kevin Hilman <khilman@mvista.com>
# Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>
# 

PATCHNUM=1682
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: Vladimir Barinov <vbarinov@ru.mvista.com>
MR: 25937
Disposition: backport from 2.6.22-rc1
Description:

author  Vladimir Barinov <vbarinov@ru.mvista.com>
        Tue, 10 Jul 2007 12:03:43 +0000 (13:03 +0100)
committer       Russell King <rmk+kernel@arm.linux.org.uk>
        Thu, 12 Jul 2007 08:57:09 +0000 (09:57 +0100)
commit  3d9edf09d4525dad95f98b31f31aa86b8071fab9
tree    e923d8ff8c71e83ed4edf97f7f52a95c34da2683        tree | snapshot
parent  3e062b07ada88edb9ffdd147e39c7df4b4418f64

Support GPIO driver for TI DaVinci SoC.  This patch updates all
the clients to use the new gpio interface.  The content of this file
came from pro_arm_davinci_4457-2-GPIO-support.patch

Signed-off-by: Vladimir Barinov <vbarino@ru.mvista.com>
Signed-off-by: Steve Chen <schen@mvista.com>
Acked-by: David Brownell <david-b@pacbell.net>
Acked-by: Kevin Hilman <khilman@mvista.com>
Signed-off-by: Russell King <rmk+kernel@arm.linux.org.uk>

Index: linux-2.6.10/drivers/i2c/busses/i2c-davinci.c
===================================================================
--- linux-2.6.10.orig/drivers/i2c/busses/i2c-davinci.c
+++ linux-2.6.10/drivers/i2c/busses/i2c-davinci.c
@@ -51,7 +51,6 @@
 #include <linux/wait.h>
 #include <asm/arch/irqs.h>
 #include <asm/arch/cpu.h>
-#include <asm/arch/gio.h>
 #include <asm/mach-types.h>
 #include "i2c-davinci.h"
 
@@ -132,15 +131,17 @@ static void disable_i2c_pins(void)
 
 	if (cpu_is_davinci_dm644x()) {
 		/* I2C clock on GPIO43, I2C data on GPIO44 */
-		gpio_set_direction(44, GIO_DIR_INPUT);
-		gpio_set_direction(43, GIO_DIR_OUTPUT);
-		gpio_set_value(43, GIO_STATE_HIGH);
+		gpio_direction_input(44);
+		gpio_direction_output(43, 0);
+		gpio_set_value(43, 1);
+
 		PINMUX1 &= ~(1 << 7);
 	} else if (cpu_is_davinci_dm355()) {
 		/* I2C clock on GPIO14, I2C data on GPIO15 */
-		gpio_set_direction(15, GIO_DIR_INPUT);
-		gpio_set_direction(14, GIO_DIR_OUTPUT);
-		gpio_set_value(14, GIO_STATE_HIGH);
+		gpio_direction_input(15);
+		gpio_direction_output(14, 0);
+		gpio_set_value(14, 1);
+
 		PINMUX3 &= ~((1 << 20) | (1 << 19));
 	}
 
@@ -167,15 +168,15 @@ static void pulse_i2c_clock(void)
 {
 	if (cpu_is_davinci_dm644x()) {
 		/* I2C clock on GPIO43 */
-		gpio_set_value(43, GIO_STATE_LOW);
+		gpio_set_value(43, 0);
 		udelay(20);
-		gpio_set_value(43, GIO_STATE_HIGH);
+		gpio_set_value(43, 1);
 		udelay(20);
 	} else if (cpu_is_davinci_dm355()) {
 		/* I2C clock on GPIO14 */
-		gpio_set_value(14, GIO_STATE_LOW);
+		gpio_set_value(14, 0);
 		udelay(20);
-		gpio_set_value(14, GIO_STATE_HIGH);
+		gpio_set_value(14, 1);
 		udelay(20);
 	}
 }
Index: linux-2.6.10/arch/arm/mach-davinci/board-dm355-evm.c
===================================================================
--- linux-2.6.10.orig/arch/arm/mach-davinci/board-dm355-evm.c
+++ linux-2.6.10/arch/arm/mach-davinci/board-dm355-evm.c
@@ -34,7 +34,8 @@
 #include <asm/setup.h>
 #include <asm/io.h>
 #include <asm/mach-types.h>
-#include <asm/arch/gio.h>
+#include <asm/arch/gpio.h>
+#include <asm/arch/mux.h>
 
 #include <asm/mach/arch.h>
 #include <asm/mach/map.h>
@@ -311,15 +312,11 @@ static void setup_ethernet(void)
 	// GPIO1 is Ethernet interrupt GPIO
 	u32 gpio = 1; 
 
-	/* Enable interrupt generation from GPIO Bank 0 (GPIO0-GPIO15) */
-	gpio_interrupt_bank_enable(gpio);
-
 	/* Configure GPIO1 as an input */
-	gpio_set_direction(gpio, GIO_DIR_INPUT);
+	gpio_direction_input(gpio);
 
 	/* Configure GPIO1 to generate an interrupt on rising edge only */
-	gpio_interrupt_enable(gpio, TRIGGER_RISING_EDGE);
-	gpio_interrupt_disable(gpio, TRIGGER_FALLING_EDGE);
+	set_irq_type(gpio_to_irq(gpio), IRQT_RISING);
 }
 #else
 #define setup_ethernet()
@@ -503,9 +500,11 @@ davinci_map_io(void)
 	board_init ();
 }
 
+int __init davinci_gpio_irq_setup(void);
 
 static __init void davinci_init(void)
 {
+	davinci_gpio_irq_setup();
 	setup_ethernet();
 	setup_mmc();
 	setup_nand();
Index: linux-2.6.10/drivers/usb/musb/davinci.c
===================================================================
--- linux-2.6.10.orig/drivers/usb/musb/davinci.c
+++ linux-2.6.10/drivers/usb/musb/davinci.c
@@ -35,7 +35,7 @@
 #include <asm/arch/hardware.h>
 #include <asm/arch/memory.h>
 #include <asm/mach-types.h>
-#include <asm/arch/gio.h>
+#include <asm/arch/gpio.h>
 #include <asm/arch/cpu.h>
 #include <linux/usb.h>
 #include "../core/hcd.h"
@@ -328,11 +328,10 @@ int __init musb_platform_init(struct mus
 	evm_vbus_work.data = musb;
 #endif
 #ifdef CONFIG_ARCH_DAVINCI_DM355
-	gpio_set_direction(2, GIO_DIR_OUTPUT);
 #ifdef CONFIG_USB_MUSB_HDRC_HCD
-	__gpio_set(2, 1);
+	gpio_direction_output(2, 1);
 #else
-	__gpio_set(2, 0);
+	gpio_direction_output(2, 0);
 #endif
 	 __raw_writel( __raw_readl (IO_ADDRESS(DM355_DEEPSLEEP_REG)) &
 		0xfffffff0, IO_ADDRESS (DM355_DEEPSLEEP_REG));
Index: linux-2.6.10/mvl_patches/pro-1682.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1682.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2008 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1682);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

