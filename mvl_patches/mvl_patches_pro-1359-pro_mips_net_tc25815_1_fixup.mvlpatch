#! /usr/bin/env bash
# Patch: -pro_mips_net_tc25815_1_fixup
# Date: Mon Sep 10 15:16:44 2007
# MR: 20898
# Source: Toshiba Inc and MontaVista, Inc
# Type: Defect fix
# Disposition: local
# Description:
# Fixed type cast build warnings
# Fixed C99 build warnings 
# Changed  "BufferListExhausted" from a warning to a debug message if enabled. 
# 
# Signed-off-by: Armin Kuster <AKuster@mvista.com>
# Signed-off-by: Ryosuke Hisanaga <rhisanaga@mvista.com>
# 
#  drivers/net/tc35815_1.c |   39 ++++++++++++++++++++++++++-------------
#  1 file changed, 26 insertions(+), 13 deletions(-)
# 

PATCHNUM=1359
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
MR: 20898
Source: Toshiba Inc and MontaVista, Inc
Type: Defect fix
Disposition: local
Description:
Fixed type cast build warnings
Fixed C99 build warnings 
Changed  "BufferListExhausted" from a warning to a debug message if enabled. 

Signed-off-by: Armin Kuster <AKuster@mvista.com>
Signed-off-by: Ryosuke Hisanaga <rhisanaga@mvista.com>

 drivers/net/tc35815_1.c |   39 ++++++++++++++++++++++++++-------------
 mvl_patches/pro-1359.c  |   16 ++++++++++++++++
 2 files changed, 42 insertions(+), 13 deletions(-)

Index: linux-2.6.10/drivers/net/tc35815_1.c
===================================================================
--- linux-2.6.10.orig/drivers/net/tc35815_1.c
+++ linux-2.6.10/drivers/net/tc35815_1.c
@@ -380,9 +380,21 @@ struct FrFD {
 	struct BDesc bd[RX_BUF_PAGES];
 };
 
+inline unsigned long tc_readl(volatile __u32 * addr)
+{
+	return  readl((void *) addr);
+}
+
+inline void tc_writel(unsigned long data, volatile __u32 * addr)
+{
+	writel(data, (void *) addr);
+}
 
-#define tc_readl(addr)	readl(addr)
-#define tc_writel(d, addr)	writel(d, addr)
+#define TC_DEBUG_MSG  (NETIF_MSG_RX_ERR | \
+			NETIF_MSG_TX_ERR | \
+			NETIF_MSG_HW     | \
+			NETIF_MSG_DRV    | \
+			NETIF_MSG_LINK);
 
 #define TC35815_TX_TIMEOUT  ((400*HZ)/1000)
 
@@ -571,8 +583,7 @@ static void __devinit tc35815_init_dev_a
 #if defined(CONFIG_TOSHIBA_RBTX4939)
 	struct tc35815_local *lp = dev->priv;
 	extern int rbtx4939_get_tx4939_ethaddr(struct pci_dev *dev, unsigned char *addr);
-	if (rbtx4939_get_tx4939_ethaddr &&
-	    rbtx4939_get_tx4939_ethaddr(lp->pci_dev, dev->dev_addr) == 0)
+	if (rbtx4939_get_tx4939_ethaddr(lp->pci_dev, dev->dev_addr) == 0)
 		return;
 #endif
 	while (tc_readl(&tr->PROM_Ctl) & PROM_Busy)
@@ -683,7 +694,7 @@ static int __devinit tc35815_init_one (s
 	spin_lock_init(&lp->lock);
 	lp->pci_dev = pdev;
 
-	lp->msg_enable = NETIF_MSG_TX_ERR | NETIF_MSG_HW | NETIF_MSG_DRV | NETIF_MSG_LINK;
+	lp->msg_enable = TC_DEBUG_MSG;
 	pci_set_drvdata(pdev, dev);
 
 	/* Soft reset the chip. */
@@ -1034,7 +1045,7 @@ static void tc35815_tx_timeout(struct ne
 	struct tc35815_regs *tr = (struct tc35815_regs *)dev->base_addr;
 
 	printk(KERN_WARNING "%s: transmit timed out, status %#x\n",
-	       dev->name, tc_readl(&tr->Tx_Stat));
+	       dev->name, (int) tc_readl(&tr->Tx_Stat));
 
 	/* Try to restart the adaptor. */
 	spin_lock_irq(&lp->lock);
@@ -1261,18 +1272,20 @@ static irqreturn_t tc35815_interrupt(int
 	if (status & Int_IntFDAEx) {
 		/* disable FDAEx int. (until we make rooms...) */
 		tc_writel(tc_readl(&tr->Int_En) & ~Int_FDAExEn, &tr->Int_En);
-		printk(KERN_WARNING
-		       "%s: Free Descriptor Area Exhausted (%#x).\n",
-		       dev->name, status);
+		if (netif_msg_rx_err(lp))
+			printk(KERN_DEBUG 
+				"%s: Free Descriptor Area Exhausted (%#x).\n",
+				dev->name, status);
 		lp->stats.rx_dropped++;
 		handled = 1;
 	}
 	if (status & Int_IntBLEx) {
 		/* disable BLEx int. (until we make rooms...) */
 		tc_writel(tc_readl(&tr->Int_En) & ~Int_BLExEn, &tr->Int_En);
-		printk(KERN_WARNING
-		       "%s: Buffer List Exhausted (%#x).\n",
-		       dev->name, status);
+		if (netif_msg_rx_err(lp))
+			printk(KERN_DEBUG
+				"%s: Buffer List Exhausted (%#x).\n",
+				dev->name, status);
 		lp->stats.rx_dropped++;
 		handled = 1;
 	}
@@ -2063,6 +2076,7 @@ static void tc35815_timer(unsigned long 
 	int pid = lp->phy_addr;
 	unsigned short bmsr, bmcr, lpa;
 	int restart_timer = 0;
+	extern void tx4939_set_pcfg_rmii_speed(struct net_device *dev, int speed);
 
 	spin_lock_irq(&lp->lock);
 
@@ -2135,7 +2149,6 @@ static void tc35815_timer(unsigned long 
 			tc35815_display_link_mode(dev);
 #if defined(CONFIG_TOSHIBA_RBTX4939)
                         lpa = tc_mdio_read(dev, pid, MII_LPA);
-                        extern void tx4939_set_pcfg_rmii_speed(struct net_device *dev, int speed);
                         tx4939_set_pcfg_rmii_speed(dev, lpa & (LPA_100HALF | LPA_100FULL));
 #endif
 			netif_carrier_on(dev);
Index: linux-2.6.10/mvl_patches/pro-1359.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-1359.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2007 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(1359);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

