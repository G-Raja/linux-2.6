#! /usr/bin/env bash
# Patch: -pro_mips_cmbvr4133_rockhopper_irq_fixes
# Date: Tue Nov 28 11:32:50 2006
# Source: MontaVista Software, Inc.
# MR: 18842
# Type: Defect Fix
# Disposition: needs submitting to linux-mips@linux-mips.org
# Signed-off-by: Wade Farnsworth <wfarnsworth@mvista.com>
# Description:
#     Fixes the interrupt handling on the NEC CMB-VR4133 and Rockhopper base
#     board.
# 

PATCHNUM=988
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 18842
Type: Defect Fix
Disposition: needs submitting to linux-mips@linux-mips.org
Signed-off-by: Wade Farnsworth <wfarnsworth@mvista.com>
Description:
    Fixes the interrupt handling on the NEC CMB-VR4133 and Rockhopper base
    board.

Index: linux-2.6.10/arch/mips/pci/fixup-vr4133.c
===================================================================
--- linux-2.6.10.orig/arch/mips/pci/fixup-vr4133.c
+++ linux-2.6.10/arch/mips/pci/fixup-vr4133.c
@@ -184,6 +184,9 @@ int __init pcibios_map_irq(struct pci_de
 	pci_probe_only = 1;
 
 #ifdef CONFIG_ROCKHOPPER
+	/* Ignore swizzled slot number */
+	slot = PCI_SLOT(dev->devfn);
+
 	if( dev->bus->number == 1 && vr4133_rockhopper )  {
 		if(slot == ROCKHOPPER_PCI1_SLOT || slot == ROCKHOPPER_PCI2_SLOT)
 			dev->irq = CMBVR41XX_INTA_IRQ;
Index: linux-2.6.10/arch/mips/vr41xx/nec-cmbvr4133/irq.c
===================================================================
--- linux-2.6.10.orig/arch/mips/vr41xx/nec-cmbvr4133/irq.c
+++ linux-2.6.10/arch/mips/vr41xx/nec-cmbvr4133/irq.c
@@ -72,7 +72,7 @@ static struct hw_interrupt_type i8259_ir
 	.end            = end_i8259_irq,
 };
 
-static int i8259_get_irq_number(int irq)
+static int i8259_get_irq_number(unsigned int irq, struct pt_regs *regs)
 {
 	unsigned long isr;
 
@@ -108,7 +108,5 @@ void __init rockhopper_init_irq(void)
 
 	setup_irq(I8259_SLAVE_IRQ, &i8259_slave_cascade);
 
-	vr41xx_set_irq_trigger(CMBVR41XX_INTC_PIN, TRIGGER_LEVEL, SIGNAL_THROUGH);
-	vr41xx_set_irq_level(CMBVR41XX_INTC_PIN, LEVEL_HIGH);
-	vr41xx_cascade_irq(CMBVR41XX_INTC_IRQ, i8259_get_irq_number);
+	cascade_irq(CMBVR41XX_INTC_IRQ, i8259_get_irq_number);
 }
Index: linux-2.6.10/include/asm-mips/vr41xx/cmbvr4133.h
===================================================================
--- linux-2.6.10.orig/include/asm-mips/vr41xx/cmbvr4133.h
+++ linux-2.6.10/include/asm-mips/vr41xx/cmbvr4133.h
@@ -40,7 +40,7 @@
 
 #define I8259_IRQ_BASE			72
 #define I8259_IRQ(x)			(I8259_IRQ_BASE + (x))
-#define TIMER_IRQ			I8259_IRQ(0)
+#define I8259_TIMER_IRQ			I8259_IRQ(0)
 #define KEYBOARD_IRQ			I8259_IRQ(1)
 #define I8259_SLAVE_IRQ			I8259_IRQ(2)
 #define UART3_IRQ			I8259_IRQ(3)
@@ -60,4 +60,5 @@
 #define RTC_PORT(x)	(0xaf000100 + (x))
 #define RTC_IO_EXTENT	0x140
 
+void rockhopper_init_irq(void);
 #endif /* __NEC_CMBVR4133_H */
Index: linux-2.6.10/arch/mips/vr41xx/nec-cmbvr4133/setup.c
===================================================================
--- linux-2.6.10.orig/arch/mips/vr41xx/nec-cmbvr4133/setup.c
+++ linux-2.6.10/arch/mips/vr41xx/nec-cmbvr4133/setup.c
@@ -84,10 +84,6 @@ static int __init nec_cmbvr4133_setup(vo
 #endif
 #endif
 
-#ifdef CONFIG_ROCKHOPPER
-	rockhopper_init_irq();
-#endif
-
 #ifdef CONFIG_MTD
 	/* we use generic physmap mapping driver and we use partitions */
 	physmap_configure(0x1C000000, 0x02000000, 4, NULL);
@@ -102,5 +98,4 @@ static int __init nec_cmbvr4133_setup(vo
 #endif
 	return 0;
 }
-
 early_initcall(nec_cmbvr4133_setup);
Index: linux-2.6.10/drivers/char/vr41xx_giu.c
===================================================================
--- linux-2.6.10.orig/drivers/char/vr41xx_giu.c
+++ linux-2.6.10/drivers/char/vr41xx_giu.c
@@ -35,6 +35,10 @@
 #include <asm/vr41xx/giu.h>
 #include <asm/vr41xx/vr41xx.h>
 
+#if defined(CONFIG_NEC_CMBVR4133) && defined(CONFIG_ROCKHOPPER)
+#include <asm/vr41xx/cmbvr4133.h>
+#endif
+
 MODULE_AUTHOR("Yoichi Yuasa <yuasa@hh.iij4u.or.jp>");
 MODULE_DESCRIPTION("NEC VR4100 series General-purpose I/O Unit driver");
 MODULE_LICENSE("GPL");
@@ -694,7 +698,17 @@ static int giu_probe(struct device *dev)
 			irq_desc[i].handler = &giuint_high_irq_type;
 	}
 
-	return cascade_irq(GIUINT_IRQ, giu_get_irq);
+	retval = cascade_irq(GIUINT_IRQ, giu_get_irq);
+#ifdef CONFIG_ROCKHOPPER
+	if (!retval) {
+		vr41xx_set_irq_trigger(CMBVR41XX_INTC_PIN, IRQ_TRIGGER_LEVEL,
+				       IRQ_SIGNAL_THROUGH);
+		vr41xx_set_irq_level(CMBVR41XX_INTC_PIN, IRQ_LEVEL_HIGH);
+		rockhopper_init_irq();	
+		enable_giuint_low_irq(CMBVR41XX_INTC_PIN);
+	}
+#endif
+	return retval;
 }
 
 static int giu_remove(struct device *dev)
Index: linux-2.6.10/mvl_patches/pro-0988.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0988.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2006 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(988);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

