#! /usr/bin/env bash
# Patch: -pro_mips_tx4939_ata
# Date: Wed Dec 28 15:03:59 2005
# Source: MontaVista Software, Inc.
# MR: 15477
# Type: Defect Fix
# Disposition: needs submitting to linux-mips.org
# Signed-off-by: Atsuo Igarashi <aigarashi@mvista.com>
# Description:
#     3 specification changes of ATA controller with tx4939
#         1. rename to System Control Register from System Control 1 Register(c00).
#         2. remove System Control 2 Register(c02).
#         3. rewrite to System Control register after write to Device/Head register
#            to secure write to System Control register in ATA100 Core.
#     4 modifications.
#         1. setting PLL with SCLK0 as 0x00030420 (recommended value).
#            This is required on the board older than YAMON revision #3.
#         2. decide PIO mode in tx4939_ide_tune_chipset().
#         3. since there are some values which never set on Interrupt Control Register,
#            they are changed to panic() from printk().
#         4. since it's only used for test purpose, remove FIFO reset code.
# 

PATCHNUM=278
LSPINFO=include/linux/lsppatchlevel.h
TMPFILE=/tmp/mvl_patch_$$

function dopatch() {
    patch $* >${TMPFILE} 2>&1 <<"EOF"
Source: MontaVista Software, Inc.
MR: 15477
Type: Defect Fix
Disposition: needs submitting to linux-mips.org
Signed-off-by: Atsuo Igarashi <aigarashi@mvista.com>
Description:
    3 specification changes of ATA controller with tx4939
        1. rename to System Control Register from System Control 1 Register(c00).
        2. remove System Control 2 Register(c02).
        3. rewrite to System Control register after write to Device/Head register
           to secure write to System Control register in ATA100 Core.
    4 modifications.
        1. setting PLL with SCLK0 as 0x00030420 (recommended value).
           This is required on the board older than YAMON revision #3.
        2. decide PIO mode in tx4939_ide_tune_chipset().
        3. since there are some values which never set on Interrupt Control Register,
           they are changed to panic() from printk().
        4. since it's only used for test purpose, remove FIFO reset code.

Index: linux-2.6.10/arch/mips/tx4939/common/ide.c
===================================================================
--- linux-2.6.10.orig/arch/mips/tx4939/common/ide.c
+++ linux-2.6.10/arch/mips/tx4939/common/ide.c
@@ -37,20 +37,20 @@ void __init tx4939_ide_setup(int ch)
 		       - mips_io_port_base);
 
 	/* Soft Reset */
-	s = reg_rd16(&tx4939_ataptr(ch)->sysctl1);
-	reg_wr16(&tx4939_ataptr(ch)->sysctl1, s | TX4939_ATA_SC_SOFT_RESET);
+	s = reg_rd16(&tx4939_ataptr(ch)->sysctl);
+	reg_wr16(&tx4939_ataptr(ch)->sysctl, s | TX4939_ATA_SC_SOFT_RESET);
 	wbflush();
 	udelay(1);	/* wait for soft reset */
 
 	/* FIFO Reset */
-	s = reg_rd16(&tx4939_ataptr(ch)->sysctl1);
-	reg_wr16(&tx4939_ataptr(ch)->sysctl1, s | TX4939_ATA_SC_FIFO_RESET);
+	s = reg_rd16(&tx4939_ataptr(ch)->sysctl);
+	reg_wr16(&tx4939_ataptr(ch)->sysctl, s | TX4939_ATA_SC_FIFO_RESET);
 	wbflush();
 	udelay(1);
 
 	/* ATA Hard Reset */
-	s = reg_rd16(&tx4939_ataptr(ch)->sysctl1);
-	reg_wr16(&tx4939_ataptr(ch)->sysctl1, s | TX4939_ATA_SC_ATA_HARD_RESET);
+	s = reg_rd16(&tx4939_ataptr(ch)->sysctl);
+	reg_wr16(&tx4939_ataptr(ch)->sysctl, s | TX4939_ATA_SC_ATA_HARD_RESET);
 	wbflush();
 	mdelay(3);	/* wait for device */
 
Index: linux-2.6.10/arch/mips/tx4939/common/proc.c
===================================================================
--- linux-2.6.10.orig/arch/mips/tx4939/common/proc.c
+++ linux-2.6.10/arch/mips/tx4939/common/proc.c
@@ -778,10 +778,8 @@ tx4939_proc_show_ide0(char *sysbuf, char
 		      int count, int *eof, void *data)
 {
 	int len = 0;
-	len += sprintf(sysbuf + len, "tx4939_ataptr(0) ->sysctl1    : 0x%04x\n",
-		       reg_rd16(&tx4939_ataptr(0)->sysctl1));
-	len += sprintf(sysbuf + len, "tx4939_ataptr(0) ->sysctl2    : 0x%04x\n",
-		       reg_rd16(&tx4939_ataptr(0)->sysctl2));
+	len += sprintf(sysbuf + len, "tx4939_ataptr(0) ->sysctl     : 0x%04x\n",
+		       reg_rd16(&tx4939_ataptr(0)->sysctl));
 	len += sprintf(sysbuf + len, "tx4939_ataptr(0) ->xfer_cnt1  : 0x%04x\n",
 		       reg_rd16(&tx4939_ataptr(0)->xfer_cnt1));
 	len += sprintf(sysbuf + len, "tx4939_ataptr(0) ->xfer_cnt2  : 0x%04x\n",
@@ -817,10 +815,8 @@ tx4939_proc_show_ide1(char *sysbuf, char
 		      int count, int *eof, void *data)
 {
 	int len = 0;
-	len += sprintf(sysbuf + len, "tx4939_ataptr(1) ->sysctl1    : 0x%04x\n",
-		       reg_rd16(&tx4939_ataptr(1)->sysctl1));
-	len += sprintf(sysbuf + len, "tx4939_ataptr(1) ->sysctl2    : 0x%04x\n",
-		       reg_rd16(&tx4939_ataptr(1)->sysctl2));
+	len += sprintf(sysbuf + len, "tx4939_ataptr(1) ->sysctl     : 0x%04x\n",
+		       reg_rd16(&tx4939_ataptr(1)->sysctl));
 	len += sprintf(sysbuf + len, "tx4939_ataptr(1) ->xfer_cnt1  : 0x%04x\n",
 		       reg_rd16(&tx4939_ataptr(1)->xfer_cnt1));
 	len += sprintf(sysbuf + len, "tx4939_ataptr(1) ->xfer_cnt2  : 0x%04x\n",
Index: linux-2.6.10/arch/mips/tx4939/common/setup.c
===================================================================
--- linux-2.6.10.orig/arch/mips/tx4939/common/setup.c
+++ linux-2.6.10/arch/mips/tx4939/common/setup.c
@@ -204,6 +204,9 @@ static void __init tx4939_ccfg_setup(voi
 	q = reg_rd64s(&tx4939_ccfgptr->mclkctl);
 	reg_wr64s(&tx4939_ccfgptr->mclkctl, q | TX4939_MCLKCTL_BDE);
 
+        /* MCLKOSC setting */
+        reg_wr64s(&tx4939_ccfgptr->mclkosc, 0x00030420);
+
 	tx4939_ccfg_bootlog();
 }
 
Index: linux-2.6.10/drivers/ide/mips/ide-tx4939.c
===================================================================
--- linux-2.6.10.orig/drivers/ide/mips/ide-tx4939.c
+++ linux-2.6.10/drivers/ide/mips/ide-tx4939.c
@@ -35,6 +35,9 @@
 /* add command line TX4939 IDE DMA setteing */
 byte tx4939_ide_udma_mode;
 
+/* tx4939 ata transfer mode */
+static u16 transfer_mode[4];
+
 /* wait for transfer end */
 static u16 wait_transfer_end[2];
 
@@ -51,8 +54,8 @@ void tx4939_ide_softreset(ide_drive_t * 
 	hi_bcnt = reg_rd16(&tx4939_ataptr(ch)->hi_bcnt);
 
 	/* Soft Reset */
-	s = reg_rd16(&tx4939_ataptr(ch)->sysctl1);
-	reg_wr16(&tx4939_ataptr(ch)->sysctl1, s|TX4939_ATA_SC_SOFT_RESET);
+	s = reg_rd16(&tx4939_ataptr(ch)->sysctl);
+	reg_wr16(&tx4939_ataptr(ch)->sysctl, s|TX4939_ATA_SC_SOFT_RESET);
 	wbflush();
 	udelay(1);
 
@@ -79,52 +82,40 @@ void tx4939_ide_softreset(ide_drive_t * 
 
 static void tx4939_ide_tune_drive(ide_drive_t * drive, byte pio)
 {
-	u16 data = 0;
 	u16 mode = 0;
 	byte speed = XFER_PIO_0;
-	unsigned long data_port;
-	unsigned long sc_port;
-	int is_slave = (&HWIF(drive)->drives[1] == drive);
-	ide_hwif_t *hwif = drive->hwif;
-
-	data_port = (unsigned long)hwif->io_ports[IDE_DATA_OFFSET];
-	sc_port = (!is_slave) ?
-		data_port + TX4939_ATA_SYSTEM_CONTROL1_OFFSET :
-		data_port + TX4939_ATA_SYSTEM_CONTROL2_OFFSET;
-
-	if (!hwif->channel) {	/* primary */
-		pio = ide_get_best_pio_mode(drive, pio, 4, NULL);
-		switch (pio) {
-		case 4:
-			mode = TX4939_ATA_SC_MODE_XFER_PIO_4;
-			speed = XFER_PIO_4;
-			break;
-		case 3:
-			mode = TX4939_ATA_SC_MODE_XFER_PIO_3;
-			speed = XFER_PIO_3;
-			break;
-		case 2:
-			mode = TX4939_ATA_SC_MODE_XFER_PIO_2;
-			speed = XFER_PIO_2;
-			break;
-		case 1:
-			mode = TX4939_ATA_SC_MODE_XFER_PIO_1;
-			speed = XFER_PIO_1;
-			break;
-		case 0:
-			mode = TX4939_ATA_SC_MODE_XFER_PIO_0;
-			speed = XFER_PIO_0;
-			break;
-		default:
-			break;
-		}
+	int is_slave = (&HWIF(drive)->drives[1] == drive ? 1 : 0);
+	int ch = GET_CH(HWIF(drive));
 
-		data = inw(sc_port);
-		data &= ~TX4939_ATA_SC_MODE_MASK;
-		data |= mode;
-		outw(data, sc_port);
+	pio = ide_get_best_pio_mode(drive, pio, 4, NULL);
+	switch (pio) {
+	case 4:
+		mode = TX4939_ATA_SC_MODE_XFER_PIO_4;
+		speed = XFER_PIO_4;
+		break;
+	case 3:
+		mode = TX4939_ATA_SC_MODE_XFER_PIO_3;
+		speed = XFER_PIO_3;
+		break;
+	case 2:
+		mode = TX4939_ATA_SC_MODE_XFER_PIO_2;
+		speed = XFER_PIO_2;
+		break;
+	case 1:
+		mode = TX4939_ATA_SC_MODE_XFER_PIO_1;
+		speed = XFER_PIO_1;
+		break;
+	case 0:
+		mode = TX4939_ATA_SC_MODE_XFER_PIO_0;
+		speed = XFER_PIO_0;
+		break;
+	default:
+		break;
 	}
 
+	reg_wr16(&tx4939_ataptr(ch)->sysctl, mode);
+	transfer_mode[ch*2 + is_slave] = mode;
+
 	drive->current_speed = speed;
 	ide_config_drive_speed(drive, speed);
 }
@@ -139,59 +130,48 @@ static void tx4939_ide_tune_drive(ide_dr
 
 static int tx4939_ide_tune_chipset(ide_drive_t * drive, byte speed)
 {
-	u16 data = 0;
-	u16 mode = 0;
-	unsigned long data_port;
-	unsigned long sc_port;
+	u16 mode;
 	int err;
 
-	int is_slave = (&HWIF(drive)->drives[1] == drive);
-	ide_hwif_t *hwif = HWIF(drive);
-	data_port = (unsigned long)hwif->io_ports[IDE_DATA_OFFSET];
-	sc_port = (!is_slave) ?
-		data_port + TX4939_ATA_SYSTEM_CONTROL1_OFFSET :
-		data_port + TX4939_ATA_SYSTEM_CONTROL2_OFFSET;
-
-	if (!hwif->channel) {
-		switch (speed) {
-		case XFER_UDMA_5:
-			mode = TX4939_ATA_SC_MODE_XFER_UDMA_5;
-			break;
-		case XFER_UDMA_4:
-			mode = TX4939_ATA_SC_MODE_XFER_UDMA_4;
-			break;
-		case XFER_UDMA_3:
-			mode = TX4939_ATA_SC_MODE_XFER_UDMA_3;
-			break;
-		case XFER_UDMA_2:
-			mode = TX4939_ATA_SC_MODE_XFER_UDMA_2;
-			break;
-		case XFER_UDMA_1:
-			mode = TX4939_ATA_SC_MODE_XFER_UDMA_1;
-			break;
-		case XFER_UDMA_0:
-			mode = TX4939_ATA_SC_MODE_XFER_UDMA_0;
-			break;
-		case XFER_MW_DMA_2:
-			mode = TX4939_ATA_SC_MODE_XFER_MDMA_2;
-			break;
-		case XFER_MW_DMA_1:
-			mode = TX4939_ATA_SC_MODE_XFER_MDMA_1;
-			break;
-		case XFER_MW_DMA_0:
-			mode = TX4939_ATA_SC_MODE_XFER_MDMA_0;
-			break;
-		default:
-			return -1;
-		}
+	int is_slave = (&HWIF(drive)->drives[1] == drive ? 1 : 0);
+	int ch = GET_CH(HWIF(drive));
 
-		data = inw(sc_port);
-		data &= ~TX4939_ATA_SC_MODE_MASK;
-		data |=
-			mode | (TX4939_ATA_SC_MODE_XFER_PIO_4 &
-				TX4939_ATA_SC_CMD_MODE_MASK);
-		outw(data, sc_port);
-	}
+	tx4939_ide_tune_drive(drive, 4);
+	switch (speed) {
+	case XFER_UDMA_5:
+		mode = TX4939_ATA_SC_MODE_XFER_UDMA_5;
+		break;
+	case XFER_UDMA_4:
+		mode = TX4939_ATA_SC_MODE_XFER_UDMA_4;
+		break;
+	case XFER_UDMA_3:
+		mode = TX4939_ATA_SC_MODE_XFER_UDMA_3;
+		break;
+	case XFER_UDMA_2:
+		mode = TX4939_ATA_SC_MODE_XFER_UDMA_2;
+		break;
+	case XFER_UDMA_1:
+		mode = TX4939_ATA_SC_MODE_XFER_UDMA_1;
+		break;
+	case XFER_UDMA_0:
+		mode = TX4939_ATA_SC_MODE_XFER_UDMA_0;
+		break;
+	case XFER_MW_DMA_2:
+		mode = TX4939_ATA_SC_MODE_XFER_MDMA_2;
+		break;
+	case XFER_MW_DMA_1:
+		mode = TX4939_ATA_SC_MODE_XFER_MDMA_1;
+		break;
+	case XFER_MW_DMA_0:
+		mode = TX4939_ATA_SC_MODE_XFER_MDMA_0;
+		break;
+	default:
+		return -1;
+	}
+	mode &= ~TX4939_ATA_SC_CMD_MODE_MASK;
+	mode |= (transfer_mode[ch*2 + is_slave] & TX4939_ATA_SC_CMD_MODE_MASK);
+	reg_wr16(&tx4939_ataptr(ch)->sysctl, mode);
+	transfer_mode[ch*2 + is_slave] = mode;
 
 	if (!drive->init_speed) {
 		drive->init_speed = speed;
@@ -288,14 +268,15 @@ static int tx4939_ide_intr(struct hwif_s
 	/* get and clear interrupt status */
 	int_ctl = reg_rd16(&tx4939_ataptr(ch)->int_ctl);
 	reg_wr16(&tx4939_ataptr(ch)->int_ctl, int_ctl);
-#ifdef  DEBUG
+
 	/* check error sattus */
 	if (int_ctl & INT_ERROR_MASK) {
 		if (int_ctl & TX4939_ATA_IC_ADDRESS_ERROR_INT)
-			printk(KERN_INFO "%s: Address Error\n", drive->name);
+			panic("%s: Address Error\n", drive->name);
 		if (int_ctl & TX4939_ATA_IC_REACH_MALTIPLE_INT)
-			printk(KERN_INFO "%s: PIO transfer in the break state\n",
-			       drive->name);
+			panic("%s: PIO transfer in the break state\n",
+                              drive->name);
+#ifdef  DEBUG
 		if (int_ctl & TX4939_ATA_IC_DEV_TIMING_ERROR)
 			printk(KERN_INFO "%s: Device timing error (out of spec) - 0x%04x\n",
 			       drive->name, reg_rd16(&tx4939_ataptr(ch)->dev_terr));
@@ -304,10 +285,11 @@ static int tx4939_ide_intr(struct hwif_s
 			       "%s: The device terminated DMA transfer\n",
 			       drive->name);
 		}
+#endif
 		if (int_ctl & TX4939_ATA_IC_BUS_ERROR)
-			printk(KERN_INFO "%s: Bus error\n", drive->name);
+			panic("%s: Bus error\n", drive->name);
 	}
-#endif
+
 	/* wait for transfer end in DMA mode */
 	if (drive->waiting_for_dma == 1) {
 		wait_transfer_end[ch] |= int_ctl;
@@ -431,15 +413,6 @@ static int tx4939_ide_dma_setup(ide_driv
 	unsigned int ch = GET_CH(HWIF(drive));
 	ide_hwif_t *hwif = HWIF(drive);
 	struct request *rq = HWGROUP(drive)->rq;
-	unsigned int reading;
-	u8 dma_stat;
-	u16 s;
-
-	/* FIFO reset */
-	s = reg_rd16(&tx4939_ataptr(ch)->sysctl1);
-	reg_wr16(&tx4939_ataptr(ch)->sysctl1, s|TX4939_ATA_SC_FIFO_RESET);
-	wbflush();
-	udelay(1);	/* ATA I/F controller spec 12 UPSCLK cycles */
 
 	/* set sector count (cpu:c10h) */
 	if (!IS_ATAPI(drive)) {
@@ -467,6 +440,22 @@ static int tx4939_ide_dma_setup(ide_driv
 	return ide_dma_setup(drive);
 }
 
+static void tx4939_ide_outb (u8 val, unsigned long port)
+{
+	outb(val, port);
+	/* if Device/Head register access */
+	if ((port & 0xfff) == TX4939_ATA_DEVICE_OFFSET) {
+		unsigned int ch;
+		u8 dev;
+
+		ch = ((port & 0xf000) == 0x4000 ? 1 : 0);
+		dev = (val & 0x10 ? 1 : 0); /* DEV bit */
+
+		/* rewrite transfer mode to System Control Register */
+		reg_wr16(&tx4939_ataptr(ch)->sysctl, transfer_mode[ch*2 + dev]);
+	}
+}
+
 /**
  * tx4939_ide_init - initialize TX4939 IDE function
  * @ch: TX4939-ATA controller channel
@@ -512,11 +501,13 @@ void __init tx4939_ide_init(int ch)
 
 	hwif->mmio = 0;
 
+	hwif->OUTB = tx4939_ide_outb;
+
 	/* cable(PDIAGN) check */
 	if (!(hwif->udma_four)) {
 		unsigned int pdiagn;
 		/* bit13(PDIAGN) = 0:(80pin cable) 1:(40pin cable) */
-		pdiagn = (reg_rd16(&tx4939_ataptr(ch)->sysctl1) & TX4939_ATA_SC_PDIAGN);
+		pdiagn = (reg_rd16(&tx4939_ataptr(ch)->sysctl) & TX4939_ATA_SC_PDIAGN);
 		hwif->udma_four = pdiagn ? 0 : 1;
 	}
 #ifdef CONFIG_BLK_DEV_IDEDMA
Index: linux-2.6.10/include/asm-mips/tx4939/tx4939.h
===================================================================
--- linux-2.6.10.orig/include/asm-mips/tx4939/tx4939.h
+++ linux-2.6.10/include/asm-mips/tx4939/tx4939.h
@@ -256,7 +256,7 @@ struct tx4939_ata_reg {
 	endian_def_b8(unused20, unused21, unused22, prd_tbl, unused24,
 		      dma_stat, unused26, dma_cmd);
 	u64 unused2[127];
-	endian_def_s4(unused30, unused31, sysctl2, sysctl1);	/* +0xc00 */
+	endian_def_s4(unused30, unused31, unused25, sysctl);	/* +0xc00 */
 	endian_def_s4(unused32, unused33, xfer_cnt2, xfer_cnt1);
 	endian_def_s4(unused34, unused35, unused36, sec_cnt);
 	endian_def_s4(unused37, unused38, unused39, strt_addl);
@@ -1569,7 +1569,7 @@ struct tx4939_cir_reg {
 #define TX4939_ATA_LBA_LOW_OFFSET         0x003
 #define TX4939_ATA_LBA_MID_OFFSET         0x004
 #define TX4939_ATA_LBA_HIGH_OFFSET        0x005
-#define TX4939_ATA_DRIVE_OFFSET           0x006
+#define TX4939_ATA_DEVICE_OFFSET          0x006
 #define TX4939_ATA_STATUS_OFFSET          0x007
 
 #define TX4939_ATA_DEVICE_CONTROL_OFFSET  0x402
Index: linux-2.6.10/mvl_patches/pro-0278.c
===================================================================
--- /dev/null
+++ linux-2.6.10/mvl_patches/pro-0278.c
@@ -0,0 +1,16 @@
+/*
+ * Author: MontaVista Software, Inc. <source@mvista.com>
+ *
+ * 2005 (c) MontaVista Software, Inc. This file is licensed under
+ * the terms of the GNU General Public License version 2. This program
+ * is licensed "as is" without any warranty of any kind, whether express
+ * or implied.
+ */
+#include <linux/init.h>
+#include <linux/mvl_patch.h>
+
+static __init int regpatch(void)
+{
+        return mvl_register_patch(278);
+}
+module_init(regpatch);
EOF

    rv=0
    cat /tmp/mvl_patch_$$
    if [ "$?" != "0" ]; then
	# Patch had a hard error, return 2
	rv=2
    elif grep '^Hunk' ${TMPFILE}; then
	rv=1
    fi

    rm -f ${TMPFILE}
    return $rv
}

function options() {
    echo "Options are:"
    echo "  --force-unsupported - Force the patch to be applied even if the"
    echo "      patch is out of order or the current kernel is unsupported."
    echo "      Use of this option is strongly discouraged."
    echo "  --force-apply-fuzz - If the patch has fuzz, go ahead and apply"
    echo "      it anyway.  This can occur if the patch is applied to an"
    echo "      unsupported kernel or applied out of order or if you have"
    echo "      made your own modifications to the kernel.  Use with"
    echo "      caution."
    echo "  --remove - Remove the patch"
}


function checkpatchnum() {
    local level;

    if [ ! -e ${1} ]; then
	echo "${1} does not exist, make sure you are in the kernel" 1>&2
	echo "base directory" 1>&2
	exit 1;
    fi

    # Extract the current patch number from the lsp info file.
    level=`grep '#define LSP_.*PATCH_LEVEL' ${1} | sed 's/^.*\"\\(.*\\)\".*\$/\\1/'`
    if [ "a$level" = "a" ]; then
	echo "No patch level defined in ${1}, are you sure this is" 1>&2
	echo "a valid MVL kernel LSP?" 1>&2
	exit 1;
    fi

    expr $level + 0 >/dev/null 2>&1
    isnum=$?

    # Check if the kernel is supported
    if [ "$level" = "unsupported" ]; then
	echo "**Current kernel is unsupported by MontaVista due to patches"
	echo "  begin applied out of order."
	if [ $force_unsupported == 't' ]; then
	    echo "  Application is forced, applying patch anyway"
	    unsupported=t
	    fix_patch_level=f
	else
	    echo "  Patch application aborted.  Use --force-unsupported to"
	    echo "  force the patch to be applied, but the kernel will not"
	    echo "  be supported by MontaVista."
	    exit 1;
	fi

    # Check the patch number from the lspinfo file to make sure it is
    # a valid number
    elif [ $isnum = 2 ]; then
	echo "**Patch level from ${1} was not a valid number, " 1>&2
	echo "  are you sure this is a valid MVL kernel LSP?" 1>&2
	exit 1;

    # Check that this is the right patch number to be applied.
    elif [ `expr $level $3` ${4} ${2} ]; then
	echo "**Application of this patch is out of order and will cause the"
	echo "  kernel to be unsupported by MontaVista."
	if [ $force_unsupported == 't' ]; then
	    echo "  application is forced, applying patch anyway"
	    unsupported=t
	else
	    echo "  Patch application aborted.  Please get all the patches in"
	    echo "  proper order from MontaVista Zone and apply them in order"
	    echo "  If you really want to apply this patch, use"
	    echo "  --force-unsupported to force the patch to be applied, but"
	    echo "  the kernel will not be supported by MontaVista."
	    exit 1;
	fi
    fi
}

#
# Update the patch level in the file.  Note that we use patch to do
# this.  Certain weak version control systems don't take kindly to
# arbitrary changes directly to files, but do have a special version
# of "patch" that understands this.
#
function setpatchnum() {
    sed "s/^#define LSP_\(.*\)PATCH_LEVEL[ \t*]\"[0-9]*\".*$/#define LSP_\1PATCH_LEVEL \"${2}\"/" <${1} >/tmp/$$.tmp1
    diff -u ${1} /tmp/$$.tmp1 >/tmp/$$.tmp2
    rm /tmp/$$.tmp1
    sed "s/^+++ \/tmp\/$$.tmp1/+++ include\/linux\/lsppatchlevel.h/" </tmp/$$.tmp2 >/tmp/$$.tmp1
    rm /tmp/$$.tmp2
    patch -p0 </tmp/$$.tmp1
    rm /tmp/$$.tmp1
}

force_unsupported=f
force_apply_fuzz=""
unsupported=f
fix_patch_level=t
reverse=f
common_patchnum_diff='+ 1'
common_patchnum=$PATCHNUM
patch_extraopts=''

# Extract command line parameters.
while [ $# -gt 0 ]; do
    if [ "a$1" == 'a--force-unsupported' ]; then
	force_unsupported=t
    elif [ "a$1" == 'a--force-apply-fuzz' ]; then
	force_apply_fuzz=y
    elif [ "a$1" == 'a--remove' ]; then
	reverse=t
	common_patchnum_diff=''
	common_patchnum=`expr $PATCHNUM - 1`
	patch_extraopts='--reverse'
    else
	echo "'$1' is an invalid command line parameter."
	options
	exit 1
    fi
    shift
done

echo "Checking patch level"
checkpatchnum ${LSPINFO} ${PATCHNUM} "${common_patchnum_diff}" "-ne"

if ! dopatch -p1 --dry-run --force $patch_extraopts; then
    if [ $? = 2 ]; then
	echo -n "**Patch had errors, application aborted" 1>&2
	exit 1;
    fi

    # Patch has warnings
    clean_apply=${force_apply_fuzz}
    while [ "a$clean_apply" != 'ay' -a "a$clean_apply" != 'an' ]; do
	echo -n "**Patch did not apply cleanly.  Do you still want to apply? (y/n) > "
	read clean_apply
	clean_apply=`echo "$clean_apply" | tr '[:upper:]' '[:lower:]'`
    done
    if [ $clean_apply = 'n' ]; then
	exit 1;
    fi
fi

dopatch -p1 --force $patch_extraopts

if [ $fix_patch_level = 't' ]; then 
    if [ $unsupported = 't' ]; then
	common_patchnum="unsupported"
    fi

    setpatchnum ${LSPINFO} ${common_patchnum}
fi

# Move the patch file into the mvl_patches directory if we are not reversing
if [ $reverse != 't' ]; then 
    if echo $0 | grep '/' >/dev/null; then
	# Filename is a path, either absolute or from the current directory.
	srcfile=$0
    else
	# Filename is from the path
	for i in `echo $PATH | tr ':;' '  '`; do
	    if [ -e ${i}/$0 ]; then
		srcfile=${i}/$0
	    fi
	done
    fi

    fname=`basename ${srcfile}`
    diff -uN mvl_patches/${fname} ${srcfile} | (cd mvl_patches; patch)
fi

